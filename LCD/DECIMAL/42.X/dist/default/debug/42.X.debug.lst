

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 16 19:03:14 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     052D                     __pidataBANK0:
   180                           
   181                           ;initializer for _k
   182     052D  3453               	retlw	83
   183     052E  3445               	retlw	69
   184     052F  3454               	retlw	84
   185     0530  3420               	retlw	32
   186     0531  3453               	retlw	83
   187     0532  3450               	retlw	80
   188     0533  3444               	retlw	68
   189     0534  343A               	retlw	58
   190     0535  3420               	retlw	32
   191     0536  3420               	retlw	32
   192     0537  3420               	retlw	32
   193     0538  3420               	retlw	32
   194     0539  3472               	retlw	114
   195     053A  3470               	retlw	112
   196     053B  346D               	retlw	109
   197     053C  3400               	retlw	0
   198     053D  3400               	retlw	0
   199     053E  3400               	retlw	0
   200     053F  3400               	retlw	0
   201     0540  3400               	retlw	0
   202     0007                     _PORTC	set	7
   203     0006                     _PORTB	set	6
   204     0008                     _PORTD	set	8
   205     0081                     _OPTION_REG	set	129
   206     0086                     _TRISB	set	134
   207     0088                     _TRISD	set	136
   208     0087                     _TRISC	set	135
   209                           
   210                           	psect	cinit
   211     07DE                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07DE                     __initialization:
   215                           
   216                           ; Initialize objects allocated to BANK0
   217     07DE  1383               	bcf	3,7	;select IRP bank0
   218     07DF  3034               	movlw	low (__pdataBANK0+20)
   219     07E0  00FD               	movwf	btemp+-1
   220     07E1  3005               	movlw	high __pidataBANK0
   221     07E2  00FE               	movwf	btemp
   222     07E3  302D               	movlw	low __pidataBANK0
   223     07E4  00FF               	movwf	btemp+1
   224     07E5  3020               	movlw	low __pdataBANK0
   225     07E6  0084               	movwf	4
   226     07E7  120A  118A  250A  120A  118A  	fcall	init_ram0
   227                           
   228                           ; Clear objects allocated to BANK0
   229     07EC  01B4               	clrf	__pbssBANK0& (0+127)
   230     07ED  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   231     07EE  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   232     07EF  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   233     07F0  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   234     07F1  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   235     07F2  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   236     07F3  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   237     07F4  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   238     07F5  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   239     07F6  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   240     07F7  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   241     07F8  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   242     07F9  01C1               	clrf	(__pbssBANK0+13)& (0+127)
   243     07FA  01C2               	clrf	(__pbssBANK0+14)& (0+127)
   244                           
   245                           ; Clear objects allocated to COMMON
   246     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   247     07FC                     end_of_initialization:	
   248                           ;End of C runtime variable initialization code
   249                           
   250     07FC                     __end_of__initialization:
   251     07FC  0183               	clrf	3
   252     07FD  120A  118A  2E3A   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMMON
   255     007D                     __pbssCOMMON:
   256     007D                     _m:
   257     007D                     	ds	1
   258                           
   259                           	psect	bssBANK0
   260     0034                     __pbssBANK0:
   261     0034                     _i:
   262     0034                     	ds	2
   263     0036                     _j:
   264     0036                     	ds	2
   265     0038                     _d4:
   266     0038                     	ds	2
   267     003A                     _d3:
   268     003A                     	ds	2
   269     003C                     _d2:
   270     003C                     	ds	2
   271     003E                     _d1:
   272     003E                     	ds	2
   273     0040                     _n:
   274     0040                     	ds	1
   275     0041                     _value:
   276     0041                     	ds	1
   277     0042                     _x:
   278     0042                     	ds	1
   279                           
   280                           	psect	dataBANK0
   281     0020                     __pdataBANK0:
   282     0020                     _k:
   283     0020                     	ds	20
   284                           
   285                           	psect	inittext
   286     0506                     init_fetch0:	
   287                           ;	Called with low address in FSR and high address in W
   288                           
   289     0506  087E               	movf	btemp,w
   290     0507  008A               	movwf	10
   291     0508  087F               	movf	btemp+1,w
   292     0509  0082               	movwf	2
   293     050A                     init_ram0:	
   294                           ;Called with:
   295                           ;	high address of idata address in btemp 
   296                           ;	low address of idata address in btemp+1 
   297                           ;	low address of data in FSR
   298                           ;	high address + 1 of data in btemp-1
   299                           
   300     050A  120A  118A  2506  120A  118A  	fcall	init_fetch0
   301     050F  0080               	movwf	0
   302     0510  0A84               	incf	4,f
   303     0511  0804               	movf	4,w
   304     0512  067D               	xorwf	btemp+-1,w
   305     0513  1903               	btfsc	3,2
   306     0514  3400               	retlw	0
   307     0515  0AFF               	incf	btemp+1,f
   308     0516  1903               	btfsc	3,2
   309     0517  0AFE               	incf	btemp,f
   310     0518  2D0A               	goto	init_ram0
   311                           
   312                           	psect	cstackCOMMON
   313     0070                     __pcstackCOMMON:
   314     0070                     ?_initiate:
   315     0070                     ?_lcd_command:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_lcd_command:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_lcd_data:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_lcd_data:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?___bmul:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?___wmul:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ___bmul@multiplicand:	
   337                           ; 2 bytes @ 0x0
   338                           
   339     0070                     ___wmul@multiplier:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 2 bytes @ 0x0
   344     0070                     	ds	1
   345     0071                     ??___bmul:
   346     0071                     ___bmul@product:	
   347                           ; 1 bytes @ 0x1
   348                           
   349                           
   350                           ; 1 bytes @ 0x1
   351     0071                     	ds	1
   352     0072                     lcd_data@i:
   353     0072                     lcd_command@i:	
   354                           ; 1 bytes @ 0x2
   355                           
   356     0072                     ___bmul@multiplier:	
   357                           ; 1 bytes @ 0x2
   358                           
   359     0072                     ___wmul@multiplicand:	
   360                           ; 1 bytes @ 0x2
   361                           
   362                           
   363                           ; 2 bytes @ 0x2
   364     0072                     	ds	1
   365     0073                     ??_initiate:
   366                           
   367                           ; 1 bytes @ 0x3
   368     0073                     	ds	1
   369     0074                     ??___wmul:
   370     0074                     ___wmul@product:	
   371                           ; 1 bytes @ 0x4
   372                           
   373                           
   374                           ; 2 bytes @ 0x4
   375     0074                     	ds	2
   376     0076                     ?___lwdiv:
   377     0076                     ___lwdiv@divisor:	
   378                           ; 2 bytes @ 0x6
   379                           
   380                           
   381                           ; 2 bytes @ 0x6
   382     0076                     	ds	2
   383     0078                     ___lwdiv@dividend:
   384                           
   385                           ; 2 bytes @ 0x8
   386     0078                     	ds	2
   387     007A                     ??___lwdiv:
   388     007A                     ___lwdiv@quotient:	
   389                           ; 1 bytes @ 0xA
   390                           
   391                           
   392                           ; 2 bytes @ 0xA
   393     007A                     	ds	2
   394     007C                     ___lwdiv@counter:
   395                           
   396                           ; 1 bytes @ 0xC
   397     007C                     	ds	1
   398     007D                     ??_main:
   399                           
   400                           	psect	cstackBANK0
   401     0043                     __pcstackBANK0:	
   402                           ; 1 bytes @ 0xD
   403                           
   404     0043                     ?_lcd_out:
   405     0043                     lcd_out@i:	
   406                           ; 1 bytes @ 0x0
   407                           
   408                           
   409                           ; 2 bytes @ 0x0
   410     0043                     	ds	2
   411     0045                     ??_lcd_out:
   412                           
   413                           ; 1 bytes @ 0x2
   414     0045                     	ds	6
   415                           
   416                           	psect	maintext
   417     063A                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 20 in file "42.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          0       0       0       0       0
   440 ;;      Totals:         0       0       0       0       0
   441 ;;Total ram usage:        0 bytes
   442 ;; Hardware stack levels required when called: 2
   443 ;; This function calls:
   444 ;;		_initiate
   445 ;;		_lcd_command
   446 ;;		_lcd_data
   447 ;;		_lcd_out
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453     063A                     _main:	
   454                           ;psect for function _main
   455                           
   456     063A                     l900:	
   457                           ;incstack = 0
   458                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   459                           
   460     063A  120A  118A  25D6  120A  118A  	fcall	_initiate
   461     063F                     l902:
   462     063F  1283               	bcf	3,5	;RP0=0, select bank0
   463     0640  1303               	bcf	3,6	;RP1=0, select bank0
   464     0641  0808               	movf	8,w	;volatile
   465     0642  00C1               	movwf	_value
   466     0643  2EF3               	goto	l960
   467     0644                     l904:
   468     0644  3080               	movlw	128
   469     0645  120A  118A  2556  120A  118A  	fcall	_lcd_command
   470     064A                     l906:
   471     064A  1283               	bcf	3,5	;RP0=0, select bank0
   472     064B  1303               	bcf	3,6	;RP1=0, select bank0
   473     064C  01C2               	clrf	_x
   474     064D                     l912:
   475     064D  0842               	movf	_x,w
   476     064E  3E20               	addlw	(low (_k| 0))& (0+255)
   477     064F  0084               	movwf	4
   478     0650  1383               	bcf	3,7	;select IRP bank0
   479     0651  0800               	movf	0,w
   480     0652  120A  118A  2519  120A  118A  	fcall	_lcd_data
   481     0657                     l914:
   482     0657  3001               	movlw	1
   483     0658  00FF               	movwf	btemp+1
   484     0659  087F               	movf	btemp+1,w
   485     065A  1283               	bcf	3,5	;RP0=0, select bank0
   486     065B  1303               	bcf	3,6	;RP1=0, select bank0
   487     065C  07C2               	addwf	_x,f
   488     065D                     l916:
   489     065D  3008               	movlw	8
   490     065E  0242               	subwf	_x,w
   491     065F  1C03               	skipc
   492     0660  2E62               	goto	u311
   493     0661  2E63               	goto	u310
   494     0662                     u311:
   495     0662  2E4D               	goto	l912
   496     0663                     u310:
   497     0663                     l918:
   498     0663  308C               	movlw	140
   499     0664  120A  118A  2556  120A  118A  	fcall	_lcd_command
   500     0669                     l920:
   501     0669  300C               	movlw	12
   502     066A  1283               	bcf	3,5	;RP0=0, select bank0
   503     066B  1303               	bcf	3,6	;RP1=0, select bank0
   504     066C  00C2               	movwf	_x
   505     066D                     l926:
   506     066D  0842               	movf	_x,w
   507     066E  3E20               	addlw	(low (_k| 0))& (0+255)
   508     066F  0084               	movwf	4
   509     0670  1383               	bcf	3,7	;select IRP bank0
   510     0671  0800               	movf	0,w
   511     0672  120A  118A  2519  120A  118A  	fcall	_lcd_data
   512     0677                     l928:
   513     0677  3001               	movlw	1
   514     0678  00FF               	movwf	btemp+1
   515     0679  087F               	movf	btemp+1,w
   516     067A  1283               	bcf	3,5	;RP0=0, select bank0
   517     067B  1303               	bcf	3,6	;RP1=0, select bank0
   518     067C  07C2               	addwf	_x,f
   519     067D                     l930:
   520     067D  300F               	movlw	15
   521     067E  0242               	subwf	_x,w
   522     067F  1C03               	skipc
   523     0680  2E82               	goto	u321
   524     0681  2E83               	goto	u320
   525     0682                     u321:
   526     0682  2E6D               	goto	l926
   527     0683                     u320:
   528     0683                     l932:
   529     0683  3088               	movlw	136
   530     0684  120A  118A  2556  120A  118A  	fcall	_lcd_command
   531     0689  1283               	bcf	3,5	;RP0=0, select bank0
   532     068A  1303               	bcf	3,6	;RP1=0, select bank0
   533     068B  0837               	movf	_j+1,w
   534     068C  00C4               	movwf	lcd_out@i+1
   535     068D  0836               	movf	_j,w
   536     068E  00C3               	movwf	lcd_out@i
   537     068F  120A  118A  2705  120A  118A  	fcall	_lcd_out
   538     0694  2F01               	goto	l63
   539     0695                     l934:
   540     0695  3001               	movlw	1
   541     0696  07B6               	addwf	_j,f
   542     0697  1803               	skipnc
   543     0698  0AB7               	incf	_j+1,f
   544     0699  3000               	movlw	0
   545     069A  07B7               	addwf	_j+1,f
   546     069B                     l936:
   547     069B  3088               	movlw	136
   548     069C  120A  118A  2556  120A  118A  	fcall	_lcd_command
   549     06A1                     l938:
   550     06A1  1283               	bcf	3,5	;RP0=0, select bank0
   551     06A2  1303               	bcf	3,6	;RP1=0, select bank0
   552     06A3  0837               	movf	_j+1,w
   553     06A4  00C4               	movwf	lcd_out@i+1
   554     06A5  0836               	movf	_j,w
   555     06A6  00C3               	movwf	lcd_out@i
   556     06A7  120A  118A  2705  120A  118A  	fcall	_lcd_out
   557     06AC  3013               	movlw	19
   558     06AD  1283               	bcf	3,5	;RP0=0, select bank0
   559     06AE  1303               	bcf	3,6	;RP1=0, select bank0
   560     06AF  0237               	subwf	_j+1,w
   561     06B0  3089               	movlw	137
   562     06B1  1903               	skipnz
   563     06B2  0236               	subwf	_j,w
   564     06B3  1C03               	skipc
   565     06B4  2EB6               	goto	u331
   566     06B5  2EB7               	goto	u330
   567     06B6                     u331:
   568     06B6  2F01               	goto	l63
   569     06B7                     u330:
   570     06B7                     l940:
   571     06B7  3088               	movlw	136
   572     06B8  00B6               	movwf	_j
   573     06B9  3013               	movlw	19
   574     06BA  00B7               	movwf	_j+1
   575     06BB  2F01               	goto	l63
   576     06BC                     l942:
   577     06BC  3001               	movlw	1
   578     06BD  02B6               	subwf	_j,f
   579     06BE  3000               	movlw	0
   580     06BF  1C03               	skipc
   581     06C0  03B7               	decf	_j+1,f
   582     06C1  02B7               	subwf	_j+1,f
   583     06C2                     l944:
   584     06C2  3088               	movlw	136
   585     06C3  120A  118A  2556  120A  118A  	fcall	_lcd_command
   586     06C8                     l946:
   587     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   588     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   589     06CA  0837               	movf	_j+1,w
   590     06CB  00C4               	movwf	lcd_out@i+1
   591     06CC  0836               	movf	_j,w
   592     06CD  00C3               	movwf	lcd_out@i
   593     06CE  120A  118A  2705  120A  118A  	fcall	_lcd_out
   594     06D3                     l948:
   595     06D3  1283               	bcf	3,5	;RP0=0, select bank0
   596     06D4  1303               	bcf	3,6	;RP1=0, select bank0
   597     06D5  0836               	movf	_j,w
   598     06D6  0437               	iorwf	_j+1,w
   599     06D7  1D03               	btfss	3,2
   600     06D8  2EDA               	goto	u341
   601     06D9  2EDB               	goto	u340
   602     06DA                     u341:
   603     06DA  2F01               	goto	l63
   604     06DB                     u340:
   605     06DB                     l950:
   606     06DB  3001               	movlw	1
   607     06DC  00B6               	movwf	_j
   608     06DD  3000               	movlw	0
   609     06DE  00B7               	movwf	_j+1
   610     06DF  2F01               	goto	l63
   611     06E0                     l952:
   612     06E0  01B6               	clrf	_j
   613     06E1  01B7               	clrf	_j+1
   614     06E2                     l954:
   615     06E2  3088               	movlw	136
   616     06E3  120A  118A  2556  120A  118A  	fcall	_lcd_command
   617     06E8                     l956:
   618     06E8  3000               	movlw	0
   619     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   620     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   621     06EB  00C3               	movwf	lcd_out@i
   622     06EC  00C4               	movwf	lcd_out@i+1
   623     06ED  120A  118A  2705  120A  118A  	fcall	_lcd_out
   624     06F2  2F01               	goto	l63
   625     06F3                     l960:
   626     06F3  0841               	movf	_value,w
   627                           
   628                           ; Switch size 1, requested type "simple"
   629                           ; Number of cases is 4, Range of values is 112 to 224
   630                           ; switch strategies available:
   631                           ; Name         Instructions Cycles
   632                           ; simple_byte           13     7 (average)
   633                           ; jumptable            263     9 (fixed)
   634                           ;	Chosen strategy is simple_byte
   635     06F4  3A70               	xorlw	112	; case 112
   636     06F5  1903               	skipnz
   637     06F6  2EE0               	goto	l952
   638     06F7  3AC0               	xorlw	192	; case 176
   639     06F8  1903               	skipnz
   640     06F9  2EBC               	goto	l942
   641     06FA  3A60               	xorlw	96	; case 208
   642     06FB  1903               	skipnz
   643     06FC  2E95               	goto	l934
   644     06FD  3A30               	xorlw	48	; case 224
   645     06FE  1903               	skipnz
   646     06FF  2E44               	goto	l904
   647     0700  2F01               	goto	l63
   648     0701                     l63:
   649     0701  2F01               	goto	l63
   650     0702  120A  118A  2800   	ljmp	start
   651     0705                     __end_of_main:
   652                           
   653                           	psect	text1
   654     0705                     __ptext1:	
   655 ;; *************** function _lcd_out *****************
   656 ;; Defined at:
   657 ;;		line 82 in file "42.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  i               2    0[BANK0 ] unsigned int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   671 ;;      Params:         0       2       0       0       0
   672 ;;      Locals:         0       0       0       0       0
   673 ;;      Temps:          0       6       0       0       0
   674 ;;      Totals:         0       8       0       0       0
   675 ;;Total ram usage:        8 bytes
   676 ;; Hardware stack levels used: 1
   677 ;; Hardware stack levels required when called: 1
   678 ;; This function calls:
   679 ;;		___bmul
   680 ;;		___lwdiv
   681 ;;		___wmul
   682 ;;		_lcd_command
   683 ;;		_lcd_data
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689     0705                     _lcd_out:	
   690                           ;psect for function _lcd_out
   691                           
   692     0705                     l898:	
   693                           ;incstack = 0
   694                           ; Regs used in _lcd_out: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   695                           
   696     0705  30E8               	movlw	232
   697     0706  00F6               	movwf	___lwdiv@divisor
   698     0707  3003               	movlw	3
   699     0708  00F7               	movwf	___lwdiv@divisor+1
   700     0709  1283               	bcf	3,5	;RP0=0, select bank0
   701     070A  1303               	bcf	3,6	;RP1=0, select bank0
   702     070B  0844               	movf	lcd_out@i+1,w
   703     070C  00F9               	movwf	___lwdiv@dividend+1
   704     070D  0843               	movf	lcd_out@i,w
   705     070E  00F8               	movwf	___lwdiv@dividend
   706     070F  120A  118A  2592  120A  118A  	fcall	___lwdiv
   707     0714  0876               	movf	?___lwdiv,w
   708     0715  1283               	bcf	3,5	;RP0=0, select bank0
   709     0716  1303               	bcf	3,6	;RP1=0, select bank0
   710     0717  00C5               	movwf	??_lcd_out
   711     0718  01C6               	clrf	??_lcd_out+1
   712     0719  0845               	movf	??_lcd_out,w
   713     071A  00B8               	movwf	_d4
   714     071B  0846               	movf	??_lcd_out+1,w
   715     071C  00B9               	movwf	_d4+1
   716     071D  3064               	movlw	100
   717     071E  00F6               	movwf	___lwdiv@divisor
   718     071F  3000               	movlw	0
   719     0720  00F7               	movwf	___lwdiv@divisor+1
   720     0721  0839               	movf	_d4+1,w
   721     0722  00F1               	movwf	___wmul@multiplier+1
   722     0723  0838               	movf	_d4,w
   723     0724  00F0               	movwf	___wmul@multiplier
   724     0725  3018               	movlw	24
   725     0726  00F2               	movwf	___wmul@multiplicand
   726     0727  30FC               	movlw	252
   727     0728  00F3               	movwf	___wmul@multiplicand+1
   728     0729  120A  118A  256D  120A  118A  	fcall	___wmul
   729     072E  1283               	bcf	3,5	;RP0=0, select bank0
   730     072F  1303               	bcf	3,6	;RP1=0, select bank0
   731     0730  0843               	movf	lcd_out@i,w
   732     0731  0770               	addwf	?___wmul,w
   733     0732  00F8               	movwf	___lwdiv@dividend
   734     0733  0844               	movf	lcd_out@i+1,w
   735     0734  1803               	skipnc
   736     0735  0A44               	incf	lcd_out@i+1,w
   737     0736  0771               	addwf	?___wmul+1,w
   738     0737  00F9               	movwf	___lwdiv@dividend+1
   739     0738  120A  118A  2592  120A  118A  	fcall	___lwdiv
   740     073D  0876               	movf	?___lwdiv,w
   741     073E  1283               	bcf	3,5	;RP0=0, select bank0
   742     073F  1303               	bcf	3,6	;RP1=0, select bank0
   743     0740  00C5               	movwf	??_lcd_out
   744     0741  01C6               	clrf	??_lcd_out+1
   745     0742  0845               	movf	??_lcd_out,w
   746     0743  00BA               	movwf	_d3
   747     0744  0846               	movf	??_lcd_out+1,w
   748     0745  00BB               	movwf	_d3+1
   749     0746  3064               	movlw	100
   750     0747  00F6               	movwf	___lwdiv@divisor
   751     0748  3000               	movlw	0
   752     0749  00F7               	movwf	___lwdiv@divisor+1
   753     074A  0839               	movf	_d4+1,w
   754     074B  00F1               	movwf	___wmul@multiplier+1
   755     074C  0838               	movf	_d4,w
   756     074D  00F0               	movwf	___wmul@multiplier
   757     074E  3018               	movlw	24
   758     074F  00F2               	movwf	___wmul@multiplicand
   759     0750  30FC               	movlw	252
   760     0751  00F3               	movwf	___wmul@multiplicand+1
   761     0752  120A  118A  256D  120A  118A  	fcall	___wmul
   762     0757  0870               	movf	?___wmul,w
   763     0758  1283               	bcf	3,5	;RP0=0, select bank0
   764     0759  1303               	bcf	3,6	;RP1=0, select bank0
   765     075A  00C5               	movwf	??_lcd_out
   766     075B  0871               	movf	?___wmul+1,w
   767     075C  00C6               	movwf	??_lcd_out+1
   768     075D  083B               	movf	_d3+1,w
   769     075E  00F1               	movwf	___wmul@multiplier+1
   770     075F  083A               	movf	_d3,w
   771     0760  00F0               	movwf	___wmul@multiplier
   772     0761  309C               	movlw	156
   773     0762  00F2               	movwf	___wmul@multiplicand
   774     0763  30FF               	movlw	255
   775     0764  00F3               	movwf	___wmul@multiplicand+1
   776     0765  120A  118A  256D  120A  118A  	fcall	___wmul
   777     076A  0870               	movf	?___wmul,w
   778     076B  1283               	bcf	3,5	;RP0=0, select bank0
   779     076C  1303               	bcf	3,6	;RP1=0, select bank0
   780     076D  0745               	addwf	??_lcd_out,w
   781     076E  00C7               	movwf	??_lcd_out+2
   782     076F  0871               	movf	?___wmul+1,w
   783     0770  1803               	skipnc
   784     0771  0A71               	incf	?___wmul+1,w
   785     0772  0746               	addwf	??_lcd_out+1,w
   786     0773  00C8               	movwf	??_lcd_out+3
   787     0774  0843               	movf	lcd_out@i,w
   788     0775  0747               	addwf	??_lcd_out+2,w
   789     0776  00F8               	movwf	___lwdiv@dividend
   790     0777  0844               	movf	lcd_out@i+1,w
   791     0778  1803               	skipnc
   792     0779  0A44               	incf	lcd_out@i+1,w
   793     077A  0748               	addwf	??_lcd_out+3,w
   794     077B  00F9               	movwf	___lwdiv@dividend+1
   795     077C  120A  118A  2592  120A  118A  	fcall	___lwdiv
   796     0781  0876               	movf	?___lwdiv,w
   797     0782  1283               	bcf	3,5	;RP0=0, select bank0
   798     0783  1303               	bcf	3,6	;RP1=0, select bank0
   799     0784  00C9               	movwf	??_lcd_out+4
   800     0785  01CA               	clrf	??_lcd_out+5
   801     0786  0849               	movf	??_lcd_out+4,w
   802     0787  00BC               	movwf	_d2
   803     0788  084A               	movf	??_lcd_out+5,w
   804     0789  00BD               	movwf	_d2+1
   805     078A  3018               	movlw	24
   806     078B  00F0               	movwf	___bmul@multiplicand
   807     078C  0838               	movf	_d4,w
   808     078D  120A  118A  2541  120A  118A  	fcall	___bmul
   809     0792  1283               	bcf	3,5	;RP0=0, select bank0
   810     0793  1303               	bcf	3,6	;RP1=0, select bank0
   811     0794  00C5               	movwf	??_lcd_out
   812     0795  309C               	movlw	156
   813     0796  00F0               	movwf	___bmul@multiplicand
   814     0797  083A               	movf	_d3,w
   815     0798  120A  118A  2541  120A  118A  	fcall	___bmul
   816     079D  1283               	bcf	3,5	;RP0=0, select bank0
   817     079E  1303               	bcf	3,6	;RP1=0, select bank0
   818     079F  00C6               	movwf	??_lcd_out+1
   819     07A0  30F6               	movlw	246
   820     07A1  00F0               	movwf	___bmul@multiplicand
   821     07A2  083C               	movf	_d2,w
   822     07A3  120A  118A  2541  120A  118A  	fcall	___bmul
   823     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   824     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   825     07AA  0746               	addwf	??_lcd_out+1,w
   826     07AB  0745               	addwf	??_lcd_out,w
   827     07AC  0743               	addwf	lcd_out@i,w
   828     07AD  00C7               	movwf	??_lcd_out+2
   829     07AE  01C8               	clrf	??_lcd_out+3
   830     07AF  0847               	movf	??_lcd_out+2,w
   831     07B0  00BE               	movwf	_d1
   832     07B1  0848               	movf	??_lcd_out+3,w
   833     07B2  00BF               	movwf	_d1+1
   834     07B3  3088               	movlw	136
   835     07B4  120A  118A  2556  120A  118A  	fcall	_lcd_command
   836     07B9  1283               	bcf	3,5	;RP0=0, select bank0
   837     07BA  1303               	bcf	3,6	;RP1=0, select bank0
   838     07BB  0838               	movf	_d4,w
   839     07BC  3E30               	addlw	48
   840     07BD  120A  118A  2519  120A  118A  	fcall	_lcd_data
   841     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   842     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   843     07C4  083A               	movf	_d3,w
   844     07C5  3E30               	addlw	48
   845     07C6  120A  118A  2519  120A  118A  	fcall	_lcd_data
   846     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   847     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   848     07CD  083C               	movf	_d2,w
   849     07CE  3E30               	addlw	48
   850     07CF  120A  118A  2519  120A  118A  	fcall	_lcd_data
   851     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   852     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   853     07D6  083E               	movf	_d1,w
   854     07D7  3E30               	addlw	48
   855     07D8  120A  118A  2519  120A  118A  	fcall	_lcd_data
   856     07DD                     l72:
   857     07DD  0008               	return
   858     07DE                     __end_of_lcd_out:
   859                           
   860                           	psect	text2
   861     0519                     __ptext2:	
   862 ;; *************** function _lcd_data *****************
   863 ;; Defined at:
   864 ;;		line 93 in file "42.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  i               1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  i               1    2[COMMON] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, btemp+1
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0
   880 ;;      Temps:          2       0       0       0       0
   881 ;;      Totals:         3       0       0       0       0
   882 ;;Total ram usage:        3 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;;		_lcd_out
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892     0519                     _lcd_data:	
   893                           ;psect for function _lcd_data
   894                           
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   898                           ;lcd_data@i stored from wreg
   899     0519  00F2               	movwf	lcd_data@i
   900     051A                     l800:
   901     051A  1283               	bcf	3,5	;RP0=0, select bank0
   902     051B  1303               	bcf	3,6	;RP1=0, select bank0
   903     051C  1587               	bsf	7,3	;volatile
   904     051D                     l802:
   905     051D  0872               	movf	lcd_data@i,w
   906     051E  0088               	movwf	8	;volatile
   907     051F                     l804:
   908     051F  1407               	bsf	7,0	;volatile
   909     0520                     l806:
   910     0520  30FE               	movlw	254
   911     0521  00FF               	movwf	btemp+1
   912     0522  087F               	movf	btemp+1,w
   913     0523  0587               	andwf	7,f	;volatile
   914     0524                     l808:
   915     0524  30C3               	movlw	195
   916     0525  00F1               	movwf	??_lcd_data+1
   917     0526  30CD               	movlw	205
   918     0527  00F0               	movwf	??_lcd_data
   919     0528                     u357:
   920     0528  0BF0               	decfsz	??_lcd_data,f
   921     0529  2D28               	goto	u357
   922     052A  0BF1               	decfsz	??_lcd_data+1,f
   923     052B  2D28               	goto	u357
   924     052C                     l75:
   925     052C  0008               	return
   926     052D                     __end_of_lcd_data:
   927                           
   928                           	psect	text3
   929     056D                     __ptext3:	
   930 ;; *************** function ___wmul *****************
   931 ;; Defined at:
   932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  multiplier      2    0[COMMON] unsigned int 
   935 ;;  multiplicand    2    2[COMMON] unsigned int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  product         2    4[COMMON] unsigned int 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2    0[COMMON] unsigned int 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         4       0       0       0       0
   948 ;;      Locals:         2       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0
   950 ;;      Totals:         6       0       0       0       0
   951 ;;Total ram usage:        6 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_lcd_out
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960     056D                     ___wmul:	
   961                           ;psect for function ___wmul
   962                           
   963     056D                     l810:	
   964                           ;incstack = 0
   965                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   966                           
   967     056D  01F4               	clrf	___wmul@product
   968     056E  01F5               	clrf	___wmul@product+1
   969     056F                     l812:
   970     056F  1C70               	btfss	___wmul@multiplier,0
   971     0570  2D72               	goto	u181
   972     0571  2D73               	goto	u180
   973     0572                     u181:
   974     0572  2D79               	goto	l164
   975     0573                     u180:
   976     0573                     l814:
   977     0573  0872               	movf	___wmul@multiplicand,w
   978     0574  07F4               	addwf	___wmul@product,f
   979     0575  1803               	skipnc
   980     0576  0AF5               	incf	___wmul@product+1,f
   981     0577  0873               	movf	___wmul@multiplicand+1,w
   982     0578  07F5               	addwf	___wmul@product+1,f
   983     0579                     l164:
   984     0579  3001               	movlw	1
   985     057A                     u195:
   986     057A  1003               	clrc
   987     057B  0DF2               	rlf	___wmul@multiplicand,f
   988     057C  0DF3               	rlf	___wmul@multiplicand+1,f
   989     057D  3EFF               	addlw	-1
   990     057E  1D03               	skipz
   991     057F  2D7A               	goto	u195
   992     0580                     l816:
   993     0580  3001               	movlw	1
   994     0581                     u205:
   995     0581  1003               	clrc
   996     0582  0CF1               	rrf	___wmul@multiplier+1,f
   997     0583  0CF0               	rrf	___wmul@multiplier,f
   998     0584  3EFF               	addlw	-1
   999     0585  1D03               	skipz
  1000     0586  2D81               	goto	u205
  1001     0587                     l818:
  1002     0587  0870               	movf	___wmul@multiplier,w
  1003     0588  0471               	iorwf	___wmul@multiplier+1,w
  1004     0589  1D03               	btfss	3,2
  1005     058A  2D8C               	goto	u211
  1006     058B  2D8D               	goto	u210
  1007     058C                     u211:
  1008     058C  2D6F               	goto	l812
  1009     058D                     u210:
  1010     058D                     l820:
  1011     058D  0875               	movf	___wmul@product+1,w
  1012     058E  00F1               	movwf	?___wmul+1
  1013     058F  0874               	movf	___wmul@product,w
  1014     0590  00F0               	movwf	?___wmul
  1015     0591                     l166:
  1016     0591  0008               	return
  1017     0592                     __end_of___wmul:
  1018                           
  1019                           	psect	text4
  1020     0592                     __ptext4:	
  1021 ;; *************** function ___lwdiv *****************
  1022 ;; Defined at:
  1023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  divisor         2    6[COMMON] unsigned int 
  1026 ;;  dividend        2    8[COMMON] unsigned int 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  quotient        2   10[COMMON] unsigned int 
  1029 ;;  counter         1   12[COMMON] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2    6[COMMON] unsigned int 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, btemp+1
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         4       0       0       0       0
  1040 ;;      Locals:         3       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0
  1042 ;;      Totals:         7       0       0       0       0
  1043 ;;Total ram usage:        7 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; This function calls:
  1046 ;;		Nothing
  1047 ;; This function is called by:
  1048 ;;		_lcd_out
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052     0592                     ___lwdiv:	
  1053                           ;psect for function ___lwdiv
  1054                           
  1055     0592                     l840:	
  1056                           ;incstack = 0
  1057                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1058                           
  1059     0592  01FA               	clrf	___lwdiv@quotient
  1060     0593  01FB               	clrf	___lwdiv@quotient+1
  1061     0594                     l842:
  1062     0594  0876               	movf	___lwdiv@divisor,w
  1063     0595  0477               	iorwf	___lwdiv@divisor+1,w
  1064     0596  1903               	btfsc	3,2
  1065     0597  2D99               	goto	u241
  1066     0598  2D9A               	goto	u240
  1067     0599                     u241:
  1068     0599  2DD1               	goto	l862
  1069     059A                     u240:
  1070     059A                     l844:
  1071     059A  01FC               	clrf	___lwdiv@counter
  1072     059B  0AFC               	incf	___lwdiv@counter,f
  1073     059C  2DA8               	goto	l850
  1074     059D                     l846:
  1075     059D  3001               	movlw	1
  1076     059E                     u255:
  1077     059E  1003               	clrc
  1078     059F  0DF6               	rlf	___lwdiv@divisor,f
  1079     05A0  0DF7               	rlf	___lwdiv@divisor+1,f
  1080     05A1  3EFF               	addlw	-1
  1081     05A2  1D03               	skipz
  1082     05A3  2D9E               	goto	u255
  1083     05A4                     l848:
  1084     05A4  3001               	movlw	1
  1085     05A5  00FF               	movwf	btemp+1
  1086     05A6  087F               	movf	btemp+1,w
  1087     05A7  07FC               	addwf	___lwdiv@counter,f
  1088     05A8                     l850:
  1089     05A8  1FF7               	btfss	___lwdiv@divisor+1,7
  1090     05A9  2DAB               	goto	u261
  1091     05AA  2DAC               	goto	u260
  1092     05AB                     u261:
  1093     05AB  2D9D               	goto	l846
  1094     05AC                     u260:
  1095     05AC                     l852:
  1096     05AC  3001               	movlw	1
  1097     05AD                     u275:
  1098     05AD  1003               	clrc
  1099     05AE  0DFA               	rlf	___lwdiv@quotient,f
  1100     05AF  0DFB               	rlf	___lwdiv@quotient+1,f
  1101     05B0  3EFF               	addlw	-1
  1102     05B1  1D03               	skipz
  1103     05B2  2DAD               	goto	u275
  1104     05B3  0877               	movf	___lwdiv@divisor+1,w
  1105     05B4  0279               	subwf	___lwdiv@dividend+1,w
  1106     05B5  1D03               	skipz
  1107     05B6  2DB9               	goto	u285
  1108     05B7  0876               	movf	___lwdiv@divisor,w
  1109     05B8  0278               	subwf	___lwdiv@dividend,w
  1110     05B9                     u285:
  1111     05B9  1C03               	skipc
  1112     05BA  2DBC               	goto	u281
  1113     05BB  2DBD               	goto	u280
  1114     05BC                     u281:
  1115     05BC  2DC4               	goto	l858
  1116     05BD                     u280:
  1117     05BD                     l854:
  1118     05BD  0876               	movf	___lwdiv@divisor,w
  1119     05BE  02F8               	subwf	___lwdiv@dividend,f
  1120     05BF  0877               	movf	___lwdiv@divisor+1,w
  1121     05C0  1C03               	skipc
  1122     05C1  03F9               	decf	___lwdiv@dividend+1,f
  1123     05C2  02F9               	subwf	___lwdiv@dividend+1,f
  1124     05C3                     l856:
  1125     05C3  147A               	bsf	___lwdiv@quotient,0
  1126     05C4                     l858:
  1127     05C4  3001               	movlw	1
  1128     05C5                     u295:
  1129     05C5  1003               	clrc
  1130     05C6  0CF7               	rrf	___lwdiv@divisor+1,f
  1131     05C7  0CF6               	rrf	___lwdiv@divisor,f
  1132     05C8  3EFF               	addlw	-1
  1133     05C9  1D03               	skipz
  1134     05CA  2DC5               	goto	u295
  1135     05CB                     l860:
  1136     05CB  3001               	movlw	1
  1137     05CC  02FC               	subwf	___lwdiv@counter,f
  1138     05CD  1D03               	btfss	3,2
  1139     05CE  2DD0               	goto	u301
  1140     05CF  2DD1               	goto	u300
  1141     05D0                     u301:
  1142     05D0  2DAC               	goto	l852
  1143     05D1                     u300:
  1144     05D1                     l862:
  1145     05D1  087B               	movf	___lwdiv@quotient+1,w
  1146     05D2  00F7               	movwf	?___lwdiv+1
  1147     05D3  087A               	movf	___lwdiv@quotient,w
  1148     05D4  00F6               	movwf	?___lwdiv
  1149     05D5                     l444:
  1150     05D5  0008               	return
  1151     05D6                     __end_of___lwdiv:
  1152                           
  1153                           	psect	text5
  1154     0541                     __ptext5:	
  1155 ;; *************** function ___bmul *****************
  1156 ;; Defined at:
  1157 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  multiplier      1    wreg     unsigned char 
  1160 ;;  multiplicand    1    0[COMMON] unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  multiplier      1    2[COMMON] unsigned char 
  1163 ;;  product         1    1[COMMON] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      unsigned char 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, btemp+1
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         1       0       0       0       0
  1174 ;;      Locals:         2       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         3       0       0       0       0
  1177 ;;Total ram usage:        3 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_lcd_out
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186     0541                     ___bmul:	
  1187                           ;psect for function ___bmul
  1188                           
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1192                           ;___bmul@multiplier stored from wreg
  1193     0541  00F2               	movwf	___bmul@multiplier
  1194     0542                     l824:
  1195     0542  01F1               	clrf	___bmul@product
  1196     0543                     l826:
  1197     0543  1C72               	btfss	___bmul@multiplier,0
  1198     0544  2D46               	goto	u221
  1199     0545  2D47               	goto	u220
  1200     0546                     u221:
  1201     0546  2D4B               	goto	l830
  1202     0547                     u220:
  1203     0547                     l828:
  1204     0547  0870               	movf	___bmul@multiplicand,w
  1205     0548  00FF               	movwf	btemp+1
  1206     0549  087F               	movf	btemp+1,w
  1207     054A  07F1               	addwf	___bmul@product,f
  1208     054B                     l830:
  1209     054B  1003               	clrc
  1210     054C  0DF0               	rlf	___bmul@multiplicand,f
  1211     054D                     l832:
  1212     054D  1003               	clrc
  1213     054E  0CF2               	rrf	___bmul@multiplier,f
  1214     054F                     l834:
  1215     054F  0872               	movf	___bmul@multiplier,w
  1216     0550  1D03               	btfss	3,2
  1217     0551  2D53               	goto	u231
  1218     0552  2D54               	goto	u230
  1219     0553                     u231:
  1220     0553  2D43               	goto	l826
  1221     0554                     u230:
  1222     0554                     l836:
  1223     0554  0871               	movf	___bmul@product,w
  1224     0555                     l190:
  1225     0555  0008               	return
  1226     0556                     __end_of___bmul:
  1227                           
  1228                           	psect	text6
  1229     05D6                     __ptext6:	
  1230 ;; *************** function _initiate *****************
  1231 ;; Defined at:
  1232 ;;		line 62 in file "42.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0
  1248 ;;      Temps:          2       0       0       0       0
  1249 ;;      Totals:         2       0       0       0       0
  1250 ;;Total ram usage:        2 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 1
  1253 ;; This function calls:
  1254 ;;		_lcd_command
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260     05D6                     _initiate:	
  1261                           ;psect for function _initiate
  1262                           
  1263     05D6                     l866:	
  1264                           ;incstack = 0
  1265                           ; Regs used in _initiate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1266                           
  1267     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1268     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1269     05D8  0187               	clrf	7	;volatile
  1270     05D9  0188               	clrf	8	;volatile
  1271     05DA                     l868:
  1272     05DA  30F0               	movlw	240
  1273     05DB  0086               	movwf	6	;volatile
  1274     05DC                     l870:
  1275     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1276     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1277     05DE  0186               	clrf	6	;volatile
  1278     05DF                     l872:
  1279     05DF  307F               	movlw	127
  1280     05E0  00FF               	movwf	btemp+1
  1281     05E1  087F               	movf	btemp+1,w
  1282     05E2  1683               	bsf	3,5	;RP0=1, select bank1
  1283     05E3  1303               	bcf	3,6	;RP1=0, select bank1
  1284     05E4  0581               	andwf	1,f	;volatile
  1285     05E5                     l874:
  1286     05E5  3033               	movlw	51
  1287     05E6  120A  118A  2556  120A  118A  	fcall	_lcd_command
  1288     05EB                     l876:
  1289     05EB  30C3               	movlw	195
  1290     05EC  00F4               	movwf	??_initiate+1
  1291     05ED  30CD               	movlw	205
  1292     05EE  00F3               	movwf	??_initiate
  1293     05EF                     u367:
  1294     05EF  0BF3               	decfsz	??_initiate,f
  1295     05F0  2DEF               	goto	u367
  1296     05F1  0BF4               	decfsz	??_initiate+1,f
  1297     05F2  2DEF               	goto	u367
  1298     05F3                     l878:
  1299     05F3  3034               	movlw	52
  1300     05F4  120A  118A  2556  120A  118A  	fcall	_lcd_command
  1301     05F9                     l880:
  1302     05F9  30C3               	movlw	195
  1303     05FA  00F4               	movwf	??_initiate+1
  1304     05FB  30CD               	movlw	205
  1305     05FC  00F3               	movwf	??_initiate
  1306     05FD                     u377:
  1307     05FD  0BF3               	decfsz	??_initiate,f
  1308     05FE  2DFD               	goto	u377
  1309     05FF  0BF4               	decfsz	??_initiate+1,f
  1310     0600  2DFD               	goto	u377
  1311     0601                     l882:
  1312     0601  3035               	movlw	53
  1313     0602  120A  118A  2556  120A  118A  	fcall	_lcd_command
  1314     0607                     l884:
  1315     0607  30C3               	movlw	195
  1316     0608  00F4               	movwf	??_initiate+1
  1317     0609  30CD               	movlw	205
  1318     060A  00F3               	movwf	??_initiate
  1319     060B                     u387:
  1320     060B  0BF3               	decfsz	??_initiate,f
  1321     060C  2E0B               	goto	u387
  1322     060D  0BF4               	decfsz	??_initiate+1,f
  1323     060E  2E0B               	goto	u387
  1324     060F                     l886:
  1325     060F  3038               	movlw	56
  1326     0610  120A  118A  2556  120A  118A  	fcall	_lcd_command
  1327     0615                     l888:
  1328     0615  30C3               	movlw	195
  1329     0616  00F4               	movwf	??_initiate+1
  1330     0617  30CD               	movlw	205
  1331     0618  00F3               	movwf	??_initiate
  1332     0619                     u397:
  1333     0619  0BF3               	decfsz	??_initiate,f
  1334     061A  2E19               	goto	u397
  1335     061B  0BF4               	decfsz	??_initiate+1,f
  1336     061C  2E19               	goto	u397
  1337     061D                     l890:
  1338     061D  300C               	movlw	12
  1339     061E  120A  118A  2556  120A  118A  	fcall	_lcd_command
  1340     0623                     l892:
  1341     0623  30C3               	movlw	195
  1342     0624  00F4               	movwf	??_initiate+1
  1343     0625  30CD               	movlw	205
  1344     0626  00F3               	movwf	??_initiate
  1345     0627                     u407:
  1346     0627  0BF3               	decfsz	??_initiate,f
  1347     0628  2E27               	goto	u407
  1348     0629  0BF4               	decfsz	??_initiate+1,f
  1349     062A  2E27               	goto	u407
  1350     062B                     l894:
  1351     062B  3001               	movlw	1
  1352     062C  120A  118A  2556  120A  118A  	fcall	_lcd_command
  1353     0631                     l896:
  1354     0631  30C3               	movlw	195
  1355     0632  00F4               	movwf	??_initiate+1
  1356     0633  30CD               	movlw	205
  1357     0634  00F3               	movwf	??_initiate
  1358     0635                     u417:
  1359     0635  0BF3               	decfsz	??_initiate,f
  1360     0636  2E35               	goto	u417
  1361     0637  0BF4               	decfsz	??_initiate+1,f
  1362     0638  2E35               	goto	u417
  1363     0639                     l69:
  1364     0639  0008               	return
  1365     063A                     __end_of_initiate:
  1366                           
  1367                           	psect	text7
  1368     0556                     __ptext7:	
  1369 ;; *************** function _lcd_command *****************
  1370 ;; Defined at:
  1371 ;;		line 101 in file "42.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  i               1    wreg     unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  i               1    2[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, btemp+1
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0
  1387 ;;      Temps:          2       0       0       0       0
  1388 ;;      Totals:         3       0       0       0       0
  1389 ;;Total ram usage:        3 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;;		_initiate
  1396 ;;		_lcd_out
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400     0556                     _lcd_command:	
  1401                           ;psect for function _lcd_command
  1402                           
  1403                           
  1404                           ;incstack = 0
  1405                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1]
  1406                           ;lcd_command@i stored from wreg
  1407     0556  00F2               	movwf	lcd_command@i
  1408     0557                     l792:
  1409     0557  30F7               	movlw	247
  1410     0558  00FF               	movwf	btemp+1
  1411     0559  087F               	movf	btemp+1,w
  1412     055A  1283               	bcf	3,5	;RP0=0, select bank0
  1413     055B  1303               	bcf	3,6	;RP1=0, select bank0
  1414     055C  0587               	andwf	7,f	;volatile
  1415     055D                     l794:
  1416     055D  0872               	movf	lcd_command@i,w
  1417     055E  0088               	movwf	8	;volatile
  1418     055F                     l796:
  1419     055F  1407               	bsf	7,0	;volatile
  1420     0560                     l798:
  1421     0560  30FE               	movlw	254
  1422     0561  00FF               	movwf	btemp+1
  1423     0562  087F               	movf	btemp+1,w
  1424     0563  0587               	andwf	7,f	;volatile
  1425     0564  30C3               	movlw	195
  1426     0565  00F1               	movwf	??_lcd_command+1
  1427     0566  30CD               	movlw	205
  1428     0567  00F0               	movwf	??_lcd_command
  1429     0568                     u427:
  1430     0568  0BF0               	decfsz	??_lcd_command,f
  1431     0569  2D68               	goto	u427
  1432     056A  0BF1               	decfsz	??_lcd_command+1,f
  1433     056B  2D68               	goto	u427
  1434     056C                     l78:
  1435     056C  0008               	return
  1436     056D                     __end_of_lcd_command:
  1437     007E                     btemp	set	126	;btemp
  1438     007E                     wtemp0	set	126
  1439                           
  1440                           	psect	config
  1441                           
  1442                           ;Config register CONFIG @ 0x2007
  1443                           ;	Oscillator Selection bits
  1444                           ;	FOSC = EXTRC, RC oscillator
  1445                           ;	Watchdog Timer Enable bit
  1446                           ;	WDTE = OFF, WDT disabled
  1447                           ;	Power-up Timer Enable bit
  1448                           ;	PWRTE = OFF, PWRT disabled
  1449                           ;	Brown-out Reset Enable bit
  1450                           ;	BOREN = OFF, BOR disabled
  1451                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1452                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1453                           ;	Data EEPROM Memory Code Protection bit
  1454                           ;	CPD = OFF, Data EEPROM code protection off
  1455                           ;	Flash Program Memory Write Enable bits
  1456                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1457                           ;	In-Circuit Debugger Mode bit
  1458                           ;	DEBUG = 0x1, unprogrammed default
  1459                           ;	Flash Program Memory Code Protection bit
  1460                           ;	CP = OFF, Code protection off
  1461     2007                     	org	8199
  1462     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lcd_out->___lwdiv
    ___lwdiv->___wmul
    _initiate->_lcd_command

Critical Paths under _main in BANK0

    _main->_lcd_out

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1988
                           _initiate
                        _lcd_command
                           _lcd_data
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              8     6      2    1922
                                              0 BANK0      8     6      2
                             ___bmul
                            ___lwdiv
                             ___wmul
                        _lcd_command
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initiate                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
     _lcd_command
   _lcd_command
   _lcd_data
   _lcd_out
     ___bmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _lcd_command
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      12        0.0%
ABS                  0      0      39       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 16 19:03:14 2024

                      _i 0034                        _j 0036                        _k 0020  
                      _m 007D                        _n 0040                        _x 0042  
                      pc 0002           ___bmul@product 0071                       l63 0701  
                     l72 07DD                       l75 052C                       l69 0639  
                     l78 056C                       _d1 003E                       _d2 003C  
                     _d3 003A                       _d4 0038                       fsr 0004  
    ___wmul@multiplicand 0072                      l164 0579                      l190 0555  
                    l166 0591                      l444 05D5                      l800 051A  
                    l810 056D                      l802 051D                      l820 058D  
                    l812 056F                      l804 051F                      l900 063A  
                    l830 054B                      l814 0573                      l806 0520  
                    l902 063F                      l832 054D                      l824 0542  
                    l840 0592                      l816 0580                      l808 0524  
                    l920 0669                      l912 064D                      l904 0644  
                    l834 054F                      l826 0543                      l850 05A8  
                    l842 0594                      l818 0587                      l930 067D  
                    l914 0657                      l906 064A                      l836 0554  
                    l828 0547                      l860 05CB                      l852 05AC  
                    l844 059A                      l940 06B7                      l932 0683  
                    l916 065D                      l870 05DC                      l854 05BD  
                    l846 059D                      l862 05D1                      l950 06DB  
                    l942 06BC                      l934 0695                      l926 066D  
                    l918 0663                      l792 0557                      l880 05F9  
                    l872 05DF                      l856 05C3                      l848 05A4  
                    l952 06E0                      l944 06C2                      l936 069B  
                    l928 0677                      l960 06F3                      l794 055D  
                    l890 061D                      l882 0601                      l874 05E5  
                    l866 05D6                      l858 05C4                      l954 06E2  
                    l946 06C8                      l938 06A1                      l796 055F  
                    l892 0623                      l884 0607                      l876 05EB  
                    l868 05DA                      l956 06E8                      l948 06D3  
                    l798 0560                      l894 062B                      l886 060F  
                    l878 05F3                      l896 0631                      l888 0615  
                    l898 0705                      u210 058D                      u211 058C  
                    u220 0547                      u300 05D1                      u221 0546  
                    u301 05D0                      u205 0581                      u230 0554  
                    u310 0663                      u231 0553                      u311 0662  
                    u240 059A                      u320 0683                      u241 0599  
                    u321 0682                      u330 06B7                      u331 06B6  
                    u260 05AC                      u180 0573                      u340 06DB  
                    u261 05AB                      u181 0572                      u341 06DA  
                    u407 0627                      u255 059E                      u280 05BD  
                    u417 0635                      u281 05BC                      u427 0568  
                    u275 05AD                      u195 057A                      u285 05B9  
                    u357 0528                      u367 05EF                      u295 05C5  
                    u377 05FD                      u387 060B                      u397 0619  
                    fsr0 0004                      indf 0000             lcd_command@i 0072  
                   _main 063A                     btemp 007E                     start 0000  
      ___bmul@multiplier 0072                    ?_main 0070          __end_of___lwdiv 05D6  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_lcd_out 07DE                    _value 0041                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07DE  
           __end_of_main 0705                   ??_main 007D         __end_of_lcd_data 052D  
                 ___bmul 0541                   ___wmul 056D                ??___lwdiv 007A  
       __end_of_initiate 063A                ??_lcd_out 0045  __end_of__initialization 07FC  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070             __pidataBANK0 052D  
             __pbssBANK0 0034               __pmaintext 063A                  ?___bmul 0070  
                ?___wmul 0070                ?_lcd_data 0070                ?_initiate 0070  
                ___lwdiv 0592                  __ptext1 0705                  __ptext2 0519  
                __ptext3 056D                  __ptext4 0592                  __ptext5 0541  
                __ptext6 05D6                  __ptext7 0556                  _lcd_out 0705  
             ??_lcd_data 0070     end_of_initialization 07FC               ??_initiate 0073  
          ??_lcd_command 0070           __end_of___bmul 0556           __end_of___wmul 0592  
    start_initialization 07DE                 ??___bmul 0071                 ??___wmul 0074  
             init_fetch0 0506      __end_of_lcd_command 056D              __pdataBANK0 0020  
            __pbssCOMMON 007D                ___latbits 0002            __pcstackBANK0 0043  
       ___lwdiv@dividend 0078                 ?___lwdiv 0076                 ?_lcd_out 0043  
       ___lwdiv@quotient 007A           ___wmul@product 0074              _lcd_command 0556  
              lcd_data@i 0072        ___wmul@multiplier 0070          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007C                 _lcd_data 0519                 _initiate 05D6  
               lcd_out@i 0043                 init_ram0 050A               _OPTION_REG 0081  
           ?_lcd_command 0070  
