

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 16 20:31:40 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178     051D                     __pidataBANK0:
   179                           
   180                           ;initializer for _k
   181     051D  3453               	retlw	83
   182     051E  3445               	retlw	69
   183     051F  3454               	retlw	84
   184     0520  3420               	retlw	32
   185     0521  3453               	retlw	83
   186     0522  3450               	retlw	80
   187     0523  3444               	retlw	68
   188     0524  343A               	retlw	58
   189     0525  3420               	retlw	32
   190     0526  3420               	retlw	32
   191     0527  3420               	retlw	32
   192     0528  3420               	retlw	32
   193     0529  3472               	retlw	114
   194     052A  3470               	retlw	112
   195     052B  346D               	retlw	109
   196     052C  3400               	retlw	0
   197     052D  3400               	retlw	0
   198     052E  3400               	retlw	0
   199     052F  3400               	retlw	0
   200     0530  3400               	retlw	0
   201     0007                     _PORTC	set	7
   202     0006                     _PORTB	set	6
   203     0008                     _PORTD	set	8
   204     0081                     _OPTION_REG	set	129
   205     0088                     _TRISD	set	136
   206     0086                     _TRISB	set	134
   207     0087                     _TRISC	set	135
   208                           
   209                           	psect	cinit
   210     07E0                     start_initialization:	
   211                           ; #config settings
   212                           
   213     07E0                     __initialization:
   214                           
   215                           ; Initialize objects allocated to BANK0
   216     07E0  1383               	bcf	3,7	;select IRP bank0
   217     07E1  3034               	movlw	low (__pdataBANK0+20)
   218     07E2  00FD               	movwf	btemp+-1
   219     07E3  3005               	movlw	high __pidataBANK0
   220     07E4  00FE               	movwf	btemp
   221     07E5  301D               	movlw	low __pidataBANK0
   222     07E6  00FF               	movwf	btemp+1
   223     07E7  3020               	movlw	low __pdataBANK0
   224     07E8  0084               	movwf	4
   225     07E9  120A  118A  24FA  120A  118A  	fcall	init_ram0
   226                           
   227                           ; Clear objects allocated to BANK0
   228     07EE  01B4               	clrf	__pbssBANK0& (0+127)
   229     07EF  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   230     07F0  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   231     07F1  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   232     07F2  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   233     07F3  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   234     07F4  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   235     07F5  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   236     07F6  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   237     07F7  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   238     07F8  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   239     07F9  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   240     07FA  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   241     07FB  01C1               	clrf	(__pbssBANK0+13)& (0+127)
   242     07FC                     end_of_initialization:	
   243                           ;End of C runtime variable initialization code
   244                           
   245     07FC                     __end_of__initialization:
   246     07FC  0183               	clrf	3
   247     07FD  120A  118A  2E3C   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250     0034                     __pbssBANK0:
   251     0034                     _i:
   252     0034                     	ds	2
   253     0036                     _j:
   254     0036                     	ds	2
   255     0038                     _d4:
   256     0038                     	ds	2
   257     003A                     _d3:
   258     003A                     	ds	2
   259     003C                     _d2:
   260     003C                     	ds	2
   261     003E                     _d1:
   262     003E                     	ds	2
   263     0040                     _value:
   264     0040                     	ds	1
   265     0041                     _x:
   266     0041                     	ds	1
   267                           
   268                           	psect	dataBANK0
   269     0020                     __pdataBANK0:
   270     0020                     _k:
   271     0020                     	ds	20
   272                           
   273                           	psect	inittext
   274     04F6                     init_fetch0:	
   275                           ;	Called with low address in FSR and high address in W
   276                           
   277     04F6  087E               	movf	btemp,w
   278     04F7  008A               	movwf	10
   279     04F8  087F               	movf	btemp+1,w
   280     04F9  0082               	movwf	2
   281     04FA                     init_ram0:	
   282                           ;Called with:
   283                           ;	high address of idata address in btemp 
   284                           ;	low address of idata address in btemp+1 
   285                           ;	low address of data in FSR
   286                           ;	high address + 1 of data in btemp-1
   287                           
   288     04FA  120A  118A  24F6  120A  118A  	fcall	init_fetch0
   289     04FF  0080               	movwf	0
   290     0500  0A84               	incf	4,f
   291     0501  0804               	movf	4,w
   292     0502  067D               	xorwf	btemp+-1,w
   293     0503  1903               	btfsc	3,2
   294     0504  3400               	retlw	0
   295     0505  0AFF               	incf	btemp+1,f
   296     0506  1903               	btfsc	3,2
   297     0507  0AFE               	incf	btemp,f
   298     0508  2CFA               	goto	init_ram0
   299                           
   300                           	psect	cstackCOMMON
   301     0070                     __pcstackCOMMON:
   302     0070                     ?_initiate:
   303     0070                     ?_lcd_command:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ??_lcd_command:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_lcd_data:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ??_lcd_data:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_main:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ?___bmul:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?___wmul:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ___bmul@multiplicand:	
   325                           ; 2 bytes @ 0x0
   326                           
   327     0070                     ___wmul@multiplier:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 2 bytes @ 0x0
   332     0070                     	ds	1
   333     0071                     ??___bmul:
   334     0071                     ___bmul@product:	
   335                           ; 1 bytes @ 0x1
   336                           
   337                           
   338                           ; 1 bytes @ 0x1
   339     0071                     	ds	1
   340     0072                     lcd_data@i:
   341     0072                     lcd_command@i:	
   342                           ; 1 bytes @ 0x2
   343                           
   344     0072                     ___bmul@multiplier:	
   345                           ; 1 bytes @ 0x2
   346                           
   347     0072                     ___wmul@multiplicand:	
   348                           ; 1 bytes @ 0x2
   349                           
   350                           
   351                           ; 2 bytes @ 0x2
   352     0072                     	ds	1
   353     0073                     ??_initiate:
   354                           
   355                           ; 1 bytes @ 0x3
   356     0073                     	ds	1
   357     0074                     ??___wmul:
   358     0074                     ___wmul@product:	
   359                           ; 1 bytes @ 0x4
   360                           
   361                           
   362                           ; 2 bytes @ 0x4
   363     0074                     	ds	2
   364     0076                     ?___lwdiv:
   365     0076                     ___lwdiv@divisor:	
   366                           ; 2 bytes @ 0x6
   367                           
   368                           
   369                           ; 2 bytes @ 0x6
   370     0076                     	ds	2
   371     0078                     ___lwdiv@dividend:
   372                           
   373                           ; 2 bytes @ 0x8
   374     0078                     	ds	2
   375     007A                     ??___lwdiv:
   376     007A                     ___lwdiv@quotient:	
   377                           ; 1 bytes @ 0xA
   378                           
   379                           
   380                           ; 2 bytes @ 0xA
   381     007A                     	ds	2
   382     007C                     ___lwdiv@counter:
   383                           
   384                           ; 1 bytes @ 0xC
   385     007C                     	ds	1
   386     007D                     ??_main:
   387                           
   388                           	psect	cstackBANK0
   389     0042                     __pcstackBANK0:	
   390                           ; 1 bytes @ 0xD
   391                           
   392     0042                     ?_lcd_out:
   393     0042                     lcd_out@i:	
   394                           ; 1 bytes @ 0x0
   395                           
   396                           
   397                           ; 2 bytes @ 0x0
   398     0042                     	ds	2
   399     0044                     ??_lcd_out:
   400                           
   401                           ; 1 bytes @ 0x2
   402     0044                     	ds	6
   403                           
   404                           	psect	maintext
   405     063C                     __pmaintext:	
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 20 in file "42.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called: 2
   431 ;; This function calls:
   432 ;;		_initiate
   433 ;;		_lcd_command
   434 ;;		_lcd_data
   435 ;;		_lcd_out
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441     063C                     _main:	
   442                           ;psect for function _main
   443                           
   444     063C                     l912:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   447                           
   448     063C  120A  118A  25C6  120A  118A  	fcall	_initiate
   449     0641                     l914:
   450     0641  1283               	bcf	3,5	;RP0=0, select bank0
   451     0642  1303               	bcf	3,6	;RP1=0, select bank0
   452     0643  0808               	movf	8,w	;volatile
   453     0644  00C0               	movwf	_value
   454     0645  2EF6               	goto	l972
   455     0646                     l916:
   456     0646  3080               	movlw	128
   457     0647  120A  118A  2546  120A  118A  	fcall	_lcd_command
   458     064C                     l918:
   459     064C  1283               	bcf	3,5	;RP0=0, select bank0
   460     064D  1303               	bcf	3,6	;RP1=0, select bank0
   461     064E  01C1               	clrf	_x
   462     064F                     l924:
   463     064F  0841               	movf	_x,w
   464     0650  3E20               	addlw	(low (_k| 0))& (0+255)
   465     0651  0084               	movwf	4
   466     0652  1383               	bcf	3,7	;select IRP bank0
   467     0653  0800               	movf	0,w
   468     0654  120A  118A  2509  120A  118A  	fcall	_lcd_data
   469     0659                     l926:
   470     0659  3001               	movlw	1
   471     065A  00FF               	movwf	btemp+1
   472     065B  087F               	movf	btemp+1,w
   473     065C  1283               	bcf	3,5	;RP0=0, select bank0
   474     065D  1303               	bcf	3,6	;RP1=0, select bank0
   475     065E  07C1               	addwf	_x,f
   476     065F                     l928:
   477     065F  3008               	movlw	8
   478     0660  0241               	subwf	_x,w
   479     0661  1C03               	skipc
   480     0662  2E64               	goto	u311
   481     0663  2E65               	goto	u310
   482     0664                     u311:
   483     0664  2E4F               	goto	l924
   484     0665                     u310:
   485     0665                     l930:
   486     0665  308C               	movlw	140
   487     0666  120A  118A  2546  120A  118A  	fcall	_lcd_command
   488     066B                     l932:
   489     066B  300C               	movlw	12
   490     066C  1283               	bcf	3,5	;RP0=0, select bank0
   491     066D  1303               	bcf	3,6	;RP1=0, select bank0
   492     066E  00C1               	movwf	_x
   493     066F                     l938:
   494     066F  0841               	movf	_x,w
   495     0670  3E20               	addlw	(low (_k| 0))& (0+255)
   496     0671  0084               	movwf	4
   497     0672  1383               	bcf	3,7	;select IRP bank0
   498     0673  0800               	movf	0,w
   499     0674  120A  118A  2509  120A  118A  	fcall	_lcd_data
   500     0679                     l940:
   501     0679  3001               	movlw	1
   502     067A  00FF               	movwf	btemp+1
   503     067B  087F               	movf	btemp+1,w
   504     067C  1283               	bcf	3,5	;RP0=0, select bank0
   505     067D  1303               	bcf	3,6	;RP1=0, select bank0
   506     067E  07C1               	addwf	_x,f
   507     067F                     l942:
   508     067F  300F               	movlw	15
   509     0680  0241               	subwf	_x,w
   510     0681  1C03               	skipc
   511     0682  2E84               	goto	u321
   512     0683  2E85               	goto	u320
   513     0684                     u321:
   514     0684  2E6F               	goto	l938
   515     0685                     u320:
   516     0685                     l944:
   517     0685  3088               	movlw	136
   518     0686  120A  118A  2546  120A  118A  	fcall	_lcd_command
   519     068B  1283               	bcf	3,5	;RP0=0, select bank0
   520     068C  1303               	bcf	3,6	;RP1=0, select bank0
   521     068D  0837               	movf	_j+1,w
   522     068E  00C3               	movwf	lcd_out@i+1
   523     068F  0836               	movf	_j,w
   524     0690  00C2               	movwf	lcd_out@i
   525     0691  120A  118A  2707  120A  118A  	fcall	_lcd_out
   526     0696  2E41               	goto	l914
   527     0697                     l946:
   528     0697  3001               	movlw	1
   529     0698  07B6               	addwf	_j,f
   530     0699  1803               	skipnc
   531     069A  0AB7               	incf	_j+1,f
   532     069B  3000               	movlw	0
   533     069C  07B7               	addwf	_j+1,f
   534     069D                     l948:
   535     069D  3088               	movlw	136
   536     069E  120A  118A  2546  120A  118A  	fcall	_lcd_command
   537     06A3                     l950:
   538     06A3  1283               	bcf	3,5	;RP0=0, select bank0
   539     06A4  1303               	bcf	3,6	;RP1=0, select bank0
   540     06A5  0837               	movf	_j+1,w
   541     06A6  00C3               	movwf	lcd_out@i+1
   542     06A7  0836               	movf	_j,w
   543     06A8  00C2               	movwf	lcd_out@i
   544     06A9  120A  118A  2707  120A  118A  	fcall	_lcd_out
   545     06AE  3013               	movlw	19
   546     06AF  1283               	bcf	3,5	;RP0=0, select bank0
   547     06B0  1303               	bcf	3,6	;RP1=0, select bank0
   548     06B1  0237               	subwf	_j+1,w
   549     06B2  3089               	movlw	137
   550     06B3  1903               	skipnz
   551     06B4  0236               	subwf	_j,w
   552     06B5  1C03               	skipc
   553     06B6  2EB8               	goto	u331
   554     06B7  2EB9               	goto	u330
   555     06B8                     u331:
   556     06B8  2E41               	goto	l914
   557     06B9                     u330:
   558     06B9                     l952:
   559     06B9  3088               	movlw	136
   560     06BA  00B6               	movwf	_j
   561     06BB  3013               	movlw	19
   562     06BC  00B7               	movwf	_j+1
   563     06BD  2E41               	goto	l914
   564     06BE                     l954:
   565     06BE  3001               	movlw	1
   566     06BF  02B6               	subwf	_j,f
   567     06C0  3000               	movlw	0
   568     06C1  1C03               	skipc
   569     06C2  03B7               	decf	_j+1,f
   570     06C3  02B7               	subwf	_j+1,f
   571     06C4                     l956:
   572     06C4  3088               	movlw	136
   573     06C5  120A  118A  2546  120A  118A  	fcall	_lcd_command
   574     06CA                     l958:
   575     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   576     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   577     06CC  0837               	movf	_j+1,w
   578     06CD  00C3               	movwf	lcd_out@i+1
   579     06CE  0836               	movf	_j,w
   580     06CF  00C2               	movwf	lcd_out@i
   581     06D0  120A  118A  2707  120A  118A  	fcall	_lcd_out
   582     06D5                     l960:
   583     06D5  1283               	bcf	3,5	;RP0=0, select bank0
   584     06D6  1303               	bcf	3,6	;RP1=0, select bank0
   585     06D7  0836               	movf	_j,w
   586     06D8  0437               	iorwf	_j+1,w
   587     06D9  1D03               	btfss	3,2
   588     06DA  2EDC               	goto	u341
   589     06DB  2EDD               	goto	u340
   590     06DC                     u341:
   591     06DC  2E41               	goto	l914
   592     06DD                     u340:
   593     06DD                     l962:
   594     06DD  3001               	movlw	1
   595     06DE  00B6               	movwf	_j
   596     06DF  3000               	movlw	0
   597     06E0  00B7               	movwf	_j+1
   598     06E1  2E41               	goto	l914
   599     06E2                     l964:
   600     06E2  01B6               	clrf	_j
   601     06E3  01B7               	clrf	_j+1
   602     06E4                     l966:
   603     06E4  3088               	movlw	136
   604     06E5  120A  118A  2546  120A  118A  	fcall	_lcd_command
   605     06EA                     l968:
   606     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   607     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   608     06EC  0837               	movf	_j+1,w
   609     06ED  00C3               	movwf	lcd_out@i+1
   610     06EE  0836               	movf	_j,w
   611     06EF  00C2               	movwf	lcd_out@i
   612     06F0  120A  118A  2707  120A  118A  	fcall	_lcd_out
   613     06F5  2E41               	goto	l914
   614     06F6                     l972:
   615     06F6  0840               	movf	_value,w
   616                           
   617                           ; Switch size 1, requested type "simple"
   618                           ; Number of cases is 4, Range of values is 112 to 224
   619                           ; switch strategies available:
   620                           ; Name         Instructions Cycles
   621                           ; simple_byte           13     7 (average)
   622                           ; jumptable            263     9 (fixed)
   623                           ;	Chosen strategy is simple_byte
   624     06F7  3A70               	xorlw	112	; case 112
   625     06F8  1903               	skipnz
   626     06F9  2EE2               	goto	l964
   627     06FA  3AC0               	xorlw	192	; case 176
   628     06FB  1903               	skipnz
   629     06FC  2EBE               	goto	l954
   630     06FD  3A60               	xorlw	96	; case 208
   631     06FE  1903               	skipnz
   632     06FF  2E97               	goto	l946
   633     0700  3A30               	xorlw	48	; case 224
   634     0701  1903               	skipnz
   635     0702  2E46               	goto	l916
   636     0703  2E41               	goto	l914
   637     0704  120A  118A  2800   	ljmp	start
   638     0707                     __end_of_main:
   639                           
   640                           	psect	text1
   641     0707                     __ptext1:	
   642 ;; *************** function _lcd_out *****************
   643 ;; Defined at:
   644 ;;		line 86 in file "42.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  i               2    0[BANK0 ] unsigned int 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       2       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          0       6       0       0       0
   661 ;;      Totals:         0       8       0       0       0
   662 ;;Total ram usage:        8 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; Hardware stack levels required when called: 1
   665 ;; This function calls:
   666 ;;		___bmul
   667 ;;		___lwdiv
   668 ;;		___wmul
   669 ;;		_lcd_command
   670 ;;		_lcd_data
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676     0707                     _lcd_out:	
   677                           ;psect for function _lcd_out
   678                           
   679     0707                     l910:	
   680                           ;incstack = 0
   681                           ; Regs used in _lcd_out: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   682                           
   683     0707  30E8               	movlw	232
   684     0708  00F6               	movwf	___lwdiv@divisor
   685     0709  3003               	movlw	3
   686     070A  00F7               	movwf	___lwdiv@divisor+1
   687     070B  1283               	bcf	3,5	;RP0=0, select bank0
   688     070C  1303               	bcf	3,6	;RP1=0, select bank0
   689     070D  0843               	movf	lcd_out@i+1,w
   690     070E  00F9               	movwf	___lwdiv@dividend+1
   691     070F  0842               	movf	lcd_out@i,w
   692     0710  00F8               	movwf	___lwdiv@dividend
   693     0711  120A  118A  2582  120A  118A  	fcall	___lwdiv
   694     0716  0876               	movf	?___lwdiv,w
   695     0717  1283               	bcf	3,5	;RP0=0, select bank0
   696     0718  1303               	bcf	3,6	;RP1=0, select bank0
   697     0719  00C4               	movwf	??_lcd_out
   698     071A  01C5               	clrf	??_lcd_out+1
   699     071B  0844               	movf	??_lcd_out,w
   700     071C  00B8               	movwf	_d4
   701     071D  0845               	movf	??_lcd_out+1,w
   702     071E  00B9               	movwf	_d4+1
   703     071F  3064               	movlw	100
   704     0720  00F6               	movwf	___lwdiv@divisor
   705     0721  3000               	movlw	0
   706     0722  00F7               	movwf	___lwdiv@divisor+1
   707     0723  0839               	movf	_d4+1,w
   708     0724  00F1               	movwf	___wmul@multiplier+1
   709     0725  0838               	movf	_d4,w
   710     0726  00F0               	movwf	___wmul@multiplier
   711     0727  3018               	movlw	24
   712     0728  00F2               	movwf	___wmul@multiplicand
   713     0729  30FC               	movlw	252
   714     072A  00F3               	movwf	___wmul@multiplicand+1
   715     072B  120A  118A  255D  120A  118A  	fcall	___wmul
   716     0730  1283               	bcf	3,5	;RP0=0, select bank0
   717     0731  1303               	bcf	3,6	;RP1=0, select bank0
   718     0732  0842               	movf	lcd_out@i,w
   719     0733  0770               	addwf	?___wmul,w
   720     0734  00F8               	movwf	___lwdiv@dividend
   721     0735  0843               	movf	lcd_out@i+1,w
   722     0736  1803               	skipnc
   723     0737  0A43               	incf	lcd_out@i+1,w
   724     0738  0771               	addwf	?___wmul+1,w
   725     0739  00F9               	movwf	___lwdiv@dividend+1
   726     073A  120A  118A  2582  120A  118A  	fcall	___lwdiv
   727     073F  0876               	movf	?___lwdiv,w
   728     0740  1283               	bcf	3,5	;RP0=0, select bank0
   729     0741  1303               	bcf	3,6	;RP1=0, select bank0
   730     0742  00C4               	movwf	??_lcd_out
   731     0743  01C5               	clrf	??_lcd_out+1
   732     0744  0844               	movf	??_lcd_out,w
   733     0745  00BA               	movwf	_d3
   734     0746  0845               	movf	??_lcd_out+1,w
   735     0747  00BB               	movwf	_d3+1
   736     0748  300A               	movlw	10
   737     0749  00F6               	movwf	___lwdiv@divisor
   738     074A  3000               	movlw	0
   739     074B  00F7               	movwf	___lwdiv@divisor+1
   740     074C  0839               	movf	_d4+1,w
   741     074D  00F1               	movwf	___wmul@multiplier+1
   742     074E  0838               	movf	_d4,w
   743     074F  00F0               	movwf	___wmul@multiplier
   744     0750  3018               	movlw	24
   745     0751  00F2               	movwf	___wmul@multiplicand
   746     0752  30FC               	movlw	252
   747     0753  00F3               	movwf	___wmul@multiplicand+1
   748     0754  120A  118A  255D  120A  118A  	fcall	___wmul
   749     0759  0870               	movf	?___wmul,w
   750     075A  1283               	bcf	3,5	;RP0=0, select bank0
   751     075B  1303               	bcf	3,6	;RP1=0, select bank0
   752     075C  00C4               	movwf	??_lcd_out
   753     075D  0871               	movf	?___wmul+1,w
   754     075E  00C5               	movwf	??_lcd_out+1
   755     075F  083B               	movf	_d3+1,w
   756     0760  00F1               	movwf	___wmul@multiplier+1
   757     0761  083A               	movf	_d3,w
   758     0762  00F0               	movwf	___wmul@multiplier
   759     0763  309C               	movlw	156
   760     0764  00F2               	movwf	___wmul@multiplicand
   761     0765  30FF               	movlw	255
   762     0766  00F3               	movwf	___wmul@multiplicand+1
   763     0767  120A  118A  255D  120A  118A  	fcall	___wmul
   764     076C  0870               	movf	?___wmul,w
   765     076D  1283               	bcf	3,5	;RP0=0, select bank0
   766     076E  1303               	bcf	3,6	;RP1=0, select bank0
   767     076F  0744               	addwf	??_lcd_out,w
   768     0770  00C6               	movwf	??_lcd_out+2
   769     0771  0871               	movf	?___wmul+1,w
   770     0772  1803               	skipnc
   771     0773  0A71               	incf	?___wmul+1,w
   772     0774  0745               	addwf	??_lcd_out+1,w
   773     0775  00C7               	movwf	??_lcd_out+3
   774     0776  0842               	movf	lcd_out@i,w
   775     0777  0746               	addwf	??_lcd_out+2,w
   776     0778  00F8               	movwf	___lwdiv@dividend
   777     0779  0843               	movf	lcd_out@i+1,w
   778     077A  1803               	skipnc
   779     077B  0A43               	incf	lcd_out@i+1,w
   780     077C  0747               	addwf	??_lcd_out+3,w
   781     077D  00F9               	movwf	___lwdiv@dividend+1
   782     077E  120A  118A  2582  120A  118A  	fcall	___lwdiv
   783     0783  0876               	movf	?___lwdiv,w
   784     0784  1283               	bcf	3,5	;RP0=0, select bank0
   785     0785  1303               	bcf	3,6	;RP1=0, select bank0
   786     0786  00C8               	movwf	??_lcd_out+4
   787     0787  01C9               	clrf	??_lcd_out+5
   788     0788  0848               	movf	??_lcd_out+4,w
   789     0789  00BC               	movwf	_d2
   790     078A  0849               	movf	??_lcd_out+5,w
   791     078B  00BD               	movwf	_d2+1
   792     078C  3018               	movlw	24
   793     078D  00F0               	movwf	___bmul@multiplicand
   794     078E  0838               	movf	_d4,w
   795     078F  120A  118A  2531  120A  118A  	fcall	___bmul
   796     0794  1283               	bcf	3,5	;RP0=0, select bank0
   797     0795  1303               	bcf	3,6	;RP1=0, select bank0
   798     0796  00C4               	movwf	??_lcd_out
   799     0797  309C               	movlw	156
   800     0798  00F0               	movwf	___bmul@multiplicand
   801     0799  083A               	movf	_d3,w
   802     079A  120A  118A  2531  120A  118A  	fcall	___bmul
   803     079F  1283               	bcf	3,5	;RP0=0, select bank0
   804     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   805     07A1  00C5               	movwf	??_lcd_out+1
   806     07A2  30F6               	movlw	246
   807     07A3  00F0               	movwf	___bmul@multiplicand
   808     07A4  083C               	movf	_d2,w
   809     07A5  120A  118A  2531  120A  118A  	fcall	___bmul
   810     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   811     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   812     07AC  0745               	addwf	??_lcd_out+1,w
   813     07AD  0744               	addwf	??_lcd_out,w
   814     07AE  0742               	addwf	lcd_out@i,w
   815     07AF  00C6               	movwf	??_lcd_out+2
   816     07B0  01C7               	clrf	??_lcd_out+3
   817     07B1  0846               	movf	??_lcd_out+2,w
   818     07B2  00BE               	movwf	_d1
   819     07B3  0847               	movf	??_lcd_out+3,w
   820     07B4  00BF               	movwf	_d1+1
   821     07B5  3088               	movlw	136
   822     07B6  120A  118A  2546  120A  118A  	fcall	_lcd_command
   823     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   824     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   825     07BD  0838               	movf	_d4,w
   826     07BE  3E30               	addlw	48
   827     07BF  120A  118A  2509  120A  118A  	fcall	_lcd_data
   828     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   829     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   830     07C6  083A               	movf	_d3,w
   831     07C7  3E30               	addlw	48
   832     07C8  120A  118A  2509  120A  118A  	fcall	_lcd_data
   833     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   834     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   835     07CF  083C               	movf	_d2,w
   836     07D0  3E30               	addlw	48
   837     07D1  120A  118A  2509  120A  118A  	fcall	_lcd_data
   838     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   839     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   840     07D8  083E               	movf	_d1,w
   841     07D9  3E30               	addlw	48
   842     07DA  120A  118A  2509  120A  118A  	fcall	_lcd_data
   843     07DF                     l68:
   844     07DF  0008               	return
   845     07E0                     __end_of_lcd_out:
   846                           
   847                           	psect	text2
   848     0509                     __ptext2:	
   849 ;; *************** function _lcd_data *****************
   850 ;; Defined at:
   851 ;;		line 98 in file "42.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;  i               1    wreg     unsigned char 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  i               1    2[COMMON] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, btemp+1
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0
   867 ;;      Temps:          2       0       0       0       0
   868 ;;      Totals:         3       0       0       0       0
   869 ;;Total ram usage:        3 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;;		_lcd_out
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879     0509                     _lcd_data:	
   880                           ;psect for function _lcd_data
   881                           
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   885                           ;lcd_data@i stored from wreg
   886     0509  00F2               	movwf	lcd_data@i
   887     050A                     l804:
   888     050A  1283               	bcf	3,5	;RP0=0, select bank0
   889     050B  1303               	bcf	3,6	;RP1=0, select bank0
   890     050C  1587               	bsf	7,3	;volatile
   891     050D                     l806:
   892     050D  0872               	movf	lcd_data@i,w
   893     050E  0088               	movwf	8	;volatile
   894     050F                     l808:
   895     050F  1407               	bsf	7,0	;volatile
   896     0510                     l810:
   897     0510  30FE               	movlw	254
   898     0511  00FF               	movwf	btemp+1
   899     0512  087F               	movf	btemp+1,w
   900     0513  0587               	andwf	7,f	;volatile
   901     0514                     l812:
   902     0514  30C3               	movlw	195
   903     0515  00F1               	movwf	??_lcd_data+1
   904     0516  30CD               	movlw	205
   905     0517  00F0               	movwf	??_lcd_data
   906     0518                     u357:
   907     0518  0BF0               	decfsz	??_lcd_data,f
   908     0519  2D18               	goto	u357
   909     051A  0BF1               	decfsz	??_lcd_data+1,f
   910     051B  2D18               	goto	u357
   911     051C                     l71:
   912     051C  0008               	return
   913     051D                     __end_of_lcd_data:
   914                           
   915                           	psect	text3
   916     055D                     __ptext3:	
   917 ;; *************** function ___wmul *****************
   918 ;; Defined at:
   919 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  multiplier      2    0[COMMON] unsigned int 
   922 ;;  multiplicand    2    2[COMMON] unsigned int 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  product         2    4[COMMON] unsigned int 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  2    0[COMMON] unsigned int 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         4       0       0       0       0
   935 ;;      Locals:         2       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0
   937 ;;      Totals:         6       0       0       0       0
   938 ;;Total ram usage:        6 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_lcd_out
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947     055D                     ___wmul:	
   948                           ;psect for function ___wmul
   949                           
   950     055D                     l814:	
   951                           ;incstack = 0
   952                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   953                           
   954     055D  01F4               	clrf	___wmul@product
   955     055E  01F5               	clrf	___wmul@product+1
   956     055F                     l816:
   957     055F  1C70               	btfss	___wmul@multiplier,0
   958     0560  2D62               	goto	u181
   959     0561  2D63               	goto	u180
   960     0562                     u181:
   961     0562  2D69               	goto	l160
   962     0563                     u180:
   963     0563                     l818:
   964     0563  0872               	movf	___wmul@multiplicand,w
   965     0564  07F4               	addwf	___wmul@product,f
   966     0565  1803               	skipnc
   967     0566  0AF5               	incf	___wmul@product+1,f
   968     0567  0873               	movf	___wmul@multiplicand+1,w
   969     0568  07F5               	addwf	___wmul@product+1,f
   970     0569                     l160:
   971     0569  3001               	movlw	1
   972     056A                     u195:
   973     056A  1003               	clrc
   974     056B  0DF2               	rlf	___wmul@multiplicand,f
   975     056C  0DF3               	rlf	___wmul@multiplicand+1,f
   976     056D  3EFF               	addlw	-1
   977     056E  1D03               	skipz
   978     056F  2D6A               	goto	u195
   979     0570                     l820:
   980     0570  3001               	movlw	1
   981     0571                     u205:
   982     0571  1003               	clrc
   983     0572  0CF1               	rrf	___wmul@multiplier+1,f
   984     0573  0CF0               	rrf	___wmul@multiplier,f
   985     0574  3EFF               	addlw	-1
   986     0575  1D03               	skipz
   987     0576  2D71               	goto	u205
   988     0577                     l822:
   989     0577  0870               	movf	___wmul@multiplier,w
   990     0578  0471               	iorwf	___wmul@multiplier+1,w
   991     0579  1D03               	btfss	3,2
   992     057A  2D7C               	goto	u211
   993     057B  2D7D               	goto	u210
   994     057C                     u211:
   995     057C  2D5F               	goto	l816
   996     057D                     u210:
   997     057D                     l824:
   998     057D  0875               	movf	___wmul@product+1,w
   999     057E  00F1               	movwf	?___wmul+1
  1000     057F  0874               	movf	___wmul@product,w
  1001     0580  00F0               	movwf	?___wmul
  1002     0581                     l162:
  1003     0581  0008               	return
  1004     0582                     __end_of___wmul:
  1005                           
  1006                           	psect	text4
  1007     0582                     __ptext4:	
  1008 ;; *************** function ___lwdiv *****************
  1009 ;; Defined at:
  1010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  divisor         2    6[COMMON] unsigned int 
  1013 ;;  dividend        2    8[COMMON] unsigned int 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  quotient        2   10[COMMON] unsigned int 
  1016 ;;  counter         1   12[COMMON] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2    6[COMMON] unsigned int 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, btemp+1
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         4       0       0       0       0
  1027 ;;      Locals:         3       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         7       0       0       0       0
  1030 ;;Total ram usage:        7 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_lcd_out
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039     0582                     ___lwdiv:	
  1040                           ;psect for function ___lwdiv
  1041                           
  1042     0582                     l844:	
  1043                           ;incstack = 0
  1044                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1045                           
  1046     0582  01FA               	clrf	___lwdiv@quotient
  1047     0583  01FB               	clrf	___lwdiv@quotient+1
  1048     0584                     l846:
  1049     0584  0876               	movf	___lwdiv@divisor,w
  1050     0585  0477               	iorwf	___lwdiv@divisor+1,w
  1051     0586  1903               	btfsc	3,2
  1052     0587  2D89               	goto	u241
  1053     0588  2D8A               	goto	u240
  1054     0589                     u241:
  1055     0589  2DC1               	goto	l866
  1056     058A                     u240:
  1057     058A                     l848:
  1058     058A  01FC               	clrf	___lwdiv@counter
  1059     058B  0AFC               	incf	___lwdiv@counter,f
  1060     058C  2D98               	goto	l854
  1061     058D                     l850:
  1062     058D  3001               	movlw	1
  1063     058E                     u255:
  1064     058E  1003               	clrc
  1065     058F  0DF6               	rlf	___lwdiv@divisor,f
  1066     0590  0DF7               	rlf	___lwdiv@divisor+1,f
  1067     0591  3EFF               	addlw	-1
  1068     0592  1D03               	skipz
  1069     0593  2D8E               	goto	u255
  1070     0594                     l852:
  1071     0594  3001               	movlw	1
  1072     0595  00FF               	movwf	btemp+1
  1073     0596  087F               	movf	btemp+1,w
  1074     0597  07FC               	addwf	___lwdiv@counter,f
  1075     0598                     l854:
  1076     0598  1FF7               	btfss	___lwdiv@divisor+1,7
  1077     0599  2D9B               	goto	u261
  1078     059A  2D9C               	goto	u260
  1079     059B                     u261:
  1080     059B  2D8D               	goto	l850
  1081     059C                     u260:
  1082     059C                     l856:
  1083     059C  3001               	movlw	1
  1084     059D                     u275:
  1085     059D  1003               	clrc
  1086     059E  0DFA               	rlf	___lwdiv@quotient,f
  1087     059F  0DFB               	rlf	___lwdiv@quotient+1,f
  1088     05A0  3EFF               	addlw	-1
  1089     05A1  1D03               	skipz
  1090     05A2  2D9D               	goto	u275
  1091     05A3  0877               	movf	___lwdiv@divisor+1,w
  1092     05A4  0279               	subwf	___lwdiv@dividend+1,w
  1093     05A5  1D03               	skipz
  1094     05A6  2DA9               	goto	u285
  1095     05A7  0876               	movf	___lwdiv@divisor,w
  1096     05A8  0278               	subwf	___lwdiv@dividend,w
  1097     05A9                     u285:
  1098     05A9  1C03               	skipc
  1099     05AA  2DAC               	goto	u281
  1100     05AB  2DAD               	goto	u280
  1101     05AC                     u281:
  1102     05AC  2DB4               	goto	l862
  1103     05AD                     u280:
  1104     05AD                     l858:
  1105     05AD  0876               	movf	___lwdiv@divisor,w
  1106     05AE  02F8               	subwf	___lwdiv@dividend,f
  1107     05AF  0877               	movf	___lwdiv@divisor+1,w
  1108     05B0  1C03               	skipc
  1109     05B1  03F9               	decf	___lwdiv@dividend+1,f
  1110     05B2  02F9               	subwf	___lwdiv@dividend+1,f
  1111     05B3                     l860:
  1112     05B3  147A               	bsf	___lwdiv@quotient,0
  1113     05B4                     l862:
  1114     05B4  3001               	movlw	1
  1115     05B5                     u295:
  1116     05B5  1003               	clrc
  1117     05B6  0CF7               	rrf	___lwdiv@divisor+1,f
  1118     05B7  0CF6               	rrf	___lwdiv@divisor,f
  1119     05B8  3EFF               	addlw	-1
  1120     05B9  1D03               	skipz
  1121     05BA  2DB5               	goto	u295
  1122     05BB                     l864:
  1123     05BB  3001               	movlw	1
  1124     05BC  02FC               	subwf	___lwdiv@counter,f
  1125     05BD  1D03               	btfss	3,2
  1126     05BE  2DC0               	goto	u301
  1127     05BF  2DC1               	goto	u300
  1128     05C0                     u301:
  1129     05C0  2D9C               	goto	l856
  1130     05C1                     u300:
  1131     05C1                     l866:
  1132     05C1  087B               	movf	___lwdiv@quotient+1,w
  1133     05C2  00F7               	movwf	?___lwdiv+1
  1134     05C3  087A               	movf	___lwdiv@quotient,w
  1135     05C4  00F6               	movwf	?___lwdiv
  1136     05C5                     l440:
  1137     05C5  0008               	return
  1138     05C6                     __end_of___lwdiv:
  1139                           
  1140                           	psect	text5
  1141     0531                     __ptext5:	
  1142 ;; *************** function ___bmul *****************
  1143 ;; Defined at:
  1144 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  multiplier      1    wreg     unsigned char 
  1147 ;;  multiplicand    1    0[COMMON] unsigned char 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  multiplier      1    2[COMMON] unsigned char 
  1150 ;;  product         1    1[COMMON] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      unsigned char 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, btemp+1
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         1       0       0       0       0
  1161 ;;      Locals:         2       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0
  1163 ;;      Totals:         3       0       0       0       0
  1164 ;;Total ram usage:        3 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_lcd_out
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173     0531                     ___bmul:	
  1174                           ;psect for function ___bmul
  1175                           
  1176                           
  1177                           ;incstack = 0
  1178                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1179                           ;___bmul@multiplier stored from wreg
  1180     0531  00F2               	movwf	___bmul@multiplier
  1181     0532                     l828:
  1182     0532  01F1               	clrf	___bmul@product
  1183     0533                     l830:
  1184     0533  1C72               	btfss	___bmul@multiplier,0
  1185     0534  2D36               	goto	u221
  1186     0535  2D37               	goto	u220
  1187     0536                     u221:
  1188     0536  2D3B               	goto	l834
  1189     0537                     u220:
  1190     0537                     l832:
  1191     0537  0870               	movf	___bmul@multiplicand,w
  1192     0538  00FF               	movwf	btemp+1
  1193     0539  087F               	movf	btemp+1,w
  1194     053A  07F1               	addwf	___bmul@product,f
  1195     053B                     l834:
  1196     053B  1003               	clrc
  1197     053C  0DF0               	rlf	___bmul@multiplicand,f
  1198     053D                     l836:
  1199     053D  1003               	clrc
  1200     053E  0CF2               	rrf	___bmul@multiplier,f
  1201     053F                     l838:
  1202     053F  0872               	movf	___bmul@multiplier,w
  1203     0540  1D03               	btfss	3,2
  1204     0541  2D43               	goto	u231
  1205     0542  2D44               	goto	u230
  1206     0543                     u231:
  1207     0543  2D33               	goto	l830
  1208     0544                     u230:
  1209     0544                     l840:
  1210     0544  0871               	movf	___bmul@product,w
  1211     0545                     l186:
  1212     0545  0008               	return
  1213     0546                     __end_of___bmul:
  1214                           
  1215                           	psect	text6
  1216     05C6                     __ptext6:	
  1217 ;; *************** function _initiate *****************
  1218 ;; Defined at:
  1219 ;;		line 63 in file "42.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0
  1235 ;;      Temps:          2       0       0       0       0
  1236 ;;      Totals:         2       0       0       0       0
  1237 ;;Total ram usage:        2 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 1
  1240 ;; This function calls:
  1241 ;;		_lcd_command
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247     05C6                     _initiate:	
  1248                           ;psect for function _initiate
  1249                           
  1250     05C6                     l870:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _initiate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1253                           
  1254     05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1255     05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1256     05C8  0187               	clrf	7	;volatile
  1257     05C9                     l872:
  1258     05C9  30F0               	movlw	240
  1259     05CA  0086               	movwf	6	;volatile
  1260     05CB                     l874:
  1261     05CB  0188               	clrf	8	;volatile
  1262     05CC                     l876:
  1263     05CC  1283               	bcf	3,5	;RP0=0, select bank0
  1264     05CD  1303               	bcf	3,6	;RP1=0, select bank0
  1265     05CE  0186               	clrf	6	;volatile
  1266     05CF                     l878:
  1267     05CF  307F               	movlw	127
  1268     05D0  00FF               	movwf	btemp+1
  1269     05D1  087F               	movf	btemp+1,w
  1270     05D2  1683               	bsf	3,5	;RP0=1, select bank1
  1271     05D3  1303               	bcf	3,6	;RP1=0, select bank1
  1272     05D4  0581               	andwf	1,f	;volatile
  1273     05D5                     l880:
  1274     05D5  3033               	movlw	51
  1275     05D6  120A  118A  2546  120A  118A  	fcall	_lcd_command
  1276     05DB                     l882:
  1277     05DB  30C3               	movlw	195
  1278     05DC  00F4               	movwf	??_initiate+1
  1279     05DD  30CD               	movlw	205
  1280     05DE  00F3               	movwf	??_initiate
  1281     05DF                     u367:
  1282     05DF  0BF3               	decfsz	??_initiate,f
  1283     05E0  2DDF               	goto	u367
  1284     05E1  0BF4               	decfsz	??_initiate+1,f
  1285     05E2  2DDF               	goto	u367
  1286     05E3                     l884:
  1287     05E3  3034               	movlw	52
  1288     05E4  120A  118A  2546  120A  118A  	fcall	_lcd_command
  1289     05E9                     l886:
  1290     05E9  30C3               	movlw	195
  1291     05EA  00F4               	movwf	??_initiate+1
  1292     05EB  30CD               	movlw	205
  1293     05EC  00F3               	movwf	??_initiate
  1294     05ED                     u377:
  1295     05ED  0BF3               	decfsz	??_initiate,f
  1296     05EE  2DED               	goto	u377
  1297     05EF  0BF4               	decfsz	??_initiate+1,f
  1298     05F0  2DED               	goto	u377
  1299     05F1                     l888:
  1300     05F1  3035               	movlw	53
  1301     05F2  120A  118A  2546  120A  118A  	fcall	_lcd_command
  1302     05F7                     l890:
  1303     05F7  30C3               	movlw	195
  1304     05F8  00F4               	movwf	??_initiate+1
  1305     05F9  30CD               	movlw	205
  1306     05FA  00F3               	movwf	??_initiate
  1307     05FB                     u387:
  1308     05FB  0BF3               	decfsz	??_initiate,f
  1309     05FC  2DFB               	goto	u387
  1310     05FD  0BF4               	decfsz	??_initiate+1,f
  1311     05FE  2DFB               	goto	u387
  1312     05FF                     l892:
  1313     05FF  3038               	movlw	56
  1314     0600  120A  118A  2546  120A  118A  	fcall	_lcd_command
  1315     0605                     l894:
  1316     0605  30C3               	movlw	195
  1317     0606  00F4               	movwf	??_initiate+1
  1318     0607  30CD               	movlw	205
  1319     0608  00F3               	movwf	??_initiate
  1320     0609                     u397:
  1321     0609  0BF3               	decfsz	??_initiate,f
  1322     060A  2E09               	goto	u397
  1323     060B  0BF4               	decfsz	??_initiate+1,f
  1324     060C  2E09               	goto	u397
  1325     060D                     l896:
  1326     060D  3006               	movlw	6
  1327     060E  120A  118A  2546  120A  118A  	fcall	_lcd_command
  1328     0613                     l898:
  1329     0613  30C3               	movlw	195
  1330     0614  00F4               	movwf	??_initiate+1
  1331     0615  30CD               	movlw	205
  1332     0616  00F3               	movwf	??_initiate
  1333     0617                     u407:
  1334     0617  0BF3               	decfsz	??_initiate,f
  1335     0618  2E17               	goto	u407
  1336     0619  0BF4               	decfsz	??_initiate+1,f
  1337     061A  2E17               	goto	u407
  1338     061B                     l900:
  1339     061B  300C               	movlw	12
  1340     061C  120A  118A  2546  120A  118A  	fcall	_lcd_command
  1341     0621                     l902:
  1342     0621  30C3               	movlw	195
  1343     0622  00F4               	movwf	??_initiate+1
  1344     0623  30CD               	movlw	205
  1345     0624  00F3               	movwf	??_initiate
  1346     0625                     u417:
  1347     0625  0BF3               	decfsz	??_initiate,f
  1348     0626  2E25               	goto	u417
  1349     0627  0BF4               	decfsz	??_initiate+1,f
  1350     0628  2E25               	goto	u417
  1351     0629                     l904:
  1352     0629  3001               	movlw	1
  1353     062A  120A  118A  2546  120A  118A  	fcall	_lcd_command
  1354     062F                     l906:
  1355     062F  30C3               	movlw	195
  1356     0630  00F4               	movwf	??_initiate+1
  1357     0631  30CD               	movlw	205
  1358     0632  00F3               	movwf	??_initiate
  1359     0633                     u427:
  1360     0633  0BF3               	decfsz	??_initiate,f
  1361     0634  2E33               	goto	u427
  1362     0635  0BF4               	decfsz	??_initiate+1,f
  1363     0636  2E33               	goto	u427
  1364     0637                     l908:
  1365     0637  1283               	bcf	3,5	;RP0=0, select bank0
  1366     0638  1303               	bcf	3,6	;RP1=0, select bank0
  1367     0639  01B6               	clrf	_j
  1368     063A  01B7               	clrf	_j+1
  1369     063B                     l65:
  1370     063B  0008               	return
  1371     063C                     __end_of_initiate:
  1372                           
  1373                           	psect	text7
  1374     0546                     __ptext7:	
  1375 ;; *************** function _lcd_command *****************
  1376 ;; Defined at:
  1377 ;;		line 106 in file "42.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  i               1    wreg     unsigned char 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  i               1    2[COMMON] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, btemp+1
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       0       0       0       0
  1392 ;;      Locals:         1       0       0       0       0
  1393 ;;      Temps:          2       0       0       0       0
  1394 ;;      Totals:         3       0       0       0       0
  1395 ;;Total ram usage:        3 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;;		_initiate
  1402 ;;		_lcd_out
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406     0546                     _lcd_command:	
  1407                           ;psect for function _lcd_command
  1408                           
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1]
  1412                           ;lcd_command@i stored from wreg
  1413     0546  00F2               	movwf	lcd_command@i
  1414     0547                     l796:
  1415     0547  30F7               	movlw	247
  1416     0548  00FF               	movwf	btemp+1
  1417     0549  087F               	movf	btemp+1,w
  1418     054A  1283               	bcf	3,5	;RP0=0, select bank0
  1419     054B  1303               	bcf	3,6	;RP1=0, select bank0
  1420     054C  0587               	andwf	7,f	;volatile
  1421     054D                     l798:
  1422     054D  0872               	movf	lcd_command@i,w
  1423     054E  0088               	movwf	8	;volatile
  1424     054F                     l800:
  1425     054F  1407               	bsf	7,0	;volatile
  1426     0550                     l802:
  1427     0550  30FE               	movlw	254
  1428     0551  00FF               	movwf	btemp+1
  1429     0552  087F               	movf	btemp+1,w
  1430     0553  0587               	andwf	7,f	;volatile
  1431     0554  30C3               	movlw	195
  1432     0555  00F1               	movwf	??_lcd_command+1
  1433     0556  30CD               	movlw	205
  1434     0557  00F0               	movwf	??_lcd_command
  1435     0558                     u437:
  1436     0558  0BF0               	decfsz	??_lcd_command,f
  1437     0559  2D58               	goto	u437
  1438     055A  0BF1               	decfsz	??_lcd_command+1,f
  1439     055B  2D58               	goto	u437
  1440     055C                     l74:
  1441     055C  0008               	return
  1442     055D                     __end_of_lcd_command:
  1443     007E                     btemp	set	126	;btemp
  1444     007E                     wtemp0	set	126
  1445                           
  1446                           	psect	config
  1447                           
  1448                           ;Config register CONFIG @ 0x2007
  1449                           ;	Oscillator Selection bits
  1450                           ;	FOSC = EXTRC, RC oscillator
  1451                           ;	Watchdog Timer Enable bit
  1452                           ;	WDTE = OFF, WDT disabled
  1453                           ;	Power-up Timer Enable bit
  1454                           ;	PWRTE = OFF, PWRT disabled
  1455                           ;	Brown-out Reset Enable bit
  1456                           ;	BOREN = OFF, BOR disabled
  1457                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1458                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1459                           ;	Data EEPROM Memory Code Protection bit
  1460                           ;	CPD = OFF, Data EEPROM code protection off
  1461                           ;	Flash Program Memory Write Enable bits
  1462                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1463                           ;	In-Circuit Debugger Mode bit
  1464                           ;	DEBUG = 0x1, unprogrammed default
  1465                           ;	Flash Program Memory Code Protection bit
  1466                           ;	CP = OFF, Code protection off
  1467     2007                     	org	8199
  1468     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      8      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lcd_out->___lwdiv
    ___lwdiv->___wmul
    _initiate->_lcd_command

Critical Paths under _main in BANK0

    _main->_lcd_out

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1988
                           _initiate
                        _lcd_command
                           _lcd_data
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              8     6      2    1922
                                              0 BANK0      8     6      2
                             ___bmul
                            ___lwdiv
                             ___wmul
                        _lcd_command
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _initiate                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
     _lcd_command
   _lcd_command
   _lcd_data
   _lcd_out
     ___bmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _lcd_command
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 16 20:31:40 2024

                      _i 0034                        _j 0036                        _k 0020  
                      _x 0041                        pc 0002           ___bmul@product 0071  
                     l71 051C                       l65 063B                       l74 055C  
                     l68 07DF                       _d1 003E                       _d2 003C  
                     _d3 003A                       _d4 0038                       fsr 0004  
    ___wmul@multiplicand 0072                      l160 0569                      l162 0581  
                    l440 05C5                      l186 0545                      l800 054F  
                    l802 0550                      l810 0510                      l900 061B  
                    l820 0570                      l812 0514                      l804 050A  
                    l902 0621                      l830 0533                      l822 0577  
                    l814 055D                      l806 050D                      l910 0707  
                    l904 0629                      l840 0544                      l832 0537  
                    l824 057D                      l816 055F                      l808 050F  
                    l912 063C                      l906 062F                      l834 053B  
                    l850 058D                      l818 0563                      l930 0665  
                    l914 0641                      l908 0637                      l836 053D  
                    l828 0532                      l860 05B3                      l852 0594  
                    l844 0582                      l940 0679                      l932 066B  
                    l924 064F                      l916 0646                      l870 05C6  
                    l838 053F                      l862 05B4                      l854 0598  
                    l846 0584                      l950 06A3                      l942 067F  
                    l926 0659                      l918 064C                      l880 05D5  
                    l872 05C9                      l864 05BB                      l856 059C  
                    l848 058A                      l960 06D5                      l952 06B9  
                    l944 0685                      l928 065F                      l890 05F7  
                    l882 05DB                      l874 05CB                      l858 05AD  
                    l866 05C1                      l962 06DD                      l954 06BE  
                    l946 0697                      l938 066F                      l796 0547  
                    l892 05FF                      l884 05E3                      l876 05CC  
                    l964 06E2                      l956 06C4                      l948 069D  
                    l972 06F6                      l798 054D                      l894 0605  
                    l886 05E9                      l878 05CF                      l966 06E4  
                    l958 06CA                      l896 060D                      l888 05F1  
                    l968 06EA                      l898 0613                      u210 057D  
                    u211 057C                      u220 0537                      u300 05C1  
                    u221 0536                      u301 05C0                      u205 0571  
                    u230 0544                      u310 0665                      u231 0543  
                    u311 0664                      u240 058A                      u320 0685  
                    u241 0589                      u321 0684                      u330 06B9  
                    u331 06B8                      u260 059C                      u180 0563  
                    u340 06DD                      u261 059B                      u181 0562  
                    u341 06DC                      u407 0617                      u255 058E  
                    u280 05AD                      u417 0625                      u281 05AC  
                    u427 0633                      u275 059D                      u195 056A  
                    u437 0558                      u285 05A9                      u357 0518  
                    u367 05DF                      u295 05B5                      u377 05ED  
                    u387 05FB                      u397 0609                      fsr0 0004  
                    indf 0000             lcd_command@i 0072                     _main 063C  
                   btemp 007E                     start 0000        ___bmul@multiplier 0072  
                  ?_main 0070          __end_of___lwdiv 05C6                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_lcd_out 07E0  
                  _value 0040                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E0             __end_of_main 0707  
                 ??_main 007D         __end_of_lcd_data 051D                   ___bmul 0531  
                 ___wmul 055D                ??___lwdiv 007A         __end_of_initiate 063C  
              ??_lcd_out 0044  __end_of__initialization 07FC      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 051D               __pbssBANK0 0034  
             __pmaintext 063C                  ?___bmul 0070                  ?___wmul 0070  
              ?_lcd_data 0070                ?_initiate 0070                  ___lwdiv 0582  
                __ptext1 0707                  __ptext2 0509                  __ptext3 055D  
                __ptext4 0582                  __ptext5 0531                  __ptext6 05C6  
                __ptext7 0546                  _lcd_out 0707               ??_lcd_data 0070  
   end_of_initialization 07FC               ??_initiate 0073            ??_lcd_command 0070  
         __end_of___bmul 0546           __end_of___wmul 0582      start_initialization 07E0  
               ??___bmul 0071                 ??___wmul 0074               init_fetch0 04F6  
    __end_of_lcd_command 055D              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 0042         ___lwdiv@dividend 0078                 ?___lwdiv 0076  
               ?_lcd_out 0042         ___lwdiv@quotient 007A           ___wmul@product 0074  
            _lcd_command 0546                lcd_data@i 0072        ___wmul@multiplier 0070  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007C                 _lcd_data 0509  
               _initiate 05C6                 lcd_out@i 0042                 init_ram0 04FA  
             _OPTION_REG 0081             ?_lcd_command 0070  
