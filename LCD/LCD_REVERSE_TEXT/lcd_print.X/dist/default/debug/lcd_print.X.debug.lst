

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 08 16:58:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     0710                     __pidataBANK0:
   174                           
   175                           ;initializer for _array
   176     0710  3448               	retlw	72
   177     0711  3445               	retlw	69
   178     0712  344C               	retlw	76
   179     0713  344C               	retlw	76
   180     0714  344F               	retlw	79
   181     0715  3420               	retlw	32
   182     0716  3457               	retlw	87
   183     0717  344F               	retlw	79
   184     0718  3452               	retlw	82
   185     0719  344C               	retlw	76
   186     071A  3444               	retlw	68
   187     071B  3400               	retlw	0
   188     071C  3400               	retlw	0
   189     071D  3400               	retlw	0
   190     071E  3400               	retlw	0
   191     071F  3400               	retlw	0
   192     0720  3400               	retlw	0
   193     0721  3400               	retlw	0
   194     0008                     _PORTD	set	8
   195     0007                     _PORTC	set	7
   196     0088                     _TRISD	set	136
   197     0087                     _TRISC	set	135
   198                           
   199                           	psect	cinit
   200     07EB                     start_initialization:	
   201                           ; #config settings
   202                           
   203     07EB                     __initialization:
   204                           
   205                           ; Initialize objects allocated to BANK0
   206     07EB  1383               	bcf	3,7	;select IRP bank0
   207     07EC  3032               	movlw	low (__pdataBANK0+18)
   208     07ED  00FD               	movwf	btemp+-1
   209     07EE  3007               	movlw	high __pidataBANK0
   210     07EF  00FE               	movwf	btemp
   211     07F0  3010               	movlw	low __pidataBANK0
   212     07F1  00FF               	movwf	btemp+1
   213     07F2  3020               	movlw	low __pdataBANK0
   214     07F3  0084               	movwf	4
   215     07F4  120A  118A  2726  120A  118A  	fcall	init_ram0
   216                           
   217                           ; Clear objects allocated to COMMON
   218     07F9  01F5               	clrf	__pbssCOMMON& (0+127)
   219     07FA  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   220     07FB  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   221     07FC                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224     07FC                     __end_of__initialization:
   225     07FC  0183               	clrf	3
   226     07FD  120A  118A  2F60   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMMON
   229     0075                     __pbssCOMMON:
   230     0075                     _m:
   231     0075                     	ds	1
   232     0076                     _i:
   233     0076                     	ds	1
   234     0077                     _x:
   235     0077                     	ds	1
   236                           
   237                           	psect	dataBANK0
   238     0020                     __pdataBANK0:
   239     0020                     _array:
   240     0020                     	ds	18
   241                           
   242                           	psect	inittext
   243     0722                     init_fetch0:	
   244                           ;	Called with low address in FSR and high address in W
   245                           
   246     0722  087E               	movf	btemp,w
   247     0723  008A               	movwf	10
   248     0724  087F               	movf	btemp+1,w
   249     0725  0082               	movwf	2
   250     0726                     init_ram0:	
   251                           ;Called with:
   252                           ;	high address of idata address in btemp 
   253                           ;	low address of idata address in btemp+1 
   254                           ;	low address of data in FSR
   255                           ;	high address + 1 of data in btemp-1
   256                           
   257     0726  120A  118A  2722  120A  118A  	fcall	init_fetch0
   258     072B  0080               	movwf	0
   259     072C  0A84               	incf	4,f
   260     072D  0804               	movf	4,w
   261     072E  067D               	xorwf	btemp+-1,w
   262     072F  1903               	btfsc	3,2
   263     0730  3400               	retlw	0
   264     0731  0AFF               	incf	btemp+1,f
   265     0732  1903               	btfsc	3,2
   266     0733  0AFE               	incf	btemp,f
   267     0734  2F26               	goto	init_ram0
   268                           
   269                           	psect	cstackCOMMON
   270     0070                     __pcstackCOMMON:
   271     0070                     ?_init:
   272     0070                     ?_lcd_Command:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ??_lcd_Command:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     ?_lcd_Data:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ??_lcd_Data:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ?_main:	
   285                           ; 1 bytes @ 0x0
   286                           
   287                           
   288                           ; 1 bytes @ 0x0
   289     0070                     	ds	2
   290     0072                     lcd_Data@i:
   291     0072                     lcd_Command@i:	
   292                           ; 1 bytes @ 0x2
   293                           
   294                           
   295                           ; 1 bytes @ 0x2
   296     0072                     	ds	1
   297     0073                     ??_init:
   298                           
   299                           ; 1 bytes @ 0x3
   300     0073                     	ds	2
   301     0075                     ??_main:
   302                           
   303                           	psect	maintext
   304     0760                     __pmaintext:	
   305                           ; 1 bytes @ 0x5
   306 ;;
   307 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   308 ;;
   309 ;; *************** function _main *****************
   310 ;; Defined at:
   311 ;;		line 22 in file "lcd.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : B00/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels required when called: 2
   331 ;; This function calls:
   332 ;;		_init
   333 ;;		_lcd_Command
   334 ;;		_lcd_Data
   335 ;; This function is called by:
   336 ;;		Startup code after reset
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340     0760                     _main:	
   341                           ;psect for function _main
   342                           
   343     0760                     l635:	
   344                           ;incstack = 0
   345                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   346                           
   347                           
   348                           ;lcd.c: 23:     init();
   349     0760  120A  118A  2784  120A  118A  	fcall	_init
   350                           
   351                           ;lcd.c: 24:     lcd_Command(0x80);
   352     0765  3080               	movlw	128
   353     0766  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   354     076B                     l637:
   355                           
   356                           ;lcd.c: 26:     for(x=0;x<11;x++){
   357     076B  01F7               	clrf	_x
   358     076C                     l643:
   359                           
   360                           ;lcd.c: 27:         lcd_Data(array[x]);
   361     076C  0877               	movf	_x,w
   362     076D  3E20               	addlw	(low (_array| 0))& (0+255)
   363     076E  0084               	movwf	4
   364     076F  1383               	bcf	3,7	;select IRP bank0
   365     0770  0800               	movf	0,w
   366     0771  120A  118A  2735  120A  118A  	fcall	_lcd_Data
   367     0776                     l645:
   368                           
   369                           ;lcd.c: 28:     }
   370     0776  3001               	movlw	1
   371     0777  00FF               	movwf	btemp+1
   372     0778  087F               	movf	btemp+1,w
   373     0779  07F7               	addwf	_x,f
   374     077A                     l647:
   375     077A  300B               	movlw	11
   376     077B  0277               	subwf	_x,w
   377     077C  1C03               	skipc
   378     077D  2F7F               	goto	u11
   379     077E  2F80               	goto	u10
   380     077F                     u11:
   381     077F  2F6C               	goto	l643
   382     0780                     u10:
   383     0780                     l31:	
   384                           ;lcd.c: 29:     while(1);
   385                           
   386     0780  2F80               	goto	l31
   387     0781  120A  118A  2800   	ljmp	start
   388     0784                     __end_of_main:
   389                           
   390                           	psect	text1
   391     0735                     __ptext1:	
   392 ;; *************** function _lcd_Data *****************
   393 ;; Defined at:
   394 ;;		line 53 in file "lcd.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;  i               1    wreg     unsigned char 
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  i               1    2[COMMON] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, btemp+1
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         1       0       0       0       0
   410 ;;      Temps:          2       0       0       0       0
   411 ;;      Totals:         3       0       0       0       0
   412 ;;Total ram usage:        3 bytes
   413 ;; Hardware stack levels used: 1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		_main
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     0735                     _lcd_Data:	
   422                           ;psect for function _lcd_Data
   423                           
   424                           
   425                           ;incstack = 0
   426                           ; Regs used in _lcd_Data: [wreg+status,2+status,0+btemp+1]
   427                           ;lcd_Data@i stored from wreg
   428     0735  00F2               	movwf	lcd_Data@i
   429     0736                     l625:
   430                           
   431                           ;lcd.c: 53: void lcd_Data(unsigned char i);lcd.c: 54: {;lcd.c: 55:     PORTC|=0x08;
   432     0736  1283               	bcf	3,5	;RP0=0, select bank0
   433     0737  1303               	bcf	3,6	;RP1=0, select bank0
   434     0738  1587               	bsf	7,3	;volatile
   435     0739                     l627:
   436                           
   437                           ;lcd.c: 56:     PORTD=i;
   438     0739  0872               	movf	lcd_Data@i,w
   439     073A  0088               	movwf	8	;volatile
   440     073B                     l629:
   441                           
   442                           ;lcd.c: 57:     PORTC|=0x01;
   443     073B  1407               	bsf	7,0	;volatile
   444     073C                     l631:
   445                           
   446                           ;lcd.c: 58:     PORTC&=~0x01;
   447     073C  30FE               	movlw	254
   448     073D  00FF               	movwf	btemp+1
   449     073E  087F               	movf	btemp+1,w
   450     073F  0587               	andwf	7,f	;volatile
   451     0740                     l633:
   452                           
   453                           ;lcd.c: 59:     _delay((unsigned long)((100)*(6000000/4000.0)));
   454     0740  30C3               	movlw	195
   455     0741  00F1               	movwf	??_lcd_Data+1
   456     0742  30CD               	movlw	205
   457     0743  00F0               	movwf	??_lcd_Data
   458     0744                     u27:
   459     0744  0BF0               	decfsz	??_lcd_Data,f
   460     0745  2F44               	goto	u27
   461     0746  0BF1               	decfsz	??_lcd_Data+1,f
   462     0747  2F44               	goto	u27
   463     0748                     l40:
   464     0748  0008               	return
   465     0749                     __end_of_lcd_Data:
   466                           
   467                           	psect	text2
   468     0784                     __ptext2:	
   469 ;; *************** function _init *****************
   470 ;; Defined at:
   471 ;;		line 32 in file "lcd.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          2       0       0       0       0
   488 ;;      Totals:         2       0       0       0       0
   489 ;;Total ram usage:        2 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 1
   492 ;; This function calls:
   493 ;;		_lcd_Command
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     0784                     _init:	
   500                           ;psect for function _init
   501                           
   502     0784                     l595:	
   503                           ;incstack = 0
   504                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   505                           
   506                           
   507                           ;lcd.c: 34:     TRISC=0x00;
   508     0784  1683               	bsf	3,5	;RP0=1, select bank1
   509     0785  1303               	bcf	3,6	;RP1=0, select bank1
   510     0786  0187               	clrf	7	;volatile
   511                           
   512                           ;lcd.c: 35:     TRISD=0x00;
   513     0787  0188               	clrf	8	;volatile
   514     0788                     l597:
   515                           
   516                           ;lcd.c: 36:     lcd_Command(0x38);
   517     0788  3038               	movlw	56
   518     0789  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   519     078E                     l599:
   520                           
   521                           ;lcd.c: 37:     _delay((unsigned long)((100)*(6000000/4000.0)));
   522     078E  30C3               	movlw	195
   523     078F  00F4               	movwf	??_init+1
   524     0790  30CD               	movlw	205
   525     0791  00F3               	movwf	??_init
   526     0792                     u37:
   527     0792  0BF3               	decfsz	??_init,f
   528     0793  2F92               	goto	u37
   529     0794  0BF4               	decfsz	??_init+1,f
   530     0795  2F92               	goto	u37
   531     0796                     l601:
   532                           
   533                           ;lcd.c: 38:     lcd_Command(0x38);
   534     0796  3038               	movlw	56
   535     0797  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   536     079C                     l603:
   537                           
   538                           ;lcd.c: 39:     _delay((unsigned long)((100)*(6000000/4000.0)));
   539     079C  30C3               	movlw	195
   540     079D  00F4               	movwf	??_init+1
   541     079E  30CD               	movlw	205
   542     079F  00F3               	movwf	??_init
   543     07A0                     u47:
   544     07A0  0BF3               	decfsz	??_init,f
   545     07A1  2FA0               	goto	u47
   546     07A2  0BF4               	decfsz	??_init+1,f
   547     07A3  2FA0               	goto	u47
   548     07A4                     l605:
   549                           
   550                           ;lcd.c: 40:     lcd_Command(0x38);
   551     07A4  3038               	movlw	56
   552     07A5  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   553     07AA                     l607:
   554                           
   555                           ;lcd.c: 41:     _delay((unsigned long)((100)*(6000000/4000.0)));
   556     07AA  30C3               	movlw	195
   557     07AB  00F4               	movwf	??_init+1
   558     07AC  30CD               	movlw	205
   559     07AD  00F3               	movwf	??_init
   560     07AE                     u57:
   561     07AE  0BF3               	decfsz	??_init,f
   562     07AF  2FAE               	goto	u57
   563     07B0  0BF4               	decfsz	??_init+1,f
   564     07B1  2FAE               	goto	u57
   565     07B2                     l609:
   566                           
   567                           ;lcd.c: 42:     lcd_Command(0x38);
   568     07B2  3038               	movlw	56
   569     07B3  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   570     07B8                     l611:
   571                           
   572                           ;lcd.c: 43:     _delay((unsigned long)((100)*(6000000/4000.0)));
   573     07B8  30C3               	movlw	195
   574     07B9  00F4               	movwf	??_init+1
   575     07BA  30CD               	movlw	205
   576     07BB  00F3               	movwf	??_init
   577     07BC                     u67:
   578     07BC  0BF3               	decfsz	??_init,f
   579     07BD  2FBC               	goto	u67
   580     07BE  0BF4               	decfsz	??_init+1,f
   581     07BF  2FBC               	goto	u67
   582     07C0                     l613:
   583                           
   584                           ;lcd.c: 44:     lcd_Command(0x14);
   585     07C0  3014               	movlw	20
   586     07C1  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   587     07C6                     l615:
   588                           
   589                           ;lcd.c: 45:     _delay((unsigned long)((100)*(6000000/4000.0)));
   590     07C6  30C3               	movlw	195
   591     07C7  00F4               	movwf	??_init+1
   592     07C8  30CD               	movlw	205
   593     07C9  00F3               	movwf	??_init
   594     07CA                     u77:
   595     07CA  0BF3               	decfsz	??_init,f
   596     07CB  2FCA               	goto	u77
   597     07CC  0BF4               	decfsz	??_init+1,f
   598     07CD  2FCA               	goto	u77
   599     07CE                     l617:
   600                           
   601                           ;lcd.c: 46:     lcd_Command(0x0C);
   602     07CE  300C               	movlw	12
   603     07CF  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   604     07D4                     l619:
   605                           
   606                           ;lcd.c: 47:     _delay((unsigned long)((100)*(6000000/4000.0)));
   607     07D4  30C3               	movlw	195
   608     07D5  00F4               	movwf	??_init+1
   609     07D6  30CD               	movlw	205
   610     07D7  00F3               	movwf	??_init
   611     07D8                     u87:
   612     07D8  0BF3               	decfsz	??_init,f
   613     07D9  2FD8               	goto	u87
   614     07DA  0BF4               	decfsz	??_init+1,f
   615     07DB  2FD8               	goto	u87
   616     07DC                     l621:
   617                           
   618                           ;lcd.c: 48:     lcd_Command(0x01);
   619     07DC  3001               	movlw	1
   620     07DD  120A  118A  2749  120A  118A  	fcall	_lcd_Command
   621     07E2                     l623:
   622                           
   623                           ;lcd.c: 49:     _delay((unsigned long)((100)*(6000000/4000.0)));
   624     07E2  30C3               	movlw	195
   625     07E3  00F4               	movwf	??_init+1
   626     07E4  30CD               	movlw	205
   627     07E5  00F3               	movwf	??_init
   628     07E6                     u97:
   629     07E6  0BF3               	decfsz	??_init,f
   630     07E7  2FE6               	goto	u97
   631     07E8  0BF4               	decfsz	??_init+1,f
   632     07E9  2FE6               	goto	u97
   633     07EA                     l37:
   634     07EA  0008               	return
   635     07EB                     __end_of_init:
   636                           
   637                           	psect	text3
   638     0749                     __ptext3:	
   639 ;; *************** function _lcd_Command *****************
   640 ;; Defined at:
   641 ;;		line 61 in file "lcd.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;  i               1    wreg     unsigned char 
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  i               1    2[COMMON] unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, btemp+1
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         1       0       0       0       0
   657 ;;      Temps:          2       0       0       0       0
   658 ;;      Totals:         3       0       0       0       0
   659 ;;Total ram usage:        3 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;;		_init
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669     0749                     _lcd_Command:	
   670                           ;psect for function _lcd_Command
   671                           
   672                           
   673                           ;incstack = 0
   674                           ; Regs used in _lcd_Command: [wreg+status,2+status,0+btemp+1]
   675                           ;lcd_Command@i stored from wreg
   676     0749  00F2               	movwf	lcd_Command@i
   677     074A                     l587:
   678                           
   679                           ;lcd.c: 61: void lcd_Command(unsigned char i);lcd.c: 62: {;lcd.c: 63:     PORTC&=~0x08;
   680     074A  30F7               	movlw	247
   681     074B  00FF               	movwf	btemp+1
   682     074C  087F               	movf	btemp+1,w
   683     074D  1283               	bcf	3,5	;RP0=0, select bank0
   684     074E  1303               	bcf	3,6	;RP1=0, select bank0
   685     074F  0587               	andwf	7,f	;volatile
   686     0750                     l589:
   687                           
   688                           ;lcd.c: 64:     PORTD=i;
   689     0750  0872               	movf	lcd_Command@i,w
   690     0751  0088               	movwf	8	;volatile
   691     0752                     l591:
   692                           
   693                           ;lcd.c: 65:     PORTC|=0x01;
   694     0752  1407               	bsf	7,0	;volatile
   695     0753                     l593:
   696                           
   697                           ;lcd.c: 66:     PORTC&=~0x01;
   698     0753  30FE               	movlw	254
   699     0754  00FF               	movwf	btemp+1
   700     0755  087F               	movf	btemp+1,w
   701     0756  0587               	andwf	7,f	;volatile
   702                           
   703                           ;lcd.c: 67:     _delay((unsigned long)((100)*(6000000/4000.0)));
   704     0757  30C3               	movlw	195
   705     0758  00F1               	movwf	??_lcd_Command+1
   706     0759  30CD               	movlw	205
   707     075A  00F0               	movwf	??_lcd_Command
   708     075B                     u107:
   709     075B  0BF0               	decfsz	??_lcd_Command,f
   710     075C  2F5B               	goto	u107
   711     075D  0BF1               	decfsz	??_lcd_Command+1,f
   712     075E  2F5B               	goto	u107
   713     075F                     l43:
   714     075F  0008               	return
   715     0760                     __end_of_lcd_Command:
   716     007E                     btemp	set	126	;btemp
   717     007E                     wtemp0	set	126
   718                           
   719                           	psect	config
   720                           
   721                           ;Config register CONFIG @ 0x2007
   722                           ;	Oscillator Selection bits
   723                           ;	FOSC = EXTRC, RC oscillator
   724                           ;	Watchdog Timer Enable bit
   725                           ;	WDTE = OFF, WDT disabled
   726                           ;	Power-up Timer Enable bit
   727                           ;	PWRTE = OFF, PWRT disabled
   728                           ;	Brown-out Reset Enable bit
   729                           ;	BOREN = OFF, BOR disabled
   730                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   731                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   732                           ;	Data EEPROM Memory Code Protection bit
   733                           ;	CPD = OFF, Data EEPROM code protection off
   734                           ;	Flash Program Memory Write Enable bits
   735                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   736                           ;	In-Circuit Debugger Mode bit
   737                           ;	DEBUG = 0x1, unprogrammed default
   738                           ;	Flash Program Memory Code Protection bit
   739                           ;	CP = OFF, Code protection off
   740     2007                     	org	8199
   741     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_lcd_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                               _init
                        _lcd_Command
                           _lcd_Data
 ---------------------------------------------------------------------------------
 (1) _lcd_Data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      15
                                              3 COMMON     2     2      0
                        _lcd_Command
 ---------------------------------------------------------------------------------
 (1) _lcd_Command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _lcd_Command
   _lcd_Command
   _lcd_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 08 16:58:32 2024

                      _i 0076                        _m 0075                        _x 0077  
                      pc 0002                       l31 0780                       l40 0748  
                     l43 075F                       l37 07EA                       u10 0780  
                     u11 077F                       u27 0744                       u37 0792  
                     u47 07A0                       u57 07AE                       u67 07BC  
                     u77 07CA                       u87 07D8                       u97 07E6  
                     fsr 0004                      l601 0796                      l611 07B8  
                    l603 079C                      l621 07DC                      l613 07C0  
                    l605 07A4                      l623 07E2                      l615 07C6  
                    l607 07AA                      l631 073C                      l617 07CE  
                    l609 07B2                      l633 0740                      l625 0736  
                    l619 07D4                      l627 0739                      l643 076C  
                    l635 0760                      l629 073B                      l645 0776  
                    l637 076B                      l591 0752                      l647 077A  
                    l593 0753                      l587 074A                      l595 0784  
                    l589 0750                      l597 0788                      l599 078E  
                    u107 075B                      fsr0 0004                      indf 0000  
                   _main 0760                     _init 0784                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_init 0070  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _array 0020                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EB  
           __end_of_main 0784             __end_of_init 07EB                   ??_main 0075  
                 ??_init 0073         __end_of_lcd_Data 0749  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0710               __pmaintext 0760  
              ?_lcd_Data 0070                  __ptext1 0735                  __ptext2 0784  
                __ptext3 0749               ??_lcd_Data 0070     end_of_initialization 07FC  
          ??_lcd_Command 0070      start_initialization 07EB      __end_of_lcd_Command 0760  
             init_fetch0 0722              __pdataBANK0 0020              __pbssCOMMON 0075  
              ___latbits 0002              _lcd_Command 0749                lcd_Data@i 0072  
               _lcd_Data 0735                 init_ram0 0726             lcd_Command@i 0072  
           ?_lcd_Command 0070  
