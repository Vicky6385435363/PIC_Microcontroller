

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 15 22:04:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0008                     _PORTD	set	8
   173     0007                     _PORTC	set	7
   174     0088                     _TRISD	set	136
   175     0087                     _TRISC	set	135
   176                           
   177                           	psect	cinit
   178     07F3                     start_initialization:	
   179                           ; #config settings
   180                           
   181     07F3                     __initialization:
   182                           
   183                           ; Clear objects allocated to BANK0
   184     07F3  1383               	bcf	3,7	;select IRP bank0
   185     07F4  3020               	movlw	low __pbssBANK0
   186     07F5  0084               	movwf	4
   187     07F6  3034               	movlw	low (__pbssBANK0+20)
   188     07F7  120A  118A  2653  120A  118A  	fcall	clear_ram0
   189     07FC                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192     07FC                     __end_of__initialization:
   193     07FC  0183               	clrf	3
   194     07FD  120A  118A  2EDF   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssBANK0
   197     0020                     __pbssBANK0:
   198     0020                     _k:
   199     0020                     	ds	6
   200     0026                     _sub:
   201     0026                     	ds	2
   202     0028                     _m:
   203     0028                     	ds	2
   204     002A                     _n:
   205     002A                     	ds	2
   206     002C                     _num2:
   207     002C                     	ds	2
   208     002E                     _num1:
   209     002E                     	ds	2
   210     0030                     _equal:
   211     0030                     	ds	1
   212     0031                     _minus:
   213     0031                     	ds	1
   214     0032                     _plus:
   215     0032                     	ds	1
   216     0033                     _j:
   217     0033                     	ds	1
   218                           
   219                           	psect	clrtext
   220     0653                     clear_ram0:	
   221                           ;	Called with FSR containing the base address, and
   222                           ;	W with the last address+1
   223                           
   224     0653  0064               	clrwdt	;clear the watchdog before getting into this loop
   225     0654                     clrloop0:
   226     0654  0180               	clrf	0	;clear RAM location pointed to by FSR
   227     0655  0A84               	incf	4,f	;increment pointer
   228     0656  0604               	xorwf	4,w	;XOR with final address
   229     0657  1903               	btfsc	3,2	;have we reached the end yet?
   230     0658  3400               	retlw	0	;all done for this memory range, return
   231     0659  0604               	xorwf	4,w	;XOR again to restore value
   232     065A  2E54               	goto	clrloop0	;do the next byte
   233                           
   234                           	psect	cstackCOMMON
   235     0070                     __pcstackCOMMON:
   236     0070                     ?_initiate:
   237     0070                     ?_lcd_command:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ??_lcd_command:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_lcd_data:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ??_lcd_data:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?_main:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     ?___lwdiv:	
   253                           ; 1 bytes @ 0x0
   254                           
   255     0070                     ___lwdiv@divisor:	
   256                           ; 2 bytes @ 0x0
   257                           
   258                           
   259                           ; 2 bytes @ 0x0
   260     0070                     	ds	2
   261     0072                     lcd_data@i:
   262     0072                     lcd_command@i:	
   263                           ; 1 bytes @ 0x2
   264                           
   265     0072                     ___lwdiv@dividend:	
   266                           ; 1 bytes @ 0x2
   267                           
   268                           
   269                           ; 2 bytes @ 0x2
   270     0072                     	ds	1
   271     0073                     ??_initiate:
   272                           
   273                           ; 1 bytes @ 0x3
   274     0073                     	ds	1
   275     0074                     ??___lwdiv:
   276     0074                     ___lwdiv@quotient:	
   277                           ; 1 bytes @ 0x4
   278                           
   279                           
   280                           ; 2 bytes @ 0x4
   281     0074                     	ds	2
   282     0076                     ___lwdiv@counter:
   283                           
   284                           ; 1 bytes @ 0x6
   285     0076                     	ds	1
   286     0077                     ?___bmul:
   287     0077                     ___bmul@multiplicand:	
   288                           ; 1 bytes @ 0x7
   289                           
   290                           
   291                           ; 1 bytes @ 0x7
   292     0077                     	ds	1
   293     0078                     ??___bmul:
   294     0078                     ___bmul@product:	
   295                           ; 1 bytes @ 0x8
   296                           
   297                           
   298                           ; 1 bytes @ 0x8
   299     0078                     	ds	1
   300     0079                     ___bmul@multiplier:
   301                           
   302                           ; 1 bytes @ 0x9
   303     0079                     	ds	1
   304     007A                     ?_lcd_out:
   305     007A                     lcd_out@i:	
   306                           ; 1 bytes @ 0xA
   307                           
   308                           
   309                           ; 2 bytes @ 0xA
   310     007A                     	ds	2
   311     007C                     ??_lcd_out:
   312     007C                     lcd_out@s:	
   313                           ; 1 bytes @ 0xC
   314                           
   315                           
   316                           ; 1 bytes @ 0xC
   317     007C                     	ds	1
   318     007D                     lcd_out@j:
   319                           
   320                           ; 1 bytes @ 0xD
   321     007D                     	ds	1
   322     007E                     ??_main:
   323                           
   324                           	psect	maintext
   325     06DF                     __pmaintext:	
   326                           ; 1 bytes @ 0xE
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 21 in file "4.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         0       0       0       0       0
   347 ;;      Locals:         0       0       0       0       0
   348 ;;      Temps:          0       0       0       0       0
   349 ;;      Totals:         0       0       0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels required when called: 2
   352 ;; This function calls:
   353 ;;		_initiate
   354 ;;		_lcd_command
   355 ;;		_lcd_data
   356 ;;		_lcd_out
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362     06DF                     _main:	
   363                           ;psect for function _main
   364                           
   365     06DF                     l868:	
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   368                           
   369     06DF  120A  118A  2731  120A  118A  	fcall	_initiate
   370     06E4                     l870:
   371     06E4  3021               	movlw	33
   372     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   373     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   374     06E7  00AE               	movwf	_num1
   375     06E8  3002               	movlw	2
   376     06E9  00AF               	movwf	_num1+1
   377     06EA                     l872:
   378     06EA  3064               	movlw	100
   379     06EB  00AC               	movwf	_num2
   380     06EC  3000               	movlw	0
   381     06ED  00AD               	movwf	_num2+1
   382     06EE                     l874:
   383     06EE  302B               	movlw	43
   384     06EF  00B2               	movwf	_plus
   385     06F0                     l876:
   386     06F0  303D               	movlw	61
   387     06F1  00B0               	movwf	_equal
   388     06F2                     l878:
   389     06F2  302D               	movlw	45
   390     06F3  00B1               	movwf	_minus
   391     06F4                     l880:
   392     06F4  3080               	movlw	128
   393     06F5  120A  118A  2684  120A  118A  	fcall	_lcd_command
   394     06FA                     l882:
   395     06FA  3021               	movlw	33
   396     06FB  00FA               	movwf	lcd_out@i
   397     06FC  3002               	movlw	2
   398     06FD  00FB               	movwf	lcd_out@i+1
   399     06FE  120A  118A  278A  120A  118A  	fcall	_lcd_out
   400     0703                     l884:
   401     0703  302D               	movlw	45
   402     0704  120A  118A  265B  120A  118A  	fcall	_lcd_data
   403     0709                     l886:
   404     0709  3064               	movlw	100
   405     070A  00FA               	movwf	lcd_out@i
   406     070B  3000               	movlw	0
   407     070C  00FB               	movwf	lcd_out@i+1
   408     070D  120A  118A  278A  120A  118A  	fcall	_lcd_out
   409     0712                     l888:
   410     0712  303D               	movlw	61
   411     0713  120A  118A  265B  120A  118A  	fcall	_lcd_data
   412     0718                     l890:
   413     0718  30BD               	movlw	189
   414     0719  1283               	bcf	3,5	;RP0=0, select bank0
   415     071A  1303               	bcf	3,6	;RP1=0, select bank0
   416     071B  00A6               	movwf	_sub
   417     071C  3001               	movlw	1
   418     071D  00A7               	movwf	_sub+1
   419     071E                     l898:
   420     071E  302B               	movlw	43
   421     071F  120A  118A  265B  120A  118A  	fcall	_lcd_data
   422     0724                     l900:
   423     0724  30BD               	movlw	189
   424     0725  00FA               	movwf	lcd_out@i
   425     0726  3001               	movlw	1
   426     0727  00FB               	movwf	lcd_out@i+1
   427     0728  120A  118A  278A  120A  118A  	fcall	_lcd_out
   428     072D                     l45:
   429     072D                     l46:
   430     072D  2F2D               	goto	l45
   431     072E  120A  118A  2800   	ljmp	start
   432     0731                     __end_of_main:
   433                           
   434                           	psect	text1
   435     078A                     __ptext1:	
   436 ;; *************** function _lcd_out *****************
   437 ;; Defined at:
   438 ;;		line 63 in file "4.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  i               2   10[COMMON] unsigned int 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  j               1   13[COMMON] unsigned char 
   443 ;;  s               1   12[COMMON] unsigned char 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         2       0       0       0       0
   454 ;;      Locals:         2       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0
   456 ;;      Totals:         4       0       0       0       0
   457 ;;Total ram usage:        4 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 1
   460 ;; This function calls:
   461 ;;		___bmul
   462 ;;		___lwdiv
   463 ;;		_lcd_data
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469     078A                     _lcd_out:	
   470                           ;psect for function _lcd_out
   471                           
   472     078A                     l842:	
   473                           ;incstack = 0
   474                           ; Regs used in _lcd_out: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   475                           
   476     078A  01FD               	clrf	lcd_out@j
   477     078B  0AFD               	incf	lcd_out@j,f
   478     078C                     l844:
   479     078C  087B               	movf	lcd_out@i+1,w
   480     078D  1283               	bcf	3,5	;RP0=0, select bank0
   481     078E  1303               	bcf	3,6	;RP1=0, select bank0
   482     078F  00A9               	movwf	_m+1
   483     0790  087A               	movf	lcd_out@i,w
   484     0791  00A8               	movwf	_m
   485     0792  2FC9               	goto	l854
   486     0793                     l846:
   487     0793  30F6               	movlw	246
   488     0794  00F7               	movwf	___bmul@multiplicand
   489     0795  0829               	movf	_m+1,w
   490     0796  00F3               	movwf	___lwdiv@dividend+1
   491     0797  0828               	movf	_m,w
   492     0798  00F2               	movwf	___lwdiv@dividend
   493     0799  300A               	movlw	10
   494     079A  00F0               	movwf	___lwdiv@divisor
   495     079B  3000               	movlw	0
   496     079C  00F1               	movwf	___lwdiv@divisor+1
   497     079D  120A  118A  269B  120A  118A  	fcall	___lwdiv
   498     07A2  0870               	movf	?___lwdiv,w
   499     07A3  120A  118A  266F  120A  118A  	fcall	___bmul
   500     07A8  1283               	bcf	3,5	;RP0=0, select bank0
   501     07A9  1303               	bcf	3,6	;RP1=0, select bank0
   502     07AA  0728               	addwf	_m,w
   503     07AB  00FC               	movwf	lcd_out@s
   504     07AC                     l848:
   505     07AC  087D               	movf	lcd_out@j,w
   506     07AD  3E20               	addlw	(low (_k| 0))& (0+255)
   507     07AE  0084               	movwf	4
   508     07AF  087C               	movf	lcd_out@s,w
   509     07B0  1383               	bcf	3,7	;select IRP bank0
   510     07B1  0080               	movwf	0
   511     07B2                     l850:
   512     07B2  3001               	movlw	1
   513     07B3  00FF               	movwf	btemp+1
   514     07B4  087F               	movf	btemp+1,w
   515     07B5  07FD               	addwf	lcd_out@j,f
   516     07B6                     l852:
   517     07B6  300A               	movlw	10
   518     07B7  00F0               	movwf	___lwdiv@divisor
   519     07B8  3000               	movlw	0
   520     07B9  00F1               	movwf	___lwdiv@divisor+1
   521     07BA  0829               	movf	_m+1,w
   522     07BB  00F3               	movwf	___lwdiv@dividend+1
   523     07BC  0828               	movf	_m,w
   524     07BD  00F2               	movwf	___lwdiv@dividend
   525     07BE  120A  118A  269B  120A  118A  	fcall	___lwdiv
   526     07C3  0871               	movf	?___lwdiv+1,w
   527     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   528     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   529     07C6  00A9               	movwf	_m+1
   530     07C7  0870               	movf	?___lwdiv,w
   531     07C8  00A8               	movwf	_m
   532     07C9                     l854:
   533     07C9  0828               	movf	_m,w
   534     07CA  0429               	iorwf	_m+1,w
   535     07CB  1D03               	btfss	3,2
   536     07CC  2FCE               	goto	u211
   537     07CD  2FCF               	goto	u210
   538     07CE                     u211:
   539     07CE  2F93               	goto	l846
   540     07CF                     u210:
   541     07CF                     l856:
   542     07CF  087D               	movf	lcd_out@j,w
   543     07D0  3E20               	addlw	(low (_k| 0))& (0+255)
   544     07D1  0084               	movwf	4
   545     07D2  1383               	bcf	3,7	;select IRP bank0
   546     07D3  0180               	clrf	0
   547     07D4                     l858:
   548     07D4  087D               	movf	lcd_out@j,w
   549     07D5  3EFF               	addlw	255
   550     07D6  00FD               	movwf	lcd_out@j
   551     07D7  2FED               	goto	l866
   552     07D8                     l860:
   553     07D8  087D               	movf	lcd_out@j,w
   554     07D9  3E20               	addlw	(low (_k| 0))& (0+255)
   555     07DA  0084               	movwf	4
   556     07DB  1383               	bcf	3,7	;select IRP bank0
   557     07DC  0800               	movf	0,w
   558     07DD  3E30               	addlw	48
   559     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   560     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   561     07E0  00AA               	movwf	_n
   562     07E1  3000               	movlw	0
   563     07E2  1803               	skipnc
   564     07E3  3001               	movlw	1
   565     07E4  00AB               	movwf	_n+1
   566     07E5                     l862:
   567     07E5  082A               	movf	_n,w
   568     07E6  120A  118A  265B  120A  118A  	fcall	_lcd_data
   569     07EB                     l864:
   570     07EB  3001               	movlw	1
   571     07EC  02FD               	subwf	lcd_out@j,f
   572     07ED                     l866:
   573     07ED  087D               	movf	lcd_out@j,w
   574     07EE  1D03               	btfss	3,2
   575     07EF  2FF1               	goto	u221
   576     07F0  2FF2               	goto	u220
   577     07F1                     u221:
   578     07F1  2FD8               	goto	l860
   579     07F2                     u220:
   580     07F2                     l60:
   581     07F2  0008               	return
   582     07F3                     __end_of_lcd_out:
   583                           
   584                           	psect	text2
   585     065B                     __ptext2:	
   586 ;; *************** function _lcd_data *****************
   587 ;; Defined at:
   588 ;;		line 80 in file "4.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  i               1    wreg     unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  i               1    2[COMMON] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0, btemp+1
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         1       0       0       0       0
   604 ;;      Temps:          2       0       0       0       0
   605 ;;      Totals:         3       0       0       0       0
   606 ;;Total ram usage:        3 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;;		_lcd_out
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616     065B                     _lcd_data:	
   617                           ;psect for function _lcd_data
   618                           
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   622                           ;lcd_data@i stored from wreg
   623     065B  00F2               	movwf	lcd_data@i
   624     065C                     l764:
   625     065C  1283               	bcf	3,5	;RP0=0, select bank0
   626     065D  1303               	bcf	3,6	;RP1=0, select bank0
   627     065E  1587               	bsf	7,3	;volatile
   628     065F                     l766:
   629     065F  0872               	movf	lcd_data@i,w
   630     0660  0088               	movwf	8	;volatile
   631     0661                     l768:
   632     0661  1407               	bsf	7,0	;volatile
   633     0662                     l770:
   634     0662  30FE               	movlw	254
   635     0663  00FF               	movwf	btemp+1
   636     0664  087F               	movf	btemp+1,w
   637     0665  0587               	andwf	7,f	;volatile
   638     0666                     l772:
   639     0666  30C3               	movlw	195
   640     0667  00F1               	movwf	??_lcd_data+1
   641     0668  30CD               	movlw	205
   642     0669  00F0               	movwf	??_lcd_data
   643     066A                     u237:
   644     066A  0BF0               	decfsz	??_lcd_data,f
   645     066B  2E6A               	goto	u237
   646     066C  0BF1               	decfsz	??_lcd_data+1,f
   647     066D  2E6A               	goto	u237
   648     066E                     l63:
   649     066E  0008               	return
   650     066F                     __end_of_lcd_data:
   651                           
   652                           	psect	text3
   653     069B                     __ptext3:	
   654 ;; *************** function ___lwdiv *****************
   655 ;; Defined at:
   656 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  divisor         2    0[COMMON] unsigned int 
   659 ;;  dividend        2    2[COMMON] unsigned int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  quotient        2    4[COMMON] unsigned int 
   662 ;;  counter         1    6[COMMON] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  2    0[COMMON] unsigned int 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, btemp+1
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         4       0       0       0       0
   673 ;;      Locals:         3       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0
   675 ;;      Totals:         7       0       0       0       0
   676 ;;Total ram usage:        7 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_lcd_out
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685     069B                     ___lwdiv:	
   686                           ;psect for function ___lwdiv
   687                           
   688     069B                     l790:	
   689                           ;incstack = 0
   690                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
   691                           
   692     069B  01F4               	clrf	___lwdiv@quotient
   693     069C  01F5               	clrf	___lwdiv@quotient+1
   694     069D                     l792:
   695     069D  0870               	movf	___lwdiv@divisor,w
   696     069E  0471               	iorwf	___lwdiv@divisor+1,w
   697     069F  1903               	btfsc	3,2
   698     06A0  2EA2               	goto	u141
   699     06A1  2EA3               	goto	u140
   700     06A2                     u141:
   701     06A2  2EDA               	goto	l812
   702     06A3                     u140:
   703     06A3                     l794:
   704     06A3  01F6               	clrf	___lwdiv@counter
   705     06A4  0AF6               	incf	___lwdiv@counter,f
   706     06A5  2EB1               	goto	l800
   707     06A6                     l796:
   708     06A6  3001               	movlw	1
   709     06A7                     u155:
   710     06A7  1003               	clrc
   711     06A8  0DF0               	rlf	___lwdiv@divisor,f
   712     06A9  0DF1               	rlf	___lwdiv@divisor+1,f
   713     06AA  3EFF               	addlw	-1
   714     06AB  1D03               	skipz
   715     06AC  2EA7               	goto	u155
   716     06AD                     l798:
   717     06AD  3001               	movlw	1
   718     06AE  00FF               	movwf	btemp+1
   719     06AF  087F               	movf	btemp+1,w
   720     06B0  07F6               	addwf	___lwdiv@counter,f
   721     06B1                     l800:
   722     06B1  1FF1               	btfss	___lwdiv@divisor+1,7
   723     06B2  2EB4               	goto	u161
   724     06B3  2EB5               	goto	u160
   725     06B4                     u161:
   726     06B4  2EA6               	goto	l796
   727     06B5                     u160:
   728     06B5                     l802:
   729     06B5  3001               	movlw	1
   730     06B6                     u175:
   731     06B6  1003               	clrc
   732     06B7  0DF4               	rlf	___lwdiv@quotient,f
   733     06B8  0DF5               	rlf	___lwdiv@quotient+1,f
   734     06B9  3EFF               	addlw	-1
   735     06BA  1D03               	skipz
   736     06BB  2EB6               	goto	u175
   737     06BC  0871               	movf	___lwdiv@divisor+1,w
   738     06BD  0273               	subwf	___lwdiv@dividend+1,w
   739     06BE  1D03               	skipz
   740     06BF  2EC2               	goto	u185
   741     06C0  0870               	movf	___lwdiv@divisor,w
   742     06C1  0272               	subwf	___lwdiv@dividend,w
   743     06C2                     u185:
   744     06C2  1C03               	skipc
   745     06C3  2EC5               	goto	u181
   746     06C4  2EC6               	goto	u180
   747     06C5                     u181:
   748     06C5  2ECD               	goto	l808
   749     06C6                     u180:
   750     06C6                     l804:
   751     06C6  0870               	movf	___lwdiv@divisor,w
   752     06C7  02F2               	subwf	___lwdiv@dividend,f
   753     06C8  0871               	movf	___lwdiv@divisor+1,w
   754     06C9  1C03               	skipc
   755     06CA  03F3               	decf	___lwdiv@dividend+1,f
   756     06CB  02F3               	subwf	___lwdiv@dividend+1,f
   757     06CC                     l806:
   758     06CC  1474               	bsf	___lwdiv@quotient,0
   759     06CD                     l808:
   760     06CD  3001               	movlw	1
   761     06CE                     u195:
   762     06CE  1003               	clrc
   763     06CF  0CF1               	rrf	___lwdiv@divisor+1,f
   764     06D0  0CF0               	rrf	___lwdiv@divisor,f
   765     06D1  3EFF               	addlw	-1
   766     06D2  1D03               	skipz
   767     06D3  2ECE               	goto	u195
   768     06D4                     l810:
   769     06D4  3001               	movlw	1
   770     06D5  02F6               	subwf	___lwdiv@counter,f
   771     06D6  1D03               	btfss	3,2
   772     06D7  2ED9               	goto	u201
   773     06D8  2EDA               	goto	u200
   774     06D9                     u201:
   775     06D9  2EB5               	goto	l802
   776     06DA                     u200:
   777     06DA                     l812:
   778     06DA  0875               	movf	___lwdiv@quotient+1,w
   779     06DB  00F1               	movwf	?___lwdiv+1
   780     06DC  0874               	movf	___lwdiv@quotient,w
   781     06DD  00F0               	movwf	?___lwdiv
   782     06DE                     l432:
   783     06DE  0008               	return
   784     06DF                     __end_of___lwdiv:
   785                           
   786                           	psect	text4
   787     066F                     __ptext4:	
   788 ;; *************** function ___bmul *****************
   789 ;; Defined at:
   790 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  multiplier      1    wreg     unsigned char 
   793 ;;  multiplicand    1    7[COMMON] unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  multiplier      1    9[COMMON] unsigned char 
   796 ;;  product         1    8[COMMON] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      unsigned char 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0, btemp+1
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         1       0       0       0       0
   807 ;;      Locals:         2       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         3       0       0       0       0
   810 ;;Total ram usage:        3 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_lcd_out
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819     066F                     ___bmul:	
   820                           ;psect for function ___bmul
   821                           
   822                           
   823                           ;incstack = 0
   824                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
   825                           ;___bmul@multiplier stored from wreg
   826     066F  00F9               	movwf	___bmul@multiplier
   827     0670                     l774:
   828     0670  01F8               	clrf	___bmul@product
   829     0671                     l776:
   830     0671  1C79               	btfss	___bmul@multiplier,0
   831     0672  2E74               	goto	u121
   832     0673  2E75               	goto	u120
   833     0674                     u121:
   834     0674  2E79               	goto	l780
   835     0675                     u120:
   836     0675                     l778:
   837     0675  0877               	movf	___bmul@multiplicand,w
   838     0676  00FF               	movwf	btemp+1
   839     0677  087F               	movf	btemp+1,w
   840     0678  07F8               	addwf	___bmul@product,f
   841     0679                     l780:
   842     0679  1003               	clrc
   843     067A  0DF7               	rlf	___bmul@multiplicand,f
   844     067B                     l782:
   845     067B  1003               	clrc
   846     067C  0CF9               	rrf	___bmul@multiplier,f
   847     067D                     l784:
   848     067D  0879               	movf	___bmul@multiplier,w
   849     067E  1D03               	btfss	3,2
   850     067F  2E81               	goto	u131
   851     0680  2E82               	goto	u130
   852     0681                     u131:
   853     0681  2E71               	goto	l776
   854     0682                     u130:
   855     0682                     l786:
   856     0682  0878               	movf	___bmul@product,w
   857     0683                     l178:
   858     0683  0008               	return
   859     0684                     __end_of___bmul:
   860                           
   861                           	psect	text5
   862     0731                     __ptext5:	
   863 ;; *************** function _initiate *****************
   864 ;; Defined at:
   865 ;;		line 46 in file "4.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          2       0       0       0       0
   882 ;;      Totals:         2       0       0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 1
   886 ;; This function calls:
   887 ;;		_lcd_command
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893     0731                     _initiate:	
   894                           ;psect for function _initiate
   895                           
   896     0731                     l816:	
   897                           ;incstack = 0
   898                           ; Regs used in _initiate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   899                           
   900     0731  1683               	bsf	3,5	;RP0=1, select bank1
   901     0732  1303               	bcf	3,6	;RP1=0, select bank1
   902     0733  0187               	clrf	7	;volatile
   903     0734  0188               	clrf	8	;volatile
   904     0735                     l818:
   905     0735  3033               	movlw	51
   906     0736  120A  118A  2684  120A  118A  	fcall	_lcd_command
   907     073B                     l820:
   908     073B  30C3               	movlw	195
   909     073C  00F4               	movwf	??_initiate+1
   910     073D  30CD               	movlw	205
   911     073E  00F3               	movwf	??_initiate
   912     073F                     u247:
   913     073F  0BF3               	decfsz	??_initiate,f
   914     0740  2F3F               	goto	u247
   915     0741  0BF4               	decfsz	??_initiate+1,f
   916     0742  2F3F               	goto	u247
   917     0743                     l822:
   918     0743  3034               	movlw	52
   919     0744  120A  118A  2684  120A  118A  	fcall	_lcd_command
   920     0749                     l824:
   921     0749  30C3               	movlw	195
   922     074A  00F4               	movwf	??_initiate+1
   923     074B  30CD               	movlw	205
   924     074C  00F3               	movwf	??_initiate
   925     074D                     u257:
   926     074D  0BF3               	decfsz	??_initiate,f
   927     074E  2F4D               	goto	u257
   928     074F  0BF4               	decfsz	??_initiate+1,f
   929     0750  2F4D               	goto	u257
   930     0751                     l826:
   931     0751  3035               	movlw	53
   932     0752  120A  118A  2684  120A  118A  	fcall	_lcd_command
   933     0757                     l828:
   934     0757  30C3               	movlw	195
   935     0758  00F4               	movwf	??_initiate+1
   936     0759  30CD               	movlw	205
   937     075A  00F3               	movwf	??_initiate
   938     075B                     u267:
   939     075B  0BF3               	decfsz	??_initiate,f
   940     075C  2F5B               	goto	u267
   941     075D  0BF4               	decfsz	??_initiate+1,f
   942     075E  2F5B               	goto	u267
   943     075F                     l830:
   944     075F  3038               	movlw	56
   945     0760  120A  118A  2684  120A  118A  	fcall	_lcd_command
   946     0765                     l832:
   947     0765  30C3               	movlw	195
   948     0766  00F4               	movwf	??_initiate+1
   949     0767  30CD               	movlw	205
   950     0768  00F3               	movwf	??_initiate
   951     0769                     u277:
   952     0769  0BF3               	decfsz	??_initiate,f
   953     076A  2F69               	goto	u277
   954     076B  0BF4               	decfsz	??_initiate+1,f
   955     076C  2F69               	goto	u277
   956     076D                     l834:
   957     076D  300C               	movlw	12
   958     076E  120A  118A  2684  120A  118A  	fcall	_lcd_command
   959     0773                     l836:
   960     0773  30C3               	movlw	195
   961     0774  00F4               	movwf	??_initiate+1
   962     0775  30CD               	movlw	205
   963     0776  00F3               	movwf	??_initiate
   964     0777                     u287:
   965     0777  0BF3               	decfsz	??_initiate,f
   966     0778  2F77               	goto	u287
   967     0779  0BF4               	decfsz	??_initiate+1,f
   968     077A  2F77               	goto	u287
   969     077B                     l838:
   970     077B  3001               	movlw	1
   971     077C  120A  118A  2684  120A  118A  	fcall	_lcd_command
   972     0781                     l840:
   973     0781  30C3               	movlw	195
   974     0782  00F4               	movwf	??_initiate+1
   975     0783  30CD               	movlw	205
   976     0784  00F3               	movwf	??_initiate
   977     0785                     u297:
   978     0785  0BF3               	decfsz	??_initiate,f
   979     0786  2F85               	goto	u297
   980     0787  0BF4               	decfsz	??_initiate+1,f
   981     0788  2F85               	goto	u297
   982     0789                     l51:
   983     0789  0008               	return
   984     078A                     __end_of_initiate:
   985                           
   986                           	psect	text6
   987     0684                     __ptext6:	
   988 ;; *************** function _lcd_command *****************
   989 ;; Defined at:
   990 ;;		line 88 in file "4.c"
   991 ;; Parameters:    Size  Location     Type
   992 ;;  i               1    wreg     unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  i               1    2[COMMON] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      void 
   997 ;; Registers used:
   998 ;;		wreg, status,2, status,0, btemp+1
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1004 ;;      Params:         0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0
  1006 ;;      Temps:          2       0       0       0       0
  1007 ;;      Totals:         3       0       0       0       0
  1008 ;;Total ram usage:        3 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;;		_initiate
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018     0684                     _lcd_command:	
  1019                           ;psect for function _lcd_command
  1020                           
  1021                           
  1022                           ;incstack = 0
  1023                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1]
  1024                           ;lcd_command@i stored from wreg
  1025     0684  00F2               	movwf	lcd_command@i
  1026     0685                     l756:
  1027     0685  30F7               	movlw	247
  1028     0686  00FF               	movwf	btemp+1
  1029     0687  087F               	movf	btemp+1,w
  1030     0688  1283               	bcf	3,5	;RP0=0, select bank0
  1031     0689  1303               	bcf	3,6	;RP1=0, select bank0
  1032     068A  0587               	andwf	7,f	;volatile
  1033     068B                     l758:
  1034     068B  0872               	movf	lcd_command@i,w
  1035     068C  0088               	movwf	8	;volatile
  1036     068D                     l760:
  1037     068D  1407               	bsf	7,0	;volatile
  1038     068E                     l762:
  1039     068E  30FE               	movlw	254
  1040     068F  00FF               	movwf	btemp+1
  1041     0690  087F               	movf	btemp+1,w
  1042     0691  0587               	andwf	7,f	;volatile
  1043     0692  30C3               	movlw	195
  1044     0693  00F1               	movwf	??_lcd_command+1
  1045     0694  30CD               	movlw	205
  1046     0695  00F0               	movwf	??_lcd_command
  1047     0696                     u307:
  1048     0696  0BF0               	decfsz	??_lcd_command,f
  1049     0697  2E96               	goto	u307
  1050     0698  0BF1               	decfsz	??_lcd_command+1,f
  1051     0699  2E96               	goto	u307
  1052     069A                     l66:
  1053     069A  0008               	return
  1054     069B                     __end_of_lcd_command:
  1055     007E                     btemp	set	126	;btemp
  1056     007E                     wtemp0	set	126
  1057                           
  1058                           	psect	config
  1059                           
  1060                           ;Config register CONFIG @ 0x2007
  1061                           ;	Oscillator Selection bits
  1062                           ;	FOSC = EXTRC, RC oscillator
  1063                           ;	Watchdog Timer Enable bit
  1064                           ;	WDTE = OFF, WDT disabled
  1065                           ;	Power-up Timer Enable bit
  1066                           ;	PWRTE = OFF, PWRT disabled
  1067                           ;	Brown-out Reset Enable bit
  1068                           ;	BOREN = OFF, BOR disabled
  1069                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1070                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1071                           ;	Data EEPROM Memory Code Protection bit
  1072                           ;	CPD = OFF, Data EEPROM code protection off
  1073                           ;	Flash Program Memory Write Enable bits
  1074                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1075                           ;	In-Circuit Debugger Mode bit
  1076                           ;	DEBUG = 0x1, unprogrammed default
  1077                           ;	Flash Program Memory Code Protection bit
  1078                           ;	CP = OFF, Code protection off
  1079     2007                     	org	8199
  1080     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd_out
    _lcd_out->___bmul
    ___bmul->___lwdiv
    _initiate->_lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1109
                           _initiate
                        _lcd_command
                           _lcd_data
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              4     2      2    1043
                                             10 COMMON     4     2      2
                             ___bmul
                            ___lwdiv
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              7 COMMON     3     2      1
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _initiate                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
     _lcd_command
   _lcd_command
   _lcd_data
   _lcd_out
     ___bmul
       ___lwdiv (ARG)
     ___lwdiv
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      22       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      22      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 15 22:04:05 2024

                      _j 0033                        _k 0020                        _m 0028  
                      _n 002A           ___bmul@product 0078                       l51 0789  
                     l60 07F2                       l45 072D                       l46 072D  
                     l63 066E                       l66 069A                       fsr 0004  
                    l432 06DE                      l178 0683                      l800 06B1  
                    l810 06D4                      l802 06B5                      l820 073B  
                    l804 06C6                      l812 06DA                      l900 0724  
                    l830 075F                      l822 0743                      l806 06CC  
                    l760 068D                      l840 0781                      l832 0765  
                    l824 0749                      l816 0731                      l808 06CD  
                    l762 068E                      l834 076D                      l826 0751  
                    l818 0735                      l770 0662                      l850 07B2  
                    l842 078A                      l756 0685                      l836 0773  
                    l828 0757                      l780 0679                      l772 0666  
                    l764 065C                      l860 07D8                      l852 07B6  
                    l844 078C                      l758 068B                      l838 077B  
                    l782 067B                      l774 0670                      l790 069B  
                    l766 065F                      l862 07E5                      l846 0793  
                    l854 07C9                      l870 06E4                      l784 067D  
                    l776 0671                      l792 069D                      l768 0661  
                    l864 07EB                      l856 07CF                      l848 07AC  
                    l880 06F4                      l872 06EA                      l786 0682  
                    l778 0675                      l794 06A3                      l866 07ED  
                    l858 07D4                      l890 0718                      l882 06FA  
                    l874 06EE                      l796 06A6                      l884 0703  
                    l876 06F0                      l868 06DF                      l798 06AD  
                    l886 0709                      l878 06F2                      l888 0712  
                    l898 071E                      u120 0675                      u200 06DA  
                    u121 0674                      u201 06D9                      u130 0682  
                    u210 07CF                      u131 0681                      u211 07CE  
                    u140 06A3                      u220 07F2                      u141 06A2  
                    u221 07F1                      u160 06B5                      u161 06B4  
                    u307 0696                      u155 06A7                      u180 06C6  
                    u181 06C5                      u237 066A                      u247 073F  
                    u175 06B6                      u257 074D                      u185 06C2  
                    u267 075B                      u195 06CE                      u277 0769  
                    u287 0777                      u297 0785                      _sub 0026  
                    fsr0 0004                      indf 0000             lcd_command@i 0072  
                   _main 06DF                     _num1 002E                     _num2 002C  
                   _plus 0032                     btemp 007E                     start 0000  
      ___bmul@multiplier 0079                    ?_main 0070          __end_of___lwdiv 06DF  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088          __end_of_lcd_out 07F3                    _equal 0030  
                  _minus 0031                    status 0003                    wtemp0 007E  
        __initialization 07F3             __end_of_main 0731                   ??_main 007E  
       __end_of_lcd_data 066F                   ___bmul 066F                ??___lwdiv 0074  
       __end_of_initiate 078A                ??_lcd_out 007C  __end_of__initialization 07FC  
    ___bmul@multiplicand 0077           __pcstackCOMMON 0070               __pbssBANK0 0020  
             __pmaintext 06DF                  ?___bmul 0077                ?_lcd_data 0070  
              ?_initiate 0070                  ___lwdiv 069B                  __ptext1 078A  
                __ptext2 065B                  __ptext3 069B                  __ptext4 066F  
                __ptext5 0731                  __ptext6 0684                  _lcd_out 078A  
             ??_lcd_data 0070                  clrloop0 0654     end_of_initialization 07FC  
             ??_initiate 0073            ??_lcd_command 0070           __end_of___bmul 0684  
    start_initialization 07F3                 ??___bmul 0078      __end_of_lcd_command 069B  
              ___latbits 0002         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?_lcd_out 007A         ___lwdiv@quotient 0074                clear_ram0 0653  
            _lcd_command 0684                lcd_data@i 0072          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076                 _lcd_data 065B                 _initiate 0731  
               lcd_out@i 007A                 lcd_out@j 007D                 lcd_out@s 007C  
           ?_lcd_command 0070  
