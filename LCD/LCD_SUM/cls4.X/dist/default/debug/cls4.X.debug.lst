

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 15 20:09:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 12/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0008                     _PORTD	set	8
   175     0007                     _PORTC	set	7
   176     0088                     _TRISD	set	136
   177     0087                     _TRISC	set	135
   178                           
   179                           	psect	cinit
   180     07F2                     start_initialization:	
   181                           ; #config settings
   182                           
   183     07F2                     __initialization:
   184                           
   185                           ; Clear objects allocated to COMMON
   186     07F2  01FD               	clrf	__pbssCOMMON& (0+127)
   187                           
   188                           ; Clear objects allocated to BANK0
   189     07F3  1383               	bcf	3,7	;select IRP bank0
   190     07F4  3020               	movlw	low __pbssBANK0
   191     07F5  0084               	movwf	4
   192     07F6  3033               	movlw	low (__pbssBANK0+19)
   193     07F7  120A  118A  261A  120A  118A  	fcall	clear_ram0
   194     07FC                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197     07FC                     __end_of__initialization:
   198     07FC  0183               	clrf	3
   199     07FD  120A  118A  2E62   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMMON
   202     007D                     __pbssCOMMON:
   203     007D                     _minus:
   204     007D                     	ds	1
   205                           
   206                           	psect	bssBANK0
   207     0020                     __pbssBANK0:
   208     0020                     _k:
   209     0020                     	ds	6
   210     0026                     _m:
   211     0026                     	ds	2
   212     0028                     _sum:
   213     0028                     	ds	2
   214     002A                     _n:
   215     002A                     	ds	2
   216     002C                     _num2:
   217     002C                     	ds	2
   218     002E                     _num1:
   219     002E                     	ds	2
   220     0030                     _equal:
   221     0030                     	ds	1
   222     0031                     _plus:
   223     0031                     	ds	1
   224     0032                     _j:
   225     0032                     	ds	1
   226                           
   227                           	psect	clrtext
   228     061A                     clear_ram0:	
   229                           ;	Called with FSR containing the base address, and
   230                           ;	W with the last address+1
   231                           
   232     061A  0064               	clrwdt	;clear the watchdog before getting into this loop
   233     061B                     clrloop0:
   234     061B  0180               	clrf	0	;clear RAM location pointed to by FSR
   235     061C  0A84               	incf	4,f	;increment pointer
   236     061D  0604               	xorwf	4,w	;XOR with final address
   237     061E  1903               	btfsc	3,2	;have we reached the end yet?
   238     061F  3400               	retlw	0	;all done for this memory range, return
   239     0620  0604               	xorwf	4,w	;XOR again to restore value
   240     0621  2E1B               	goto	clrloop0	;do the next byte
   241                           
   242                           	psect	cstackCOMMON
   243     0070                     __pcstackCOMMON:
   244     0070                     ?_initiate:
   245     0070                     ?_lcd_command:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ??_lcd_command:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_lcd_data:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ??_lcd_data:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ?_main:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ?___awdiv:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ___awdiv@divisor:	
   264                           ; 2 bytes @ 0x0
   265                           
   266                           
   267                           ; 2 bytes @ 0x0
   268     0070                     	ds	2
   269     0072                     lcd_command@i:
   270     0072                     lcd_data@i:	
   271                           ; 1 bytes @ 0x2
   272                           
   273     0072                     ___awdiv@dividend:	
   274                           ; 1 bytes @ 0x2
   275                           
   276                           
   277                           ; 2 bytes @ 0x2
   278     0072                     	ds	1
   279     0073                     ??_initiate:
   280                           
   281                           ; 1 bytes @ 0x3
   282     0073                     	ds	1
   283     0074                     ??___awdiv:
   284     0074                     ___awdiv@counter:	
   285                           ; 1 bytes @ 0x4
   286                           
   287                           
   288                           ; 1 bytes @ 0x4
   289     0074                     	ds	1
   290     0075                     ___awdiv@sign:
   291                           
   292                           ; 1 bytes @ 0x5
   293     0075                     	ds	1
   294     0076                     ___awdiv@quotient:
   295                           
   296                           ; 2 bytes @ 0x6
   297     0076                     	ds	2
   298     0078                     ?___bmul:
   299     0078                     ___bmul@multiplicand:	
   300                           ; 1 bytes @ 0x8
   301                           
   302                           
   303                           ; 1 bytes @ 0x8
   304     0078                     	ds	1
   305     0079                     ??___bmul:
   306     0079                     ___bmul@product:	
   307                           ; 1 bytes @ 0x9
   308                           
   309                           
   310                           ; 1 bytes @ 0x9
   311     0079                     	ds	1
   312     007A                     ___bmul@multiplier:
   313                           
   314                           ; 1 bytes @ 0xA
   315     007A                     	ds	1
   316     007B                     ?_lcd_out:
   317     007B                     lcd_out@i:	
   318                           ; 1 bytes @ 0xB
   319                           
   320                           
   321                           ; 2 bytes @ 0xB
   322     007B                     	ds	2
   323     007D                     ??_lcd_out:
   324     007D                     ??_main:	
   325                           ; 1 bytes @ 0xD
   326                           
   327                           
   328                           	psect	cstackBANK0
   329     0033                     __pcstackBANK0:	
   330                           ; 1 bytes @ 0xD
   331                           
   332     0033                     lcd_out@s:
   333                           
   334                           ; 1 bytes @ 0x0
   335     0033                     	ds	1
   336     0034                     lcd_out@j:
   337                           
   338                           ; 1 bytes @ 0x1
   339     0034                     	ds	1
   340                           
   341                           	psect	maintext
   342     0662                     __pmaintext:	
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 21 in file "4.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels required when called: 2
   368 ;; This function calls:
   369 ;;		_initiate
   370 ;;		_lcd_command
   371 ;;		_lcd_data
   372 ;;		_lcd_out
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378     0662                     _main:	
   379                           ;psect for function _main
   380                           
   381     0662                     l916:	
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   384                           
   385     0662  120A  118A  26B2  120A  118A  	fcall	_initiate
   386     0667                     l918:
   387     0667  3064               	movlw	100
   388     0668  1283               	bcf	3,5	;RP0=0, select bank0
   389     0669  1303               	bcf	3,6	;RP1=0, select bank0
   390     066A  00AE               	movwf	_num1
   391     066B  3000               	movlw	0
   392     066C  00AF               	movwf	_num1+1
   393     066D                     l920:
   394     066D  3021               	movlw	33
   395     066E  00AC               	movwf	_num2
   396     066F  3002               	movlw	2
   397     0670  00AD               	movwf	_num2+1
   398     0671                     l922:
   399     0671  302B               	movlw	43
   400     0672  00B1               	movwf	_plus
   401     0673                     l924:
   402     0673  303D               	movlw	61
   403     0674  00B0               	movwf	_equal
   404     0675                     l926:
   405     0675  302D               	movlw	45
   406     0676  00FD               	movwf	_minus
   407     0677                     l928:
   408     0677  3043               	movlw	67
   409     0678  00A8               	movwf	_sum
   410     0679  30FE               	movlw	254
   411     067A  00A9               	movwf	_sum+1
   412     067B                     l930:
   413     067B  3080               	movlw	128
   414     067C  120A  118A  264B  120A  118A  	fcall	_lcd_command
   415     0681                     l932:
   416     0681  3064               	movlw	100
   417     0682  00FB               	movwf	lcd_out@i
   418     0683  3000               	movlw	0
   419     0684  00FC               	movwf	lcd_out@i+1
   420     0685  120A  118A  2772  120A  118A  	fcall	_lcd_out
   421     068A                     l934:
   422     068A  302D               	movlw	45
   423     068B  120A  118A  2622  120A  118A  	fcall	_lcd_data
   424     0690                     l936:
   425     0690  3021               	movlw	33
   426     0691  00FB               	movwf	lcd_out@i
   427     0692  3002               	movlw	2
   428     0693  00FC               	movwf	lcd_out@i+1
   429     0694  120A  118A  2772  120A  118A  	fcall	_lcd_out
   430     0699                     l938:
   431     0699  303D               	movlw	61
   432     069A  120A  118A  2622  120A  118A  	fcall	_lcd_data
   433     069F                     l940:
   434     069F                     l942:
   435     069F  302D               	movlw	45
   436     06A0  120A  118A  2622  120A  118A  	fcall	_lcd_data
   437     06A5                     l946:
   438     06A5  3043               	movlw	67
   439     06A6  00FB               	movwf	lcd_out@i
   440     06A7  30FE               	movlw	254
   441     06A8  00FC               	movwf	lcd_out@i+1
   442     06A9  120A  118A  2772  120A  118A  	fcall	_lcd_out
   443     06AE                     l45:
   444     06AE                     l46:
   445     06AE  2EAE               	goto	l45
   446     06AF  120A  118A  2800   	ljmp	start
   447     06B2                     __end_of_main:
   448                           
   449                           	psect	text1
   450     0772                     __ptext1:	
   451 ;; *************** function _lcd_out *****************
   452 ;; Defined at:
   453 ;;		line 62 in file "4.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  i               2   11[COMMON] int 
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  j               1    1[BANK0 ] unsigned char 
   458 ;;  s               1    0[BANK0 ] unsigned char 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   468 ;;      Params:         2       0       0       0       0
   469 ;;      Locals:         0       2       0       0       0
   470 ;;      Temps:          0       0       0       0       0
   471 ;;      Totals:         2       2       0       0       0
   472 ;;Total ram usage:        4 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; Hardware stack levels required when called: 1
   475 ;; This function calls:
   476 ;;		___awdiv
   477 ;;		___bmul
   478 ;;		_lcd_data
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484     0772                     _lcd_out:	
   485                           ;psect for function _lcd_out
   486                           
   487     0772                     l884:	
   488                           ;incstack = 0
   489                           ; Regs used in _lcd_out: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   490                           
   491     0772  1283               	bcf	3,5	;RP0=0, select bank0
   492     0773  1303               	bcf	3,6	;RP1=0, select bank0
   493     0774  01B4               	clrf	lcd_out@j
   494     0775  0AB4               	incf	lcd_out@j,f
   495     0776                     l886:
   496     0776  087C               	movf	lcd_out@i+1,w
   497     0777  00A7               	movwf	_m+1
   498     0778  087B               	movf	lcd_out@i,w
   499     0779  00A6               	movwf	_m
   500     077A                     l888:
   501     077A  0827               	movf	_m+1,w
   502     077B  3A80               	xorlw	128
   503     077C  00FF               	movwf	btemp+1
   504     077D  3080               	movlw	128
   505     077E  027F               	subwf	btemp+1,w
   506     077F  1D03               	skipz
   507     0780  2F83               	goto	u285
   508     0781  3001               	movlw	1
   509     0782  0226               	subwf	_m,w
   510     0783                     u285:
   511     0783  1C03               	skipc
   512     0784  2F86               	goto	u281
   513     0785  2F87               	goto	u280
   514     0786                     u281:
   515     0786  2F88               	goto	l892
   516     0787                     u280:
   517     0787  2FC6               	goto	l902
   518     0788                     l892:
   519     0788  1283               	bcf	3,5	;RP0=0, select bank0
   520     0789  1303               	bcf	3,6	;RP1=0, select bank0
   521     078A  09A6               	comf	_m,f
   522     078B  09A7               	comf	_m+1,f
   523     078C  0AA6               	incf	_m,f
   524     078D  1903               	skipnz
   525     078E  0AA7               	incf	_m+1,f
   526     078F  2FC6               	goto	l902
   527     0790                     l894:
   528     0790  30F6               	movlw	246
   529     0791  00F8               	movwf	___bmul@multiplicand
   530     0792  0827               	movf	_m+1,w
   531     0793  00F3               	movwf	___awdiv@dividend+1
   532     0794  0826               	movf	_m,w
   533     0795  00F2               	movwf	___awdiv@dividend
   534     0796  300A               	movlw	10
   535     0797  00F0               	movwf	___awdiv@divisor
   536     0798  3000               	movlw	0
   537     0799  00F1               	movwf	___awdiv@divisor+1
   538     079A  120A  118A  270B  120A  118A  	fcall	___awdiv
   539     079F  0870               	movf	?___awdiv,w
   540     07A0  120A  118A  2636  120A  118A  	fcall	___bmul
   541     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   542     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   543     07A7  0726               	addwf	_m,w
   544     07A8  00B3               	movwf	lcd_out@s
   545     07A9                     l896:
   546     07A9  0834               	movf	lcd_out@j,w
   547     07AA  3E20               	addlw	(low (_k| 0))& (0+255)
   548     07AB  0084               	movwf	4
   549     07AC  0833               	movf	lcd_out@s,w
   550     07AD  1383               	bcf	3,7	;select IRP bank0
   551     07AE  0080               	movwf	0
   552     07AF                     l898:
   553     07AF  3001               	movlw	1
   554     07B0  00FF               	movwf	btemp+1
   555     07B1  087F               	movf	btemp+1,w
   556     07B2  07B4               	addwf	lcd_out@j,f
   557     07B3                     l900:
   558     07B3  300A               	movlw	10
   559     07B4  00F0               	movwf	___awdiv@divisor
   560     07B5  3000               	movlw	0
   561     07B6  00F1               	movwf	___awdiv@divisor+1
   562     07B7  0827               	movf	_m+1,w
   563     07B8  00F3               	movwf	___awdiv@dividend+1
   564     07B9  0826               	movf	_m,w
   565     07BA  00F2               	movwf	___awdiv@dividend
   566     07BB  120A  118A  270B  120A  118A  	fcall	___awdiv
   567     07C0  0871               	movf	?___awdiv+1,w
   568     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   569     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   570     07C3  00A7               	movwf	_m+1
   571     07C4  0870               	movf	?___awdiv,w
   572     07C5  00A6               	movwf	_m
   573     07C6                     l902:
   574     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   575     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   576     07C8  0826               	movf	_m,w
   577     07C9  0427               	iorwf	_m+1,w
   578     07CA  1D03               	btfss	3,2
   579     07CB  2FCD               	goto	u291
   580     07CC  2FCE               	goto	u290
   581     07CD                     u291:
   582     07CD  2F90               	goto	l894
   583     07CE                     u290:
   584     07CE                     l904:
   585     07CE  0834               	movf	lcd_out@j,w
   586     07CF  3E20               	addlw	(low (_k| 0))& (0+255)
   587     07D0  0084               	movwf	4
   588     07D1  1383               	bcf	3,7	;select IRP bank0
   589     07D2  0180               	clrf	0
   590     07D3                     l906:
   591     07D3  0834               	movf	lcd_out@j,w
   592     07D4  3EFF               	addlw	255
   593     07D5  00B4               	movwf	lcd_out@j
   594     07D6  2FEC               	goto	l914
   595     07D7                     l908:
   596     07D7  0834               	movf	lcd_out@j,w
   597     07D8  3E20               	addlw	(low (_k| 0))& (0+255)
   598     07D9  0084               	movwf	4
   599     07DA  1383               	bcf	3,7	;select IRP bank0
   600     07DB  0800               	movf	0,w
   601     07DC  3E30               	addlw	48
   602     07DD  00AA               	movwf	_n
   603     07DE  3000               	movlw	0
   604     07DF  1803               	skipnc
   605     07E0  3001               	movlw	1
   606     07E1  00AB               	movwf	_n+1
   607     07E2                     l910:
   608     07E2  082A               	movf	_n,w
   609     07E3  120A  118A  2622  120A  118A  	fcall	_lcd_data
   610     07E8                     l912:
   611     07E8  3001               	movlw	1
   612     07E9  1283               	bcf	3,5	;RP0=0, select bank0
   613     07EA  1303               	bcf	3,6	;RP1=0, select bank0
   614     07EB  02B4               	subwf	lcd_out@j,f
   615     07EC                     l914:
   616     07EC  0834               	movf	lcd_out@j,w
   617     07ED  1D03               	btfss	3,2
   618     07EE  2FF0               	goto	u301
   619     07EF  2FF1               	goto	u300
   620     07F0                     u301:
   621     07F0  2FD7               	goto	l908
   622     07F1                     u300:
   623     07F1                     l62:
   624     07F1  0008               	return
   625     07F2                     __end_of_lcd_out:
   626                           
   627                           	psect	text2
   628     0622                     __ptext2:	
   629 ;; *************** function _lcd_data *****************
   630 ;; Defined at:
   631 ;;		line 96 in file "4.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  i               1    wreg     unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  i               1    2[COMMON] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, btemp+1
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         1       0       0       0       0
   647 ;;      Temps:          2       0       0       0       0
   648 ;;      Totals:         3       0       0       0       0
   649 ;;Total ram usage:        3 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;;		_lcd_out
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659     0622                     _lcd_data:	
   660                           ;psect for function _lcd_data
   661                           
   662                           
   663                           ;incstack = 0
   664                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   665                           ;lcd_data@i stored from wreg
   666     0622  00F2               	movwf	lcd_data@i
   667     0623                     l788:
   668     0623  1283               	bcf	3,5	;RP0=0, select bank0
   669     0624  1303               	bcf	3,6	;RP1=0, select bank0
   670     0625  1587               	bsf	7,3	;volatile
   671     0626                     l790:
   672     0626  0872               	movf	lcd_data@i,w
   673     0627  0088               	movwf	8	;volatile
   674     0628                     l792:
   675     0628  1407               	bsf	7,0	;volatile
   676     0629                     l794:
   677     0629  30FE               	movlw	254
   678     062A  00FF               	movwf	btemp+1
   679     062B  087F               	movf	btemp+1,w
   680     062C  0587               	andwf	7,f	;volatile
   681     062D                     l796:
   682     062D  30C3               	movlw	195
   683     062E  00F1               	movwf	??_lcd_data+1
   684     062F  30CD               	movlw	205
   685     0630  00F0               	movwf	??_lcd_data
   686     0631                     u317:
   687     0631  0BF0               	decfsz	??_lcd_data,f
   688     0632  2E31               	goto	u317
   689     0633  0BF1               	decfsz	??_lcd_data+1,f
   690     0634  2E31               	goto	u317
   691     0635                     l68:
   692     0635  0008               	return
   693     0636                     __end_of_lcd_data:
   694                           
   695                           	psect	text3
   696     0636                     __ptext3:	
   697 ;; *************** function ___bmul *****************
   698 ;; Defined at:
   699 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  multiplier      1    wreg     unsigned char 
   702 ;;  multiplicand    1    8[COMMON] unsigned char 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  multiplier      1   10[COMMON] unsigned char 
   705 ;;  product         1    9[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      unsigned char 
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, btemp+1
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         1       0       0       0       0
   716 ;;      Locals:         2       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_lcd_out
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728     0636                     ___bmul:	
   729                           ;psect for function ___bmul
   730                           
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
   734                           ;___bmul@multiplier stored from wreg
   735     0636  00FA               	movwf	___bmul@multiplier
   736     0637                     l798:
   737     0637  01F9               	clrf	___bmul@product
   738     0638                     l800:
   739     0638  1C7A               	btfss	___bmul@multiplier,0
   740     0639  2E3B               	goto	u161
   741     063A  2E3C               	goto	u160
   742     063B                     u161:
   743     063B  2E40               	goto	l804
   744     063C                     u160:
   745     063C                     l802:
   746     063C  0878               	movf	___bmul@multiplicand,w
   747     063D  00FF               	movwf	btemp+1
   748     063E  087F               	movf	btemp+1,w
   749     063F  07F9               	addwf	___bmul@product,f
   750     0640                     l804:
   751     0640  1003               	clrc
   752     0641  0DF8               	rlf	___bmul@multiplicand,f
   753     0642                     l806:
   754     0642  1003               	clrc
   755     0643  0CFA               	rrf	___bmul@multiplier,f
   756     0644                     l808:
   757     0644  087A               	movf	___bmul@multiplier,w
   758     0645  1D03               	btfss	3,2
   759     0646  2E48               	goto	u171
   760     0647  2E49               	goto	u170
   761     0648                     u171:
   762     0648  2E38               	goto	l800
   763     0649                     u170:
   764     0649                     l810:
   765     0649  0879               	movf	___bmul@product,w
   766     064A                     l180:
   767     064A  0008               	return
   768     064B                     __end_of___bmul:
   769                           
   770                           	psect	text4
   771     070B                     __ptext4:	
   772 ;; *************** function ___awdiv *****************
   773 ;; Defined at:
   774 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  divisor         2    0[COMMON] int 
   777 ;;  dividend        2    2[COMMON] int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  quotient        2    6[COMMON] int 
   780 ;;  sign            1    5[COMMON] unsigned char 
   781 ;;  counter         1    4[COMMON] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2    0[COMMON] int 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, btemp+1
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         4       0       0       0       0
   792 ;;      Locals:         4       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         8       0       0       0       0
   795 ;;Total ram usage:        8 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_lcd_out
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804     070B                     ___awdiv:	
   805                           ;psect for function ___awdiv
   806                           
   807     070B                     l814:	
   808                           ;incstack = 0
   809                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   810                           
   811     070B  01F5               	clrf	___awdiv@sign
   812     070C                     l816:
   813     070C  1FF1               	btfss	___awdiv@divisor+1,7
   814     070D  2F0F               	goto	u181
   815     070E  2F10               	goto	u180
   816     070F                     u181:
   817     070F  2F17               	goto	l822
   818     0710                     u180:
   819     0710                     l818:
   820     0710  09F0               	comf	___awdiv@divisor,f
   821     0711  09F1               	comf	___awdiv@divisor+1,f
   822     0712  0AF0               	incf	___awdiv@divisor,f
   823     0713  1903               	skipnz
   824     0714  0AF1               	incf	___awdiv@divisor+1,f
   825     0715                     l820:
   826     0715  01F5               	clrf	___awdiv@sign
   827     0716  0AF5               	incf	___awdiv@sign,f
   828     0717                     l822:
   829     0717  1FF3               	btfss	___awdiv@dividend+1,7
   830     0718  2F1A               	goto	u191
   831     0719  2F1B               	goto	u190
   832     071A                     u191:
   833     071A  2F24               	goto	l828
   834     071B                     u190:
   835     071B                     l824:
   836     071B  09F2               	comf	___awdiv@dividend,f
   837     071C  09F3               	comf	___awdiv@dividend+1,f
   838     071D  0AF2               	incf	___awdiv@dividend,f
   839     071E  1903               	skipnz
   840     071F  0AF3               	incf	___awdiv@dividend+1,f
   841     0720                     l826:
   842     0720  3001               	movlw	1
   843     0721  00FF               	movwf	btemp+1
   844     0722  087F               	movf	btemp+1,w
   845     0723  06F5               	xorwf	___awdiv@sign,f
   846     0724                     l828:
   847     0724  01F6               	clrf	___awdiv@quotient
   848     0725  01F7               	clrf	___awdiv@quotient+1
   849     0726                     l830:
   850     0726  0870               	movf	___awdiv@divisor,w
   851     0727  0471               	iorwf	___awdiv@divisor+1,w
   852     0728  1903               	btfsc	3,2
   853     0729  2F2B               	goto	u201
   854     072A  2F2C               	goto	u200
   855     072B                     u201:
   856     072B  2F63               	goto	l850
   857     072C                     u200:
   858     072C                     l832:
   859     072C  01F4               	clrf	___awdiv@counter
   860     072D  0AF4               	incf	___awdiv@counter,f
   861     072E  2F3A               	goto	l838
   862     072F                     l834:
   863     072F  3001               	movlw	1
   864     0730                     u215:
   865     0730  1003               	clrc
   866     0731  0DF0               	rlf	___awdiv@divisor,f
   867     0732  0DF1               	rlf	___awdiv@divisor+1,f
   868     0733  3EFF               	addlw	-1
   869     0734  1D03               	skipz
   870     0735  2F30               	goto	u215
   871     0736                     l836:
   872     0736  3001               	movlw	1
   873     0737  00FF               	movwf	btemp+1
   874     0738  087F               	movf	btemp+1,w
   875     0739  07F4               	addwf	___awdiv@counter,f
   876     073A                     l838:
   877     073A  1FF1               	btfss	___awdiv@divisor+1,7
   878     073B  2F3D               	goto	u221
   879     073C  2F3E               	goto	u220
   880     073D                     u221:
   881     073D  2F2F               	goto	l834
   882     073E                     u220:
   883     073E                     l840:
   884     073E  3001               	movlw	1
   885     073F                     u235:
   886     073F  1003               	clrc
   887     0740  0DF6               	rlf	___awdiv@quotient,f
   888     0741  0DF7               	rlf	___awdiv@quotient+1,f
   889     0742  3EFF               	addlw	-1
   890     0743  1D03               	skipz
   891     0744  2F3F               	goto	u235
   892     0745  0871               	movf	___awdiv@divisor+1,w
   893     0746  0273               	subwf	___awdiv@dividend+1,w
   894     0747  1D03               	skipz
   895     0748  2F4B               	goto	u245
   896     0749  0870               	movf	___awdiv@divisor,w
   897     074A  0272               	subwf	___awdiv@dividend,w
   898     074B                     u245:
   899     074B  1C03               	skipc
   900     074C  2F4E               	goto	u241
   901     074D  2F4F               	goto	u240
   902     074E                     u241:
   903     074E  2F56               	goto	l846
   904     074F                     u240:
   905     074F                     l842:
   906     074F  0870               	movf	___awdiv@divisor,w
   907     0750  02F2               	subwf	___awdiv@dividend,f
   908     0751  0871               	movf	___awdiv@divisor+1,w
   909     0752  1C03               	skipc
   910     0753  03F3               	decf	___awdiv@dividend+1,f
   911     0754  02F3               	subwf	___awdiv@dividend+1,f
   912     0755                     l844:
   913     0755  1476               	bsf	___awdiv@quotient,0
   914     0756                     l846:
   915     0756  3001               	movlw	1
   916     0757                     u255:
   917     0757  1003               	clrc
   918     0758  0CF1               	rrf	___awdiv@divisor+1,f
   919     0759  0CF0               	rrf	___awdiv@divisor,f
   920     075A  3EFF               	addlw	-1
   921     075B  1D03               	skipz
   922     075C  2F57               	goto	u255
   923     075D                     l848:
   924     075D  3001               	movlw	1
   925     075E  02F4               	subwf	___awdiv@counter,f
   926     075F  1D03               	btfss	3,2
   927     0760  2F62               	goto	u261
   928     0761  2F63               	goto	u260
   929     0762                     u261:
   930     0762  2F3E               	goto	l840
   931     0763                     u260:
   932     0763                     l850:
   933     0763  0875               	movf	___awdiv@sign,w
   934     0764  1903               	btfsc	3,2
   935     0765  2F67               	goto	u271
   936     0766  2F68               	goto	u270
   937     0767                     u271:
   938     0767  2F6D               	goto	l854
   939     0768                     u270:
   940     0768                     l852:
   941     0768  09F6               	comf	___awdiv@quotient,f
   942     0769  09F7               	comf	___awdiv@quotient+1,f
   943     076A  0AF6               	incf	___awdiv@quotient,f
   944     076B  1903               	skipnz
   945     076C  0AF7               	incf	___awdiv@quotient+1,f
   946     076D                     l854:
   947     076D  0877               	movf	___awdiv@quotient+1,w
   948     076E  00F1               	movwf	?___awdiv+1
   949     076F  0876               	movf	___awdiv@quotient,w
   950     0770  00F0               	movwf	?___awdiv
   951     0771                     l307:
   952     0771  0008               	return
   953     0772                     __end_of___awdiv:
   954                           
   955                           	psect	text5
   956     06B2                     __ptext5:	
   957 ;; *************** function _initiate *****************
   958 ;; Defined at:
   959 ;;		line 44 in file "4.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;		None
   962 ;; Auto vars:     Size  Location     Type
   963 ;;		None
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0
   975 ;;      Temps:          2       0       0       0       0
   976 ;;      Totals:         2       0       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 1
   980 ;; This function calls:
   981 ;;		_lcd_command
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987     06B2                     _initiate:	
   988                           ;psect for function _initiate
   989                           
   990     06B2                     l858:	
   991                           ;incstack = 0
   992                           ; Regs used in _initiate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   993                           
   994     06B2  1683               	bsf	3,5	;RP0=1, select bank1
   995     06B3  1303               	bcf	3,6	;RP1=0, select bank1
   996     06B4  0187               	clrf	7	;volatile
   997     06B5  0188               	clrf	8	;volatile
   998     06B6                     l860:
   999     06B6  3035               	movlw	53
  1000     06B7  120A  118A  264B  120A  118A  	fcall	_lcd_command
  1001     06BC                     l862:
  1002     06BC  30C3               	movlw	195
  1003     06BD  00F4               	movwf	??_initiate+1
  1004     06BE  30CD               	movlw	205
  1005     06BF  00F3               	movwf	??_initiate
  1006     06C0                     u327:
  1007     06C0  0BF3               	decfsz	??_initiate,f
  1008     06C1  2EC0               	goto	u327
  1009     06C2  0BF4               	decfsz	??_initiate+1,f
  1010     06C3  2EC0               	goto	u327
  1011     06C4                     l864:
  1012     06C4  3031               	movlw	49
  1013     06C5  120A  118A  264B  120A  118A  	fcall	_lcd_command
  1014     06CA                     l866:
  1015     06CA  30C3               	movlw	195
  1016     06CB  00F4               	movwf	??_initiate+1
  1017     06CC  30CD               	movlw	205
  1018     06CD  00F3               	movwf	??_initiate
  1019     06CE                     u337:
  1020     06CE  0BF3               	decfsz	??_initiate,f
  1021     06CF  2ECE               	goto	u337
  1022     06D0  0BF4               	decfsz	??_initiate+1,f
  1023     06D1  2ECE               	goto	u337
  1024     06D2                     l868:
  1025     06D2  3034               	movlw	52
  1026     06D3  120A  118A  264B  120A  118A  	fcall	_lcd_command
  1027     06D8                     l870:
  1028     06D8  30C3               	movlw	195
  1029     06D9  00F4               	movwf	??_initiate+1
  1030     06DA  30CD               	movlw	205
  1031     06DB  00F3               	movwf	??_initiate
  1032     06DC                     u347:
  1033     06DC  0BF3               	decfsz	??_initiate,f
  1034     06DD  2EDC               	goto	u347
  1035     06DE  0BF4               	decfsz	??_initiate+1,f
  1036     06DF  2EDC               	goto	u347
  1037     06E0                     l872:
  1038     06E0  3038               	movlw	56
  1039     06E1  120A  118A  264B  120A  118A  	fcall	_lcd_command
  1040     06E6                     l874:
  1041     06E6  30C3               	movlw	195
  1042     06E7  00F4               	movwf	??_initiate+1
  1043     06E8  30CD               	movlw	205
  1044     06E9  00F3               	movwf	??_initiate
  1045     06EA                     u357:
  1046     06EA  0BF3               	decfsz	??_initiate,f
  1047     06EB  2EEA               	goto	u357
  1048     06EC  0BF4               	decfsz	??_initiate+1,f
  1049     06ED  2EEA               	goto	u357
  1050     06EE                     l876:
  1051     06EE  300C               	movlw	12
  1052     06EF  120A  118A  264B  120A  118A  	fcall	_lcd_command
  1053     06F4                     l878:
  1054     06F4  30C3               	movlw	195
  1055     06F5  00F4               	movwf	??_initiate+1
  1056     06F6  30CD               	movlw	205
  1057     06F7  00F3               	movwf	??_initiate
  1058     06F8                     u367:
  1059     06F8  0BF3               	decfsz	??_initiate,f
  1060     06F9  2EF8               	goto	u367
  1061     06FA  0BF4               	decfsz	??_initiate+1,f
  1062     06FB  2EF8               	goto	u367
  1063     06FC                     l880:
  1064     06FC  3001               	movlw	1
  1065     06FD  120A  118A  264B  120A  118A  	fcall	_lcd_command
  1066     0702                     l882:
  1067     0702  30C3               	movlw	195
  1068     0703  00F4               	movwf	??_initiate+1
  1069     0704  30CD               	movlw	205
  1070     0705  00F3               	movwf	??_initiate
  1071     0706                     u377:
  1072     0706  0BF3               	decfsz	??_initiate,f
  1073     0707  2F06               	goto	u377
  1074     0708  0BF4               	decfsz	??_initiate+1,f
  1075     0709  2F06               	goto	u377
  1076     070A                     l51:
  1077     070A  0008               	return
  1078     070B                     __end_of_initiate:
  1079                           
  1080                           	psect	text6
  1081     064B                     __ptext6:	
  1082 ;; *************** function _lcd_command *****************
  1083 ;; Defined at:
  1084 ;;		line 89 in file "4.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  i               1    wreg     unsigned char 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  i               1    2[COMMON] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0, btemp+1
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         1       0       0       0       0
  1100 ;;      Temps:          2       0       0       0       0
  1101 ;;      Totals:         3       0       0       0       0
  1102 ;;Total ram usage:        3 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;;		_initiate
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112     064B                     _lcd_command:	
  1113                           ;psect for function _lcd_command
  1114                           
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1]
  1118                           ;lcd_command@i stored from wreg
  1119     064B  00F2               	movwf	lcd_command@i
  1120     064C                     l780:
  1121     064C  30F7               	movlw	247
  1122     064D  00FF               	movwf	btemp+1
  1123     064E  087F               	movf	btemp+1,w
  1124     064F  1283               	bcf	3,5	;RP0=0, select bank0
  1125     0650  1303               	bcf	3,6	;RP1=0, select bank0
  1126     0651  0587               	andwf	7,f	;volatile
  1127     0652                     l782:
  1128     0652  0872               	movf	lcd_command@i,w
  1129     0653  0088               	movwf	8	;volatile
  1130     0654                     l784:
  1131     0654  1407               	bsf	7,0	;volatile
  1132     0655                     l786:
  1133     0655  30FE               	movlw	254
  1134     0656  00FF               	movwf	btemp+1
  1135     0657  087F               	movf	btemp+1,w
  1136     0658  0587               	andwf	7,f	;volatile
  1137     0659  30C3               	movlw	195
  1138     065A  00F1               	movwf	??_lcd_command+1
  1139     065B  30CD               	movlw	205
  1140     065C  00F0               	movwf	??_lcd_command
  1141     065D                     u387:
  1142     065D  0BF0               	decfsz	??_lcd_command,f
  1143     065E  2E5D               	goto	u387
  1144     065F  0BF1               	decfsz	??_lcd_command+1,f
  1145     0660  2E5D               	goto	u387
  1146     0661                     l65:
  1147     0661  0008               	return
  1148     0662                     __end_of_lcd_command:
  1149     007E                     btemp	set	126	;btemp
  1150     007E                     wtemp0	set	126
  1151                           
  1152                           	psect	config
  1153                           
  1154                           ;Config register CONFIG @ 0x2007
  1155                           ;	Oscillator Selection bits
  1156                           ;	FOSC = EXTRC, RC oscillator
  1157                           ;	Watchdog Timer Enable bit
  1158                           ;	WDTE = OFF, WDT disabled
  1159                           ;	Power-up Timer Enable bit
  1160                           ;	PWRTE = OFF, PWRT disabled
  1161                           ;	Brown-out Reset Enable bit
  1162                           ;	BOREN = OFF, BOR disabled
  1163                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1164                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1165                           ;	Data EEPROM Memory Code Protection bit
  1166                           ;	CPD = OFF, Data EEPROM code protection off
  1167                           ;	Flash Program Memory Write Enable bits
  1168                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1169                           ;	In-Circuit Debugger Mode bit
  1170                           ;	DEBUG = 0x1, unprogrammed default
  1171                           ;	Flash Program Memory Code Protection bit
  1172                           ;	CP = OFF, Code protection off
  1173     2007                     	org	8199
  1174     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      2      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd_out
    _lcd_out->___bmul
    ___bmul->___awdiv
    _initiate->_lcd_command

Critical Paths under _main in BANK0

    _main->_lcd_out

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1247
                           _initiate
                        _lcd_command
                           _lcd_data
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_out                                              4     2      2    1181
                                             11 COMMON     2     0      2
                                              0 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              8 COMMON     3     2      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initiate                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
     _lcd_command
   _lcd_command
   _lcd_data
   _lcd_out
     ___awdiv
     ___bmul
       ___awdiv (ARG)
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 15 20:09:30 2024

                      _j 0032                        _k 0020                        _m 0026  
                      _n 002A           ___bmul@product 0079                       l51 070A  
                     l45 06AE                       l62 07F1                       l46 06AE  
                     l65 0661                       l68 0635             ___awdiv@sign 0075  
                     fsr 0004                      l307 0771                      l180 064A  
                    l800 0638                      l810 0649                      l802 063C  
                    l820 0715                      l804 0640                      l900 07B3  
                    l830 0726                      l822 0717                      l814 070B  
                    l806 0642                      l910 07E2                      l902 07C6  
                    l840 073E                      l832 072C                      l824 071B  
                    l816 070C                      l808 0644                      l912 07E8  
                    l904 07CE                      l920 066D                      l842 074F  
                    l834 072F                      l850 0763                      l826 0720  
                    l818 0710                      l914 07EC                      l906 07D3  
                    l930 067B                      l922 0671                      l780 064C  
                    l860 06B6                      l852 0768                      l844 0755  
                    l836 0736                      l828 0724                      l908 07D7  
                    l940 069F                      l932 0681                      l924 0673  
                    l916 0662                      l782 0652                      l870 06D8  
                    l862 06BC                      l854 076D                      l846 0756  
                    l838 073A                      l790 0626                      l942 069F  
                    l934 068A                      l926 0675                      l918 0667  
                    l784 0654                      l880 06FC                      l872 06E0  
                    l864 06C4                      l848 075D                      l792 0628  
                    l936 0690                      l928 0677                      l786 0655  
                    l882 0702                      l874 06E6                      l866 06CA  
                    l858 06B2                      l794 0629                      l946 06A5  
                    l938 0699                      l876 06EE                      l868 06D2  
                    l796 062D                      l788 0623                      l892 0788  
                    l884 0772                      l878 06F4                      l798 0637  
                    l894 0790                      l886 0776                      l896 07A9  
                    l888 077A                      l898 07AF                      u200 072C  
                    u201 072B                      u220 073E                      u300 07F1  
                    u221 073D                      u301 07F0                      u215 0730  
                    u240 074F                      u160 063C                      u241 074E  
                    u161 063B                      u170 0649                      u235 073F  
                    u171 0648                      u260 0763                      u180 0710  
                    u261 0762                      u245 074B                      u181 070F  
                    u317 0631                      u270 0768                      u190 071B  
                    u327 06C0                      u271 0767                      u255 0757  
                    u191 071A                      u280 0787                      u337 06CE  
                    u281 0786                      u290 07CE                      u347 06DC  
                    u291 07CD                      u357 06EA                      u285 0783  
                    u367 06F8                      u377 0706                      u387 065D  
                    fsr0 0004                      _sum 0028                      indf 0000  
           lcd_command@i 0072                     _main 0662                     _num1 002E  
                   _num2 002C                     _plus 0031                     btemp 007E  
                   start 0000        ___bmul@multiplier 007A                    ?_main 0070  
        __end_of___awdiv 0772          ___awdiv@divisor 0070          ___awdiv@counter 0074  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088          __end_of_lcd_out 07F2                    _equal 0030  
                  _minus 007D                    status 0003                    wtemp0 007E  
        __initialization 07F2             __end_of_main 06B2                   ??_main 007D  
       ___awdiv@dividend 0072         __end_of_lcd_data 0636                   ___bmul 0636  
              ??___awdiv 0074         __end_of_initiate 070B         ___awdiv@quotient 0076  
              ??_lcd_out 007D  __end_of__initialization 07FC      ___bmul@multiplicand 0078  
         __pcstackCOMMON 0070               __pbssBANK0 0020               __pmaintext 0662  
                ?___bmul 0078                ?_lcd_data 0070                ?_initiate 0070  
                ___awdiv 070B                  __ptext1 0772                  __ptext2 0622  
                __ptext3 0636                  __ptext4 070B                  __ptext5 06B2  
                __ptext6 064B                  _lcd_out 0772               ??_lcd_data 0070  
                clrloop0 061B     end_of_initialization 07FC               ??_initiate 0073  
          ??_lcd_command 0070           __end_of___bmul 064B      start_initialization 07F2  
               ??___bmul 0079      __end_of_lcd_command 0662              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0033                 ?___awdiv 0070  
               ?_lcd_out 007B                clear_ram0 061A              _lcd_command 064B  
              lcd_data@i 0072                 _lcd_data 0622                 _initiate 06B2  
               lcd_out@i 007B                 lcd_out@j 0034                 lcd_out@s 0033  
           ?_lcd_command 0070  
