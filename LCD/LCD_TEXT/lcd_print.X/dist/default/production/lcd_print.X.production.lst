

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jul 14 11:38:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 12/10/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     06FB                     __pidataBANK0:
   174                           
   175                           ;initializer for _array
   176     06FB  3456               	retlw	86
   177     06FC  3449               	retlw	73
   178     06FD  3447               	retlw	71
   179     06FE  344E               	retlw	78
   180     06FF  3445               	retlw	69
   181     0700  3453               	retlw	83
   182     0701  3448               	retlw	72
   183     0702  3400               	retlw	0
   184     0703  3400               	retlw	0
   185     0704  3400               	retlw	0
   186     0705  3400               	retlw	0
   187     0706  3400               	retlw	0
   188     0707  3400               	retlw	0
   189     0708  3400               	retlw	0
   190     0709  3400               	retlw	0
   191     070A  3400               	retlw	0
   192     070B  3400               	retlw	0
   193     070C  3400               	retlw	0
   194     0008                     _PORTD	set	8
   195     0007                     _PORTC	set	7
   196     0088                     _TRISD	set	136
   197     0087                     _TRISC	set	135
   198                           
   199                           	psect	cinit
   200     07ED                     start_initialization:	
   201                           ; #config settings
   202                           
   203     07ED                     __initialization:
   204                           
   205                           ; Initialize objects allocated to BANK0
   206     07ED  1383               	bcf	3,7	;select IRP bank0
   207     07EE  3032               	movlw	low (__pdataBANK0+18)
   208     07EF  00FD               	movwf	btemp+-1
   209     07F0  3006               	movlw	high __pidataBANK0
   210     07F1  00FE               	movwf	btemp
   211     07F2  30FB               	movlw	low __pidataBANK0
   212     07F3  00FF               	movwf	btemp+1
   213     07F4  3020               	movlw	low __pdataBANK0
   214     07F5  0084               	movwf	4
   215     07F6  120A  118A  2711  120A  118A  	fcall	init_ram0
   216                           
   217                           ; Clear objects allocated to COMMON
   218     07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   219     07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     07FC                     __end_of__initialization:
   223     07FC  0183               	clrf	3
   224     07FD  120A  118A  2F4B   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	bssCOMMON
   227     0077                     __pbssCOMMON:
   228     0077                     _x:
   229     0077                     	ds	1
   230                           
   231                           	psect	dataBANK0
   232     0020                     __pdataBANK0:
   233     0020                     _array:
   234     0020                     	ds	18
   235                           
   236                           	psect	inittext
   237     070D                     init_fetch0:	
   238                           ;	Called with low address in FSR and high address in W
   239                           
   240     070D  087E               	movf	btemp,w
   241     070E  008A               	movwf	10
   242     070F  087F               	movf	btemp+1,w
   243     0710  0082               	movwf	2
   244     0711                     init_ram0:	
   245                           ;Called with:
   246                           ;	high address of idata address in btemp 
   247                           ;	low address of idata address in btemp+1 
   248                           ;	low address of data in FSR
   249                           ;	high address + 1 of data in btemp-1
   250                           
   251     0711  120A  118A  270D  120A  118A  	fcall	init_fetch0
   252     0716  0080               	movwf	0
   253     0717  0A84               	incf	4,f
   254     0718  0804               	movf	4,w
   255     0719  067D               	xorwf	btemp+-1,w
   256     071A  1903               	btfsc	3,2
   257     071B  3400               	retlw	0
   258     071C  0AFF               	incf	btemp+1,f
   259     071D  1903               	btfsc	3,2
   260     071E  0AFE               	incf	btemp,f
   261     071F  2F11               	goto	init_ram0
   262                           
   263                           	psect	cstackCOMMON
   264     0070                     __pcstackCOMMON:
   265     0070                     ?_init:
   266     0070                     ?_lcd_Command:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     ??_lcd_Command:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ?_lcd_Data:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ??_lcd_Data:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283     0070                     	ds	2
   284     0072                     lcd_Data@i:
   285     0072                     lcd_Command@i:	
   286                           ; 1 bytes @ 0x2
   287                           
   288                           
   289                           ; 1 bytes @ 0x2
   290     0072                     	ds	1
   291     0073                     ??_init:
   292                           
   293                           ; 1 bytes @ 0x3
   294     0073                     	ds	2
   295     0075                     ??_main:
   296     0075                     main@position1:	
   297                           ; 1 bytes @ 0x5
   298                           
   299                           
   300                           ; 1 bytes @ 0x5
   301     0075                     	ds	1
   302     0076                     main@position2:
   303                           
   304                           ; 1 bytes @ 0x6
   305     0076                     	ds	1
   306                           
   307                           	psect	maintext
   308     074B                     __pmaintext:	
   309 ;;
   310 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   311 ;;
   312 ;; *************** function _main *****************
   313 ;; Defined at:
   314 ;;		line 23 in file "lcd.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;  position2       1    6[COMMON] unsigned char 
   319 ;;  position1       1    5[COMMON] unsigned char 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : B00/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         2       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0
   332 ;;      Totals:         2       0       0       0       0
   333 ;;Total ram usage:        2 bytes
   334 ;; Hardware stack levels required when called: 2
   335 ;; This function calls:
   336 ;;		_init
   337 ;;		_lcd_Command
   338 ;;		_lcd_Data
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344     074B                     _main:	
   345                           ;psect for function _main
   346                           
   347     074B                     l629:	
   348                           ;incstack = 0
   349                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   350                           
   351                           
   352                           ;lcd.c: 24:     init();
   353     074B  120A  118A  2794  120A  118A  	fcall	_init
   354     0750                     l631:
   355                           
   356                           ;lcd.c: 25:     unsigned char position1=0x82;
   357     0750  3082               	movlw	130
   358     0751  00F5               	movwf	main@position1
   359     0752                     l633:
   360                           
   361                           ;lcd.c: 26:     for(x = 0; x < 7; x++) {
   362     0752  01F7               	clrf	_x
   363     0753                     l639:
   364                           
   365                           ;lcd.c: 27:         lcd_Command(position1++);
   366     0753  0875               	movf	main@position1,w
   367     0754  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   368     0759                     l641:
   369     0759  3001               	movlw	1
   370     075A  00FF               	movwf	btemp+1
   371     075B  087F               	movf	btemp+1,w
   372     075C  07F5               	addwf	main@position1,f
   373     075D                     l643:
   374                           
   375                           ;lcd.c: 28:         lcd_Data(array[x]);
   376     075D  0877               	movf	_x,w
   377     075E  3E20               	addlw	(low (_array| 0))& (0+255)
   378     075F  0084               	movwf	4
   379     0760  1383               	bcf	3,7	;select IRP bank0
   380     0761  0800               	movf	0,w
   381     0762  120A  118A  2720  120A  118A  	fcall	_lcd_Data
   382     0767                     l645:
   383                           
   384                           ;lcd.c: 29:     }
   385     0767  3001               	movlw	1
   386     0768  00FF               	movwf	btemp+1
   387     0769  087F               	movf	btemp+1,w
   388     076A  07F7               	addwf	_x,f
   389     076B                     l647:
   390     076B  3007               	movlw	7
   391     076C  0277               	subwf	_x,w
   392     076D  1C03               	skipc
   393     076E  2F70               	goto	u11
   394     076F  2F71               	goto	u10
   395     0770                     u11:
   396     0770  2F53               	goto	l639
   397     0771                     u10:
   398     0771                     l649:
   399                           
   400                           ;lcd.c: 32:     unsigned char position2 = 0xCE;
   401     0771  30CE               	movlw	206
   402     0772  00F6               	movwf	main@position2
   403     0773                     l651:
   404                           
   405                           ;lcd.c: 33:     for(x = 0;x < 7;x++) {
   406     0773  01F7               	clrf	_x
   407     0774                     l657:
   408                           
   409                           ;lcd.c: 34:         lcd_Command(position2--);
   410     0774  0876               	movf	main@position2,w
   411     0775  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   412     077A                     l659:
   413     077A  3001               	movlw	1
   414     077B  02F6               	subwf	main@position2,f
   415     077C                     l661:
   416                           
   417                           ;lcd.c: 35:         lcd_Data(array[x]);
   418     077C  0877               	movf	_x,w
   419     077D  3E20               	addlw	(low (_array| 0))& (0+255)
   420     077E  0084               	movwf	4
   421     077F  1383               	bcf	3,7	;select IRP bank0
   422     0780  0800               	movf	0,w
   423     0781  120A  118A  2720  120A  118A  	fcall	_lcd_Data
   424     0786                     l663:
   425                           
   426                           ;lcd.c: 36:     }
   427     0786  3001               	movlw	1
   428     0787  00FF               	movwf	btemp+1
   429     0788  087F               	movf	btemp+1,w
   430     0789  07F7               	addwf	_x,f
   431     078A                     l665:
   432     078A  3007               	movlw	7
   433     078B  0277               	subwf	_x,w
   434     078C  1C03               	skipc
   435     078D  2F8F               	goto	u21
   436     078E  2F90               	goto	u20
   437     078F                     u21:
   438     078F  2F74               	goto	l657
   439     0790                     u20:
   440     0790                     l29:	
   441                           ;lcd.c: 38:     while(1);
   442                           
   443     0790  2F90               	goto	l29
   444     0791  120A  118A  2800   	ljmp	start
   445     0794                     __end_of_main:
   446                           
   447                           	psect	text1
   448     0720                     __ptext1:	
   449 ;; *************** function _lcd_Data *****************
   450 ;; Defined at:
   451 ;;		line 58 in file "lcd.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;  i               1    wreg     unsigned char 
   454 ;; Auto vars:     Size  Location     Type
   455 ;;  i               1    2[COMMON] unsigned char 
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, btemp+1
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         1       0       0       0       0
   467 ;;      Temps:          2       0       0       0       0
   468 ;;      Totals:         3       0       0       0       0
   469 ;;Total ram usage:        3 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_main
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478     0720                     _lcd_Data:	
   479                           ;psect for function _lcd_Data
   480                           
   481                           
   482                           ;incstack = 0
   483                           ; Regs used in _lcd_Data: [wreg+status,2+status,0+btemp+1]
   484                           ;lcd_Data@i stored from wreg
   485     0720  00F2               	movwf	lcd_Data@i
   486     0721                     l619:
   487                           
   488                           ;lcd.c: 59:     PORTC |= 0x08;
   489     0721  1283               	bcf	3,5	;RP0=0, select bank0
   490     0722  1303               	bcf	3,6	;RP1=0, select bank0
   491     0723  1587               	bsf	7,3	;volatile
   492     0724                     l621:
   493                           
   494                           ;lcd.c: 60:     PORTD = i;
   495     0724  0872               	movf	lcd_Data@i,w
   496     0725  0088               	movwf	8	;volatile
   497     0726                     l623:
   498                           
   499                           ;lcd.c: 61:     PORTC |= 0x01;
   500     0726  1407               	bsf	7,0	;volatile
   501     0727                     l625:
   502                           
   503                           ;lcd.c: 62:     PORTC &= ~0x01;
   504     0727  30FE               	movlw	254
   505     0728  00FF               	movwf	btemp+1
   506     0729  087F               	movf	btemp+1,w
   507     072A  0587               	andwf	7,f	;volatile
   508     072B                     l627:
   509                           
   510                           ;lcd.c: 63:     _delay((unsigned long)((100)*(6000000/4000.0)));
   511     072B  30C3               	movlw	195
   512     072C  00F1               	movwf	??_lcd_Data+1
   513     072D  30CD               	movlw	205
   514     072E  00F0               	movwf	??_lcd_Data
   515     072F                     u37:
   516     072F  0BF0               	decfsz	??_lcd_Data,f
   517     0730  2F2F               	goto	u37
   518     0731  0BF1               	decfsz	??_lcd_Data+1,f
   519     0732  2F2F               	goto	u37
   520     0733                     l38:
   521     0733  0008               	return
   522     0734                     __end_of_lcd_Data:
   523                           
   524                           	psect	text2
   525     0794                     __ptext2:	
   526 ;; *************** function _init *****************
   527 ;; Defined at:
   528 ;;		line 41 in file "lcd.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          2       0       0       0       0
   545 ;;      Totals:         2       0       0       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 1
   549 ;; This function calls:
   550 ;;		_lcd_Command
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556     0794                     _init:	
   557                           ;psect for function _init
   558                           
   559     0794                     l593:	
   560                           ;incstack = 0
   561                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   562                           
   563                           
   564                           ;lcd.c: 42:     TRISC = 0x00;
   565     0794  1683               	bsf	3,5	;RP0=1, select bank1
   566     0795  1303               	bcf	3,6	;RP1=0, select bank1
   567     0796  0187               	clrf	7	;volatile
   568                           
   569                           ;lcd.c: 43:     TRISD = 0x00;
   570     0797  0188               	clrf	8	;volatile
   571     0798                     l595:
   572                           
   573                           ;lcd.c: 44:     lcd_Command(0x33);
   574     0798  3033               	movlw	51
   575     0799  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   576     079E                     l597:
   577                           
   578                           ;lcd.c: 45:     _delay((unsigned long)((100)*(6000000/4000.0)));
   579     079E  30C3               	movlw	195
   580     079F  00F4               	movwf	??_init+1
   581     07A0  30CD               	movlw	205
   582     07A1  00F3               	movwf	??_init
   583     07A2                     u47:
   584     07A2  0BF3               	decfsz	??_init,f
   585     07A3  2FA2               	goto	u47
   586     07A4  0BF4               	decfsz	??_init+1,f
   587     07A5  2FA2               	goto	u47
   588     07A6                     l599:
   589                           
   590                           ;lcd.c: 46:     lcd_Command(0x34);
   591     07A6  3034               	movlw	52
   592     07A7  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   593     07AC                     l601:
   594                           
   595                           ;lcd.c: 47:     _delay((unsigned long)((100)*(6000000/4000.0)));
   596     07AC  30C3               	movlw	195
   597     07AD  00F4               	movwf	??_init+1
   598     07AE  30CD               	movlw	205
   599     07AF  00F3               	movwf	??_init
   600     07B0                     u57:
   601     07B0  0BF3               	decfsz	??_init,f
   602     07B1  2FB0               	goto	u57
   603     07B2  0BF4               	decfsz	??_init+1,f
   604     07B3  2FB0               	goto	u57
   605     07B4                     l603:
   606                           
   607                           ;lcd.c: 48:     lcd_Command(0x35);
   608     07B4  3035               	movlw	53
   609     07B5  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   610     07BA                     l605:
   611                           
   612                           ;lcd.c: 49:     _delay((unsigned long)((100)*(6000000/4000.0)));
   613     07BA  30C3               	movlw	195
   614     07BB  00F4               	movwf	??_init+1
   615     07BC  30CD               	movlw	205
   616     07BD  00F3               	movwf	??_init
   617     07BE                     u67:
   618     07BE  0BF3               	decfsz	??_init,f
   619     07BF  2FBE               	goto	u67
   620     07C0  0BF4               	decfsz	??_init+1,f
   621     07C1  2FBE               	goto	u67
   622     07C2                     l607:
   623                           
   624                           ;lcd.c: 50:     lcd_Command(0x38);
   625     07C2  3038               	movlw	56
   626     07C3  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   627     07C8                     l609:
   628                           
   629                           ;lcd.c: 51:     _delay((unsigned long)((100)*(6000000/4000.0)));
   630     07C8  30C3               	movlw	195
   631     07C9  00F4               	movwf	??_init+1
   632     07CA  30CD               	movlw	205
   633     07CB  00F3               	movwf	??_init
   634     07CC                     u77:
   635     07CC  0BF3               	decfsz	??_init,f
   636     07CD  2FCC               	goto	u77
   637     07CE  0BF4               	decfsz	??_init+1,f
   638     07CF  2FCC               	goto	u77
   639     07D0                     l611:
   640                           
   641                           ;lcd.c: 52:     lcd_Command(0x0C);
   642     07D0  300C               	movlw	12
   643     07D1  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   644     07D6                     l613:
   645                           
   646                           ;lcd.c: 53:     _delay((unsigned long)((100)*(6000000/4000.0)));
   647     07D6  30C3               	movlw	195
   648     07D7  00F4               	movwf	??_init+1
   649     07D8  30CD               	movlw	205
   650     07D9  00F3               	movwf	??_init
   651     07DA                     u87:
   652     07DA  0BF3               	decfsz	??_init,f
   653     07DB  2FDA               	goto	u87
   654     07DC  0BF4               	decfsz	??_init+1,f
   655     07DD  2FDA               	goto	u87
   656     07DE                     l615:
   657                           
   658                           ;lcd.c: 54:     lcd_Command(0x01);
   659     07DE  3001               	movlw	1
   660     07DF  120A  118A  2734  120A  118A  	fcall	_lcd_Command
   661     07E4                     l617:
   662                           
   663                           ;lcd.c: 55:     _delay((unsigned long)((100)*(6000000/4000.0)));
   664     07E4  30C3               	movlw	195
   665     07E5  00F4               	movwf	??_init+1
   666     07E6  30CD               	movlw	205
   667     07E7  00F3               	movwf	??_init
   668     07E8                     u97:
   669     07E8  0BF3               	decfsz	??_init,f
   670     07E9  2FE8               	goto	u97
   671     07EA  0BF4               	decfsz	??_init+1,f
   672     07EB  2FE8               	goto	u97
   673     07EC                     l35:
   674     07EC  0008               	return
   675     07ED                     __end_of_init:
   676                           
   677                           	psect	text3
   678     0734                     __ptext3:	
   679 ;; *************** function _lcd_Command *****************
   680 ;; Defined at:
   681 ;;		line 66 in file "lcd.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  i               1    wreg     unsigned char 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  i               1    2[COMMON] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, btemp+1
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         1       0       0       0       0
   697 ;;      Temps:          2       0       0       0       0
   698 ;;      Totals:         3       0       0       0       0
   699 ;;Total ram usage:        3 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_main
   705 ;;		_init
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709     0734                     _lcd_Command:	
   710                           ;psect for function _lcd_Command
   711                           
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _lcd_Command: [wreg+status,2+status,0+btemp+1]
   715                           ;lcd_Command@i stored from wreg
   716     0734  00F2               	movwf	lcd_Command@i
   717     0735                     l585:
   718                           
   719                           ;lcd.c: 67:     PORTC &= ~0x08;
   720     0735  30F7               	movlw	247
   721     0736  00FF               	movwf	btemp+1
   722     0737  087F               	movf	btemp+1,w
   723     0738  1283               	bcf	3,5	;RP0=0, select bank0
   724     0739  1303               	bcf	3,6	;RP1=0, select bank0
   725     073A  0587               	andwf	7,f	;volatile
   726     073B                     l587:
   727                           
   728                           ;lcd.c: 68:     PORTD = i;
   729     073B  0872               	movf	lcd_Command@i,w
   730     073C  0088               	movwf	8	;volatile
   731     073D                     l589:
   732                           
   733                           ;lcd.c: 69:     PORTC |= 0x01;
   734     073D  1407               	bsf	7,0	;volatile
   735     073E                     l591:
   736                           
   737                           ;lcd.c: 70:     PORTC &= ~0x01;
   738     073E  30FE               	movlw	254
   739     073F  00FF               	movwf	btemp+1
   740     0740  087F               	movf	btemp+1,w
   741     0741  0587               	andwf	7,f	;volatile
   742                           
   743                           ;lcd.c: 71:     _delay((unsigned long)((100)*(6000000/4000.0)));
   744     0742  30C3               	movlw	195
   745     0743  00F1               	movwf	??_lcd_Command+1
   746     0744  30CD               	movlw	205
   747     0745  00F0               	movwf	??_lcd_Command
   748     0746                     u107:
   749     0746  0BF0               	decfsz	??_lcd_Command,f
   750     0747  2F46               	goto	u107
   751     0748  0BF1               	decfsz	??_lcd_Command+1,f
   752     0749  2F46               	goto	u107
   753     074A                     l41:
   754     074A  0008               	return
   755     074B                     __end_of_lcd_Command:
   756     007E                     btemp	set	126	;btemp
   757     007E                     wtemp0	set	126
   758                           
   759                           	psect	config
   760                           
   761                           ;Config register CONFIG @ 0x2007
   762                           ;	Oscillator Selection bits
   763                           ;	FOSC = EXTRC, RC oscillator
   764                           ;	Watchdog Timer Enable bit
   765                           ;	WDTE = OFF, WDT disabled
   766                           ;	Power-up Timer Enable bit
   767                           ;	PWRTE = OFF, PWRT disabled
   768                           ;	Brown-out Reset Enable bit
   769                           ;	BOREN = OFF, BOR disabled
   770                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   771                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   772                           ;	Data EEPROM Memory Code Protection bit
   773                           ;	CPD = OFF, Data EEPROM code protection off
   774                           ;	Flash Program Memory Write Enable bits
   775                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   776                           ;	In-Circuit Debugger Mode bit
   777                           ;	DEBUG = 0x1, unprogrammed default
   778                           ;	Flash Program Memory Code Protection bit
   779                           ;	CP = OFF, Code protection off
   780     2007                     	org	8199
   781     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      0      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_lcd_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      75
                                              5 COMMON     2     2      0
                               _init
                        _lcd_Command
                           _lcd_Data
 ---------------------------------------------------------------------------------
 (1) _lcd_Data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      15
                                              3 COMMON     2     2      0
                        _lcd_Command
 ---------------------------------------------------------------------------------
 (1) _lcd_Command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _lcd_Command
   _lcd_Command
   _lcd_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      12       5       22.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jul 14 11:38:35 2024

                      _x 0077                        pc 0002                       l41 074A  
                     l35 07EC                       l29 0790                       l38 0733  
                     u10 0771                       u11 0770                       u20 0790  
                     u21 078F                       u37 072F                       u47 07A2  
                     u57 07B0                       u67 07BE                       u77 07CC  
                     u87 07DA                       u97 07E8                       fsr 0004  
                    l601 07AC                      l611 07D0                      l603 07B4  
                    l613 07D6                      l605 07BA                      l621 0724  
                    l615 07DE                      l607 07C2                      l623 0726  
                    l631 0750                      l617 07E4                      l609 07C8  
                    l625 0727                      l641 0759                      l633 0752  
                    l627 072B                      l619 0721                      l651 0773  
                    l643 075D                      l661 077C                      l645 0767  
                    l629 074B                      l591 073E                      l663 0786  
                    l647 076B                      l639 0753                      l585 0735  
                    l593 0794                      l665 078A                      l657 0774  
                    l649 0771                      l587 073B                      l595 0798  
                    l659 077A                      l589 073D                      l597 079E  
                    l599 07A6                      u107 0746                      fsr0 0004  
                    indf 0000                     _main 074B                     _init 0794  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_init 0070                    _PORTC 0007                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088                    _array 0020  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07ED             __end_of_main 0794             __end_of_init 07ED  
                 ??_main 0075                   ??_init 0073         __end_of_lcd_Data 0734  
          main@position1 0075            main@position2 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 06FB               __pmaintext 074B  
              ?_lcd_Data 0070                  __ptext1 0720                  __ptext2 0794  
                __ptext3 0734               ??_lcd_Data 0070     end_of_initialization 07FC  
          ??_lcd_Command 0070      start_initialization 07ED      __end_of_lcd_Command 074B  
             init_fetch0 070D              __pdataBANK0 0020              __pbssCOMMON 0077  
              ___latbits 0002              _lcd_Command 0734                lcd_Data@i 0072  
               _lcd_Data 0720                 init_ram0 0711             lcd_Command@i 0072  
           ?_lcd_Command 0070  
