

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 12 15:14:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59     0000                     	;# 
    60     0001                     	;# 
    61     0002                     	;# 
    62     0003                     	;# 
    63     0004                     	;# 
    64     0005                     	;# 
    65     0006                     	;# 
    66     0007                     	;# 
    67     0008                     	;# 
    68     0009                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000D                     	;# 
    73     000E                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0015                     	;# 
    83     0016                     	;# 
    84     0017                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001B                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     0081                     	;# 
    95     0085                     	;# 
    96     0086                     	;# 
    97     0087                     	;# 
    98     0088                     	;# 
    99     0089                     	;# 
   100     008C                     	;# 
   101     008D                     	;# 
   102     008E                     	;# 
   103     0091                     	;# 
   104     0092                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009C                     	;# 
   110     009D                     	;# 
   111     009E                     	;# 
   112     009F                     	;# 
   113     010C                     	;# 
   114     010D                     	;# 
   115     010E                     	;# 
   116     010F                     	;# 
   117     018C                     	;# 
   118     018D                     	;# 
   119     0000                     	;# 
   120     0001                     	;# 
   121     0002                     	;# 
   122     0003                     	;# 
   123     0004                     	;# 
   124     0005                     	;# 
   125     0006                     	;# 
   126     0007                     	;# 
   127     0008                     	;# 
   128     0009                     	;# 
   129     000A                     	;# 
   130     000B                     	;# 
   131     000C                     	;# 
   132     000D                     	;# 
   133     000E                     	;# 
   134     000E                     	;# 
   135     000F                     	;# 
   136     0010                     	;# 
   137     0011                     	;# 
   138     0012                     	;# 
   139     0013                     	;# 
   140     0014                     	;# 
   141     0015                     	;# 
   142     0015                     	;# 
   143     0016                     	;# 
   144     0017                     	;# 
   145     0018                     	;# 
   146     0019                     	;# 
   147     001A                     	;# 
   148     001B                     	;# 
   149     001B                     	;# 
   150     001C                     	;# 
   151     001D                     	;# 
   152     001E                     	;# 
   153     001F                     	;# 
   154     0081                     	;# 
   155     0085                     	;# 
   156     0086                     	;# 
   157     0087                     	;# 
   158     0088                     	;# 
   159     0089                     	;# 
   160     008C                     	;# 
   161     008D                     	;# 
   162     008E                     	;# 
   163     0091                     	;# 
   164     0092                     	;# 
   165     0093                     	;# 
   166     0094                     	;# 
   167     0098                     	;# 
   168     0099                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     009F                     	;# 
   173     010C                     	;# 
   174     010D                     	;# 
   175     010E                     	;# 
   176     010F                     	;# 
   177     018C                     	;# 
   178     018D                     	;# 
   179                           
   180                           	psect	idataBANK0
   181     03B9                     __pidataBANK0:
   182                           
   183                           ;initializer for _msg_2
   184     03B9  3441               	retlw	65
   185     03BA  3444               	retlw	68
   186     03BB  3443               	retlw	67
   187     03BC  3420               	retlw	32
   188     03BD  3443               	retlw	67
   189     03BE  3441               	retlw	65
   190     03BF  344C               	retlw	76
   191     03C0  343A               	retlw	58
   192     03C1  3420               	retlw	32
   193                           
   194                           ;initializer for _msg_1
   195     03C2  3441               	retlw	65
   196     03C3  3444               	retlw	68
   197     03C4  3443               	retlw	67
   198     03C5  3420               	retlw	32
   199     03C6  3452               	retlw	82
   200     03C7  3441               	retlw	65
   201     03C8  3457               	retlw	87
   202     03C9  343A               	retlw	58
   203     03CA  3420               	retlw	32
   204     0008                     _PORTD	set	8
   205     0007                     _PORTC	set	7
   206     0012                     _T2CON	set	18
   207     0017                     _CCP1CON	set	23
   208     0015                     _CCPR1L	set	21
   209     001E                     _ADRESH	set	30
   210     001F                     _ADCON0	set	31
   211     009F                     _ADCON1	set	159
   212     0092                     _PR2	set	146
   213     0088                     _TRISD	set	136
   214     0087                     _TRISC	set	135
   215     0085                     _TRISA	set	133
   216     009E                     _ADRESL	set	158
   217                           
   218                           	psect	cinit
   219     07E6                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07E6                     __initialization:
   223                           
   224                           ; Initialize objects allocated to BANK0
   225     07E6  1383               	bcf	3,7	;select IRP bank0
   226     07E7  305E               	movlw	low (__pdataBANK0+18)
   227     07E8  00FD               	movwf	btemp+-1
   228     07E9  3003               	movlw	high __pidataBANK0
   229     07EA  00FE               	movwf	btemp
   230     07EB  30B9               	movlw	low __pidataBANK0
   231     07EC  00FF               	movwf	btemp+1
   232     07ED  304C               	movlw	low __pdataBANK0
   233     07EE  0084               	movwf	4
   234     07EF  120A  118A  23CF  120A  118A  	fcall	init_ram0
   235                           
   236                           ; Clear objects allocated to BANK0
   237     07F4  3020               	movlw	low __pbssBANK0
   238     07F5  0084               	movwf	4
   239     07F6  3036               	movlw	low (__pbssBANK0+22)
   240     07F7  120A  118A  23B1  120A  118A  	fcall	clear_ram0
   241     07FC                     end_of_initialization:	
   242                           ;End of C runtime variable initialization code
   243                           
   244     07FC                     __end_of__initialization:
   245     07FC  0183               	clrf	3
   246     07FD  120A  118A  2DB0   	ljmp	_main	;jump to C main() function
   247                           
   248                           	psect	bssBANK0
   249     0020                     __pbssBANK0:
   250     0020                     _volt:
   251     0020                     	ds	4
   252     0024                     _result:
   253     0024                     	ds	4
   254     0028                     _d2:
   255     0028                     	ds	2
   256     002A                     _d1:
   257     002A                     	ds	2
   258     002C                     _d4:
   259     002C                     	ds	2
   260     002E                     _d3:
   261     002E                     	ds	2
   262     0030                     _adc_high:
   263     0030                     	ds	2
   264     0032                     _adc_low:
   265     0032                     	ds	2
   266     0034                     _m:
   267     0034                     	ds	2
   268                           
   269                           	psect	dataBANK0
   270     004C                     __pdataBANK0:
   271     004C                     _msg_2:
   272     004C                     	ds	9
   273     0055                     _msg_1:
   274     0055                     	ds	9
   275                           
   276                           	psect	inittext
   277     03CB                     init_fetch0:	
   278                           ;	Called with low address in FSR and high address in W
   279                           
   280     03CB  087E               	movf	btemp,w
   281     03CC  008A               	movwf	10
   282     03CD  087F               	movf	btemp+1,w
   283     03CE  0082               	movwf	2
   284     03CF                     init_ram0:	
   285                           ;Called with:
   286                           ;	high address of idata address in btemp 
   287                           ;	low address of idata address in btemp+1 
   288                           ;	low address of data in FSR
   289                           ;	high address + 1 of data in btemp-1
   290                           
   291     03CF  120A  118A  23CB  120A  118A  	fcall	init_fetch0
   292     03D4  0080               	movwf	0
   293     03D5  0A84               	incf	4,f
   294     03D6  0804               	movf	4,w
   295     03D7  067D               	xorwf	btemp+-1,w
   296     03D8  1903               	btfsc	3,2
   297     03D9  3400               	retlw	0
   298     03DA  0AFF               	incf	btemp+1,f
   299     03DB  1903               	btfsc	3,2
   300     03DC  0AFE               	incf	btemp,f
   301     03DD  2BCF               	goto	init_ram0
   302                           
   303                           	psect	clrtext
   304     03B1                     clear_ram0:	
   305                           ;	Called with FSR containing the base address, and
   306                           ;	W with the last address+1
   307                           
   308     03B1  0064               	clrwdt	;clear the watchdog before getting into this loop
   309     03B2                     clrloop0:
   310     03B2  0180               	clrf	0	;clear RAM location pointed to by FSR
   311     03B3  0A84               	incf	4,f	;increment pointer
   312     03B4  0604               	xorwf	4,w	;XOR with final address
   313     03B5  1903               	btfsc	3,2	;have we reached the end yet?
   314     03B6  3400               	retlw	0	;all done for this memory range, return
   315     03B7  0604               	xorwf	4,w	;XOR again to restore value
   316     03B8  2BB2               	goto	clrloop0	;do the next byte
   317                           
   318                           	psect	cstackCOMMON
   319     0070                     __pcstackCOMMON:
   320     0070                     ?_lcd_init:
   321     0070                     ?_lcd_command:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_lcd_command:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_lcd_data:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ??_lcd_data:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ?___bmul:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?___wmul:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?___lmul:	
   343                           ; 2 bytes @ 0x0
   344                           
   345     0070                     ___bmul@multiplicand:	
   346                           ; 4 bytes @ 0x0
   347                           
   348     0070                     ___wmul@multiplier:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ___lmul@multiplier:	
   352                           ; 2 bytes @ 0x0
   353                           
   354                           
   355                           ; 4 bytes @ 0x0
   356     0070                     	ds	1
   357     0071                     ??___bmul:
   358     0071                     ___bmul@product:	
   359                           ; 1 bytes @ 0x1
   360                           
   361                           
   362                           ; 1 bytes @ 0x1
   363     0071                     	ds	1
   364     0072                     lcd_command@i:
   365     0072                     lcd_data@i:	
   366                           ; 1 bytes @ 0x2
   367                           
   368     0072                     ___bmul@multiplier:	
   369                           ; 1 bytes @ 0x2
   370                           
   371     0072                     ___wmul@multiplicand:	
   372                           ; 1 bytes @ 0x2
   373                           
   374                           
   375                           ; 2 bytes @ 0x2
   376     0072                     	ds	1
   377     0073                     ??_lcd_init:
   378                           
   379                           ; 1 bytes @ 0x3
   380     0073                     	ds	1
   381     0074                     ??___wmul:
   382     0074                     ___wmul@product:	
   383                           ; 1 bytes @ 0x4
   384                           
   385     0074                     ___lmul@multiplicand:	
   386                           ; 2 bytes @ 0x4
   387                           
   388                           
   389                           ; 4 bytes @ 0x4
   390     0074                     	ds	2
   391     0076                     ?___lwdiv:
   392     0076                     ___lwdiv@divisor:	
   393                           ; 2 bytes @ 0x6
   394                           
   395                           
   396                           ; 2 bytes @ 0x6
   397     0076                     	ds	2
   398     0078                     ??___lmul:
   399     0078                     ___lwdiv@dividend:	
   400                           ; 1 bytes @ 0x8
   401                           
   402                           
   403                           ; 2 bytes @ 0x8
   404     0078                     	ds	1
   405     0079                     ___lmul@product:
   406                           
   407                           ; 4 bytes @ 0x9
   408     0079                     	ds	1
   409     007A                     ??___lwdiv:
   410     007A                     ___lwdiv@quotient:	
   411                           ; 1 bytes @ 0xA
   412                           
   413                           
   414                           ; 2 bytes @ 0xA
   415     007A                     	ds	2
   416     007C                     ___lwdiv@counter:
   417                           
   418                           ; 1 bytes @ 0xC
   419     007C                     	ds	1
   420     007D                     ??___lldiv:
   421                           
   422                           ; 1 bytes @ 0xD
   423     007D                     	ds	1
   424                           
   425                           	psect	cstackBANK0
   426     0036                     __pcstackBANK0:
   427     0036                     ?_lcd_output:
   428     0036                     ?___lldiv:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0036                     lcd_output@i:	
   432                           ; 4 bytes @ 0x0
   433                           
   434     0036                     ___lldiv@divisor:	
   435                           ; 2 bytes @ 0x0
   436                           
   437                           
   438                           ; 4 bytes @ 0x0
   439     0036                     	ds	2
   440     0038                     ??_lcd_output:
   441                           
   442                           ; 1 bytes @ 0x2
   443     0038                     	ds	2
   444     003A                     ___lldiv@dividend:
   445                           
   446                           ; 4 bytes @ 0x4
   447     003A                     	ds	4
   448     003E                     lcd_output@m:
   449     003E                     ___lldiv@quotient:	
   450                           ; 2 bytes @ 0x8
   451                           
   452                           
   453                           ; 4 bytes @ 0x8
   454     003E                     	ds	4
   455     0042                     ___lldiv@counter:
   456                           
   457                           ; 1 bytes @ 0xC
   458     0042                     	ds	1
   459     0043                     ??_main:
   460                           
   461                           ; 1 bytes @ 0xD
   462     0043                     	ds	8
   463     004B                     main@i:
   464                           
   465                           ; 1 bytes @ 0x15
   466     004B                     	ds	1
   467                           
   468                           	psect	maintext
   469     05B0                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 26 in file "ADC_PWM_TASK.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  i               1   21[BANK0 ] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : B00/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   489 ;;      Params:         0       0       0       0       0
   490 ;;      Locals:         0       1       0       0       0
   491 ;;      Temps:          0       8       0       0       0
   492 ;;      Totals:         0       9       0       0       0
   493 ;;Total ram usage:        9 bytes
   494 ;; Hardware stack levels required when called: 2
   495 ;; This function calls:
   496 ;;		___lldiv
   497 ;;		___lmul
   498 ;;		_lcd_command
   499 ;;		_lcd_data
   500 ;;		_lcd_init
   501 ;;		_lcd_output
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507     05B0                     _main:	
   508                           ;psect for function _main
   509                           
   510     05B0                     l1067:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   513                           
   514                           
   515                           ;ADC_PWM_TASK.c: 27:     unsigned char i;;ADC_PWM_TASK.c: 29:     lcd_init();
   516     05B0  120A  118A  2535  120A  118A  	fcall	_lcd_init
   517                           
   518                           ;ADC_PWM_TASK.c: 31:     lcd_command(0x80);
   519     05B5  3080               	movlw	128
   520     05B6  120A  118A  2407  120A  118A  	fcall	_lcd_command
   521     05BB                     l1069:
   522                           
   523                           ;ADC_PWM_TASK.c: 32:     for (i = 0; i < 9; i++) {
   524     05BB  1283               	bcf	3,5	;RP0=0, select bank0
   525     05BC  1303               	bcf	3,6	;RP1=0, select bank0
   526     05BD  01CB               	clrf	main@i
   527     05BE                     l1075:
   528                           
   529                           ;ADC_PWM_TASK.c: 33:         lcd_data(msg_1[i]);
   530     05BE  084B               	movf	main@i,w
   531     05BF  3E55               	addlw	(low (_msg_1| 0))& (0+255)
   532     05C0  0084               	movwf	4
   533     05C1  1383               	bcf	3,7	;select IRP bank0
   534     05C2  0800               	movf	0,w
   535     05C3  120A  118A  23DE  120A  118A  	fcall	_lcd_data
   536     05C8                     l1077:
   537                           
   538                           ;ADC_PWM_TASK.c: 34:     }
   539     05C8  3001               	movlw	1
   540     05C9  00FF               	movwf	btemp+1
   541     05CA  087F               	movf	btemp+1,w
   542     05CB  1283               	bcf	3,5	;RP0=0, select bank0
   543     05CC  1303               	bcf	3,6	;RP1=0, select bank0
   544     05CD  07CB               	addwf	main@i,f
   545     05CE                     l1079:
   546     05CE  3009               	movlw	9
   547     05CF  024B               	subwf	main@i,w
   548     05D0  1C03               	skipc
   549     05D1  2DD3               	goto	u771
   550     05D2  2DD4               	goto	u770
   551     05D3                     u771:
   552     05D3  2DBE               	goto	l1075
   553     05D4                     u770:
   554     05D4                     l1081:
   555                           
   556                           ;ADC_PWM_TASK.c: 36:     lcd_command(0xC0);
   557     05D4  30C0               	movlw	192
   558     05D5  120A  118A  2407  120A  118A  	fcall	_lcd_command
   559     05DA                     l1083:
   560                           
   561                           ;ADC_PWM_TASK.c: 37:     for (i = 0; i < 9; i++) {
   562     05DA  1283               	bcf	3,5	;RP0=0, select bank0
   563     05DB  1303               	bcf	3,6	;RP1=0, select bank0
   564     05DC  01CB               	clrf	main@i
   565     05DD                     l1089:
   566                           
   567                           ;ADC_PWM_TASK.c: 38:         lcd_data(msg_2[i]);
   568     05DD  084B               	movf	main@i,w
   569     05DE  3E4C               	addlw	(low (_msg_2| 0))& (0+255)
   570     05DF  0084               	movwf	4
   571     05E0  1383               	bcf	3,7	;select IRP bank0
   572     05E1  0800               	movf	0,w
   573     05E2  120A  118A  23DE  120A  118A  	fcall	_lcd_data
   574     05E7                     l1091:
   575                           
   576                           ;ADC_PWM_TASK.c: 39:     }
   577     05E7  3001               	movlw	1
   578     05E8  00FF               	movwf	btemp+1
   579     05E9  087F               	movf	btemp+1,w
   580     05EA  1283               	bcf	3,5	;RP0=0, select bank0
   581     05EB  1303               	bcf	3,6	;RP1=0, select bank0
   582     05EC  07CB               	addwf	main@i,f
   583     05ED                     l1093:
   584     05ED  3009               	movlw	9
   585     05EE  024B               	subwf	main@i,w
   586     05EF  1C03               	skipc
   587     05F0  2DF2               	goto	u781
   588     05F1  2DF3               	goto	u780
   589     05F2                     u781:
   590     05F2  2DDD               	goto	l1089
   591     05F3                     u780:
   592     05F3                     l1095:
   593                           
   594                           ;ADC_PWM_TASK.c: 41:     lcd_command(0xCD);
   595     05F3  30CD               	movlw	205
   596     05F4  120A  118A  2407  120A  118A  	fcall	_lcd_command
   597                           
   598                           ;ADC_PWM_TASK.c: 42:     lcd_data(0x56);
   599     05F9  3056               	movlw	86
   600     05FA  120A  118A  23DE  120A  118A  	fcall	_lcd_data
   601     05FF                     l1097:
   602                           
   603                           ;ADC_PWM_TASK.c: 45:         ADCON0 = 0x81;
   604     05FF  3081               	movlw	129
   605     0600  1283               	bcf	3,5	;RP0=0, select bank0
   606     0601  1303               	bcf	3,6	;RP1=0, select bank0
   607     0602  009F               	movwf	31	;volatile
   608     0603                     l1099:
   609                           
   610                           ;ADC_PWM_TASK.c: 46:         ADCON0 |= 0x04;
   611     0603  151F               	bsf	31,2	;volatile
   612     0604                     l68:	
   613                           ;ADC_PWM_TASK.c: 47:         while (ADCON0 & 0x04);
   614                           
   615     0604  191F               	btfsc	31,2	;volatile
   616     0605  2E07               	goto	u791
   617     0606  2E08               	goto	u790
   618     0607                     u791:
   619     0607  2E04               	goto	l68
   620     0608                     u790:
   621     0608                     l1101:
   622                           
   623                           ;ADC_PWM_TASK.c: 49:         adc_high = ADRESH;
   624     0608  081E               	movf	30,w	;volatile
   625     0609  00C3               	movwf	??_main
   626     060A  01C4               	clrf	??_main+1
   627     060B  0843               	movf	??_main,w
   628     060C  00B0               	movwf	_adc_high
   629     060D  0844               	movf	??_main+1,w
   630     060E  00B1               	movwf	_adc_high+1
   631                           
   632                           ;ADC_PWM_TASK.c: 50:         adc_low = ADRESL;
   633     060F  1683               	bsf	3,5	;RP0=1, select bank1
   634     0610  1303               	bcf	3,6	;RP1=0, select bank1
   635     0611  081E               	movf	30,w	;volatile
   636     0612  1283               	bcf	3,5	;RP0=0, select bank0
   637     0613  1303               	bcf	3,6	;RP1=0, select bank0
   638     0614  00C3               	movwf	??_main
   639     0615  01C4               	clrf	??_main+1
   640     0616  0843               	movf	??_main,w
   641     0617  00B2               	movwf	_adc_low
   642     0618  0844               	movf	??_main+1,w
   643     0619  00B3               	movwf	_adc_low+1
   644     061A                     l1103:
   645                           
   646                           ;ADC_PWM_TASK.c: 51:         result = ((unsigned long) adc_high << 8) | ((unsigned long)
      +                           adc_low);
   647     061A  0832               	movf	_adc_low,w
   648     061B  00C3               	movwf	??_main
   649     061C  0833               	movf	_adc_low+1,w
   650     061D  00C4               	movwf	??_main+1
   651     061E  01C5               	clrf	??_main+2
   652     061F  01C6               	clrf	??_main+3
   653     0620  0830               	movf	_adc_high,w
   654     0621  00C7               	movwf	??_main+4
   655     0622  0831               	movf	_adc_high+1,w
   656     0623  00C8               	movwf	??_main+5
   657     0624  01C9               	clrf	??_main+6
   658     0625  01CA               	clrf	??_main+7
   659     0626  3008               	movlw	8
   660     0627                     u805:
   661     0627  1003               	clrc
   662     0628  0DC7               	rlf	??_main+4,f
   663     0629  0DC8               	rlf	??_main+5,f
   664     062A  0DC9               	rlf	??_main+6,f
   665     062B  0DCA               	rlf	??_main+7,f
   666     062C                     u800:
   667     062C  3EFF               	addlw	-1
   668     062D  1D03               	skipz
   669     062E  2E27               	goto	u805
   670     062F  0843               	movf	??_main,w
   671     0630  0447               	iorwf	??_main+4,w
   672     0631  00A4               	movwf	_result
   673     0632  0844               	movf	??_main+1,w
   674     0633  0448               	iorwf	??_main+5,w
   675     0634  00A5               	movwf	_result+1
   676     0635  0845               	movf	??_main+2,w
   677     0636  0449               	iorwf	??_main+6,w
   678     0637  00A6               	movwf	_result+2
   679     0638  0846               	movf	??_main+3,w
   680     0639  044A               	iorwf	??_main+7,w
   681     063A  00A7               	movwf	_result+3
   682     063B                     l1105:
   683                           
   684                           ;ADC_PWM_TASK.c: 53:         volt = (unsigned long) ((result * 338) / 1023);
   685     063B  3000               	movlw	0
   686     063C  00B9               	movwf	___lldiv@divisor+3
   687     063D  3000               	movlw	0
   688     063E  00B8               	movwf	___lldiv@divisor+2
   689     063F  3003               	movlw	3
   690     0640  00B7               	movwf	___lldiv@divisor+1
   691     0641  30FF               	movlw	255
   692     0642  00B6               	movwf	___lldiv@divisor
   693     0643  0827               	movf	_result+3,w
   694     0644  00F3               	movwf	___lmul@multiplier+3
   695     0645  0826               	movf	_result+2,w
   696     0646  00F2               	movwf	___lmul@multiplier+2
   697     0647  0825               	movf	_result+1,w
   698     0648  00F1               	movwf	___lmul@multiplier+1
   699     0649  0824               	movf	_result,w
   700     064A  00F0               	movwf	___lmul@multiplier
   701     064B  3000               	movlw	0
   702     064C  00F7               	movwf	___lmul@multiplicand+3
   703     064D  3000               	movlw	0
   704     064E  00F6               	movwf	___lmul@multiplicand+2
   705     064F  3001               	movlw	1
   706     0650  00F5               	movwf	___lmul@multiplicand+1
   707     0651  3052               	movlw	82
   708     0652  00F4               	movwf	___lmul@multiplicand
   709     0653  120A  118A  2487  120A  118A  	fcall	___lmul
   710     0658  0873               	movf	?___lmul+3,w
   711     0659  1283               	bcf	3,5	;RP0=0, select bank0
   712     065A  1303               	bcf	3,6	;RP1=0, select bank0
   713     065B  00BD               	movwf	___lldiv@dividend+3
   714     065C  0872               	movf	?___lmul+2,w
   715     065D  00BC               	movwf	___lldiv@dividend+2
   716     065E  0871               	movf	?___lmul+1,w
   717     065F  00BB               	movwf	___lldiv@dividend+1
   718     0660  0870               	movf	?___lmul,w
   719     0661  00BA               	movwf	___lldiv@dividend
   720     0662  120A  118A  24CD  120A  118A  	fcall	___lldiv
   721     0667  1283               	bcf	3,5	;RP0=0, select bank0
   722     0668  1303               	bcf	3,6	;RP1=0, select bank0
   723     0669  0839               	movf	?___lldiv+3,w
   724     066A  00A3               	movwf	_volt+3
   725     066B  0838               	movf	?___lldiv+2,w
   726     066C  00A2               	movwf	_volt+2
   727     066D  0837               	movf	?___lldiv+1,w
   728     066E  00A1               	movwf	_volt+1
   729     066F  0836               	movf	?___lldiv,w
   730     0670  00A0               	movwf	_volt
   731     0671                     l1107:
   732                           
   733                           ;ADC_PWM_TASK.c: 57:         lcd_command(0x89);
   734     0671  3089               	movlw	137
   735     0672  120A  118A  2407  120A  118A  	fcall	_lcd_command
   736     0677                     l1109:
   737                           
   738                           ;ADC_PWM_TASK.c: 58:         lcd_output(result);
   739     0677  1283               	bcf	3,5	;RP0=0, select bank0
   740     0678  1303               	bcf	3,6	;RP1=0, select bank0
   741     0679  0825               	movf	_result+1,w
   742     067A  00B7               	movwf	lcd_output@i+1
   743     067B  0824               	movf	_result,w
   744     067C  00B6               	movwf	lcd_output@i
   745     067D  120A  118A  26B9  120A  118A  	fcall	_lcd_output
   746     0682                     l1111:
   747                           
   748                           ;ADC_PWM_TASK.c: 60:         lcd_command(0xC9);
   749     0682  30C9               	movlw	201
   750     0683  120A  118A  2407  120A  118A  	fcall	_lcd_command
   751     0688                     l1113:
   752                           
   753                           ;ADC_PWM_TASK.c: 61:         lcd_output(volt);
   754     0688  1283               	bcf	3,5	;RP0=0, select bank0
   755     0689  1303               	bcf	3,6	;RP1=0, select bank0
   756     068A  0821               	movf	_volt+1,w
   757     068B  00B7               	movwf	lcd_output@i+1
   758     068C  0820               	movf	_volt,w
   759     068D  00B6               	movwf	lcd_output@i
   760     068E  120A  118A  26B9  120A  118A  	fcall	_lcd_output
   761     0693                     l1115:
   762                           
   763                           ;ADC_PWM_TASK.c: 62:         CCPR1L = volt >> 2;
   764     0693  1283               	bcf	3,5	;RP0=0, select bank0
   765     0694  1303               	bcf	3,6	;RP1=0, select bank0
   766     0695  0820               	movf	_volt,w
   767     0696  00C3               	movwf	??_main
   768     0697  0821               	movf	_volt+1,w
   769     0698  00C4               	movwf	??_main+1
   770     0699  0822               	movf	_volt+2,w
   771     069A  00C5               	movwf	??_main+2
   772     069B  0823               	movf	_volt+3,w
   773     069C  00C6               	movwf	??_main+3
   774     069D  3002               	movlw	2
   775     069E                     u815:
   776     069E  1003               	clrc
   777     069F  0CC6               	rrf	??_main+3,f
   778     06A0  0CC5               	rrf	??_main+2,f
   779     06A1  0CC4               	rrf	??_main+1,f
   780     06A2  0CC3               	rrf	??_main,f
   781     06A3                     u810:
   782     06A3  3EFF               	addlw	-1
   783     06A4  1D03               	skipz
   784     06A5  2E9E               	goto	u815
   785     06A6  0843               	movf	??_main,w
   786     06A7  0095               	movwf	21	;volatile
   787     06A8                     l1117:
   788                           
   789                           ;ADC_PWM_TASK.c: 64:         CCP1CON = (CCP1CON & 0xCF) | ((volt & 0x03) << 4);
   790     06A8  0820               	movf	_volt,w
   791     06A9  3903               	andlw	3
   792     06AA  00C3               	movwf	??_main
   793     06AB  3004               	movlw	4
   794     06AC                     u825:
   795     06AC  1003               	clrc
   796     06AD  0DC3               	rlf	??_main,f
   797     06AE  3EFF               	addlw	-1
   798     06AF  1D03               	skipz
   799     06B0  2EAC               	goto	u825
   800     06B1  0817               	movf	23,w	;volatile
   801     06B2  39CF               	andlw	207
   802     06B3  0443               	iorwf	??_main,w
   803     06B4  0097               	movwf	23	;volatile
   804     06B5  2DFF               	goto	l1097
   805     06B6  120A  118A  2800   	ljmp	start
   806     06B9                     __end_of_main:
   807                           
   808                           	psect	text1
   809     06B9                     __ptext1:	
   810 ;; *************** function _lcd_output *****************
   811 ;; Defined at:
   812 ;;		line 113 in file "ADC_PWM_TASK.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  i               2    0[BANK0 ] unsigned int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  m               2    8[BANK0 ] unsigned int 
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       2       0       0       0
   827 ;;      Locals:         0       2       0       0       0
   828 ;;      Temps:          0       6       0       0       0
   829 ;;      Totals:         0      10       0       0       0
   830 ;;Total ram usage:       10 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 1
   833 ;; This function calls:
   834 ;;		___bmul
   835 ;;		___lwdiv
   836 ;;		___wmul
   837 ;;		_lcd_data
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843     06B9                     _lcd_output:	
   844                           ;psect for function _lcd_output
   845                           
   846     06B9                     l981:	
   847                           ;incstack = 0
   848                           ; Regs used in _lcd_output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   849                           
   850                           
   851                           ;ADC_PWM_TASK.c: 114:     unsigned int m;;ADC_PWM_TASK.c: 115:     m = i;
   852     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   853     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   854     06BB  0837               	movf	lcd_output@i+1,w
   855     06BC  00BF               	movwf	lcd_output@m+1
   856     06BD  0836               	movf	lcd_output@i,w
   857     06BE  00BE               	movwf	lcd_output@m
   858     06BF                     l983:
   859                           
   860                           ;ADC_PWM_TASK.c: 116:     d4 = (unsigned char) (m / 1000);
   861     06BF  30E8               	movlw	232
   862     06C0  00F6               	movwf	___lwdiv@divisor
   863     06C1  3003               	movlw	3
   864     06C2  00F7               	movwf	___lwdiv@divisor+1
   865     06C3  083F               	movf	lcd_output@m+1,w
   866     06C4  00F9               	movwf	___lwdiv@dividend+1
   867     06C5  083E               	movf	lcd_output@m,w
   868     06C6  00F8               	movwf	___lwdiv@dividend
   869     06C7  120A  118A  2443  120A  118A  	fcall	___lwdiv
   870     06CC  0876               	movf	?___lwdiv,w
   871     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   872     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   873     06CF  00B8               	movwf	??_lcd_output
   874     06D0  01B9               	clrf	??_lcd_output+1
   875     06D1  0838               	movf	??_lcd_output,w
   876     06D2  00AC               	movwf	_d4
   877     06D3  0839               	movf	??_lcd_output+1,w
   878     06D4  00AD               	movwf	_d4+1
   879     06D5                     l985:
   880                           
   881                           ;ADC_PWM_TASK.c: 117:     d3 = (unsigned char) ((m - (d4 * 1000)) / 100);
   882     06D5  3064               	movlw	100
   883     06D6  00F6               	movwf	___lwdiv@divisor
   884     06D7  3000               	movlw	0
   885     06D8  00F7               	movwf	___lwdiv@divisor+1
   886     06D9  082D               	movf	_d4+1,w
   887     06DA  00F1               	movwf	___wmul@multiplier+1
   888     06DB  082C               	movf	_d4,w
   889     06DC  00F0               	movwf	___wmul@multiplier
   890     06DD  3018               	movlw	24
   891     06DE  00F2               	movwf	___wmul@multiplicand
   892     06DF  30FC               	movlw	252
   893     06E0  00F3               	movwf	___wmul@multiplicand+1
   894     06E1  120A  118A  241E  120A  118A  	fcall	___wmul
   895     06E6  1283               	bcf	3,5	;RP0=0, select bank0
   896     06E7  1303               	bcf	3,6	;RP1=0, select bank0
   897     06E8  083E               	movf	lcd_output@m,w
   898     06E9  0770               	addwf	?___wmul,w
   899     06EA  00F8               	movwf	___lwdiv@dividend
   900     06EB  083F               	movf	lcd_output@m+1,w
   901     06EC  1803               	skipnc
   902     06ED  0A3F               	incf	lcd_output@m+1,w
   903     06EE  0771               	addwf	?___wmul+1,w
   904     06EF  00F9               	movwf	___lwdiv@dividend+1
   905     06F0  120A  118A  2443  120A  118A  	fcall	___lwdiv
   906     06F5  0876               	movf	?___lwdiv,w
   907     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   908     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   909     06F8  00B8               	movwf	??_lcd_output
   910     06F9  01B9               	clrf	??_lcd_output+1
   911     06FA  0838               	movf	??_lcd_output,w
   912     06FB  00AE               	movwf	_d3
   913     06FC  0839               	movf	??_lcd_output+1,w
   914     06FD  00AF               	movwf	_d3+1
   915     06FE                     l987:
   916                           
   917                           ;ADC_PWM_TASK.c: 118:     d2 = (unsigned char) ((m - (d4 * 1000)-(d3 * 100)) / 10);
   918     06FE  300A               	movlw	10
   919     06FF  00F6               	movwf	___lwdiv@divisor
   920     0700  3000               	movlw	0
   921     0701  00F7               	movwf	___lwdiv@divisor+1
   922     0702  082D               	movf	_d4+1,w
   923     0703  00F1               	movwf	___wmul@multiplier+1
   924     0704  082C               	movf	_d4,w
   925     0705  00F0               	movwf	___wmul@multiplier
   926     0706  3018               	movlw	24
   927     0707  00F2               	movwf	___wmul@multiplicand
   928     0708  30FC               	movlw	252
   929     0709  00F3               	movwf	___wmul@multiplicand+1
   930     070A  120A  118A  241E  120A  118A  	fcall	___wmul
   931     070F  0870               	movf	?___wmul,w
   932     0710  1283               	bcf	3,5	;RP0=0, select bank0
   933     0711  1303               	bcf	3,6	;RP1=0, select bank0
   934     0712  00B8               	movwf	??_lcd_output
   935     0713  0871               	movf	?___wmul+1,w
   936     0714  00B9               	movwf	??_lcd_output+1
   937     0715  082F               	movf	_d3+1,w
   938     0716  00F1               	movwf	___wmul@multiplier+1
   939     0717  082E               	movf	_d3,w
   940     0718  00F0               	movwf	___wmul@multiplier
   941     0719  309C               	movlw	156
   942     071A  00F2               	movwf	___wmul@multiplicand
   943     071B  30FF               	movlw	255
   944     071C  00F3               	movwf	___wmul@multiplicand+1
   945     071D  120A  118A  241E  120A  118A  	fcall	___wmul
   946     0722  0870               	movf	?___wmul,w
   947     0723  1283               	bcf	3,5	;RP0=0, select bank0
   948     0724  1303               	bcf	3,6	;RP1=0, select bank0
   949     0725  0738               	addwf	??_lcd_output,w
   950     0726  00BA               	movwf	??_lcd_output+2
   951     0727  0871               	movf	?___wmul+1,w
   952     0728  1803               	skipnc
   953     0729  0A71               	incf	?___wmul+1,w
   954     072A  0739               	addwf	??_lcd_output+1,w
   955     072B  00BB               	movwf	??_lcd_output+3
   956     072C  083E               	movf	lcd_output@m,w
   957     072D  073A               	addwf	??_lcd_output+2,w
   958     072E  00F8               	movwf	___lwdiv@dividend
   959     072F  083F               	movf	lcd_output@m+1,w
   960     0730  1803               	skipnc
   961     0731  0A3F               	incf	lcd_output@m+1,w
   962     0732  073B               	addwf	??_lcd_output+3,w
   963     0733  00F9               	movwf	___lwdiv@dividend+1
   964     0734  120A  118A  2443  120A  118A  	fcall	___lwdiv
   965     0739  0876               	movf	?___lwdiv,w
   966     073A  1283               	bcf	3,5	;RP0=0, select bank0
   967     073B  1303               	bcf	3,6	;RP1=0, select bank0
   968     073C  00BC               	movwf	??_lcd_output+4
   969     073D  01BD               	clrf	??_lcd_output+5
   970     073E  083C               	movf	??_lcd_output+4,w
   971     073F  00A8               	movwf	_d2
   972     0740  083D               	movf	??_lcd_output+5,w
   973     0741  00A9               	movwf	_d2+1
   974     0742                     l989:
   975                           
   976                           ;ADC_PWM_TASK.c: 119:     d1 = (unsigned char) (m - (d4 * 1000)-(d3 * 100)-(d2 * 10));
   977     0742  3018               	movlw	24
   978     0743  00F0               	movwf	___bmul@multiplicand
   979     0744  082C               	movf	_d4,w
   980     0745  120A  118A  23F2  120A  118A  	fcall	___bmul
   981     074A  1283               	bcf	3,5	;RP0=0, select bank0
   982     074B  1303               	bcf	3,6	;RP1=0, select bank0
   983     074C  00B8               	movwf	??_lcd_output
   984     074D  309C               	movlw	156
   985     074E  00F0               	movwf	___bmul@multiplicand
   986     074F  082E               	movf	_d3,w
   987     0750  120A  118A  23F2  120A  118A  	fcall	___bmul
   988     0755  1283               	bcf	3,5	;RP0=0, select bank0
   989     0756  1303               	bcf	3,6	;RP1=0, select bank0
   990     0757  00B9               	movwf	??_lcd_output+1
   991     0758  30F6               	movlw	246
   992     0759  00F0               	movwf	___bmul@multiplicand
   993     075A  0828               	movf	_d2,w
   994     075B  120A  118A  23F2  120A  118A  	fcall	___bmul
   995     0760  1283               	bcf	3,5	;RP0=0, select bank0
   996     0761  1303               	bcf	3,6	;RP1=0, select bank0
   997     0762  0739               	addwf	??_lcd_output+1,w
   998     0763  0738               	addwf	??_lcd_output,w
   999     0764  073E               	addwf	lcd_output@m,w
  1000     0765  00BA               	movwf	??_lcd_output+2
  1001     0766  01BB               	clrf	??_lcd_output+3
  1002     0767  083A               	movf	??_lcd_output+2,w
  1003     0768  00AA               	movwf	_d1
  1004     0769  083B               	movf	??_lcd_output+3,w
  1005     076A  00AB               	movwf	_d1+1
  1006     076B                     l991:
  1007                           
  1008                           ;ADC_PWM_TASK.c: 121:     if (d4 > 0) {
  1009     076B  082C               	movf	_d4,w
  1010     076C  042D               	iorwf	_d4+1,w
  1011     076D  1903               	btfsc	3,2
  1012     076E  2F70               	goto	u551
  1013     076F  2F71               	goto	u550
  1014     0770                     u551:
  1015     0770  2F79               	goto	l995
  1016     0771                     u550:
  1017     0771                     l993:
  1018                           
  1019                           ;ADC_PWM_TASK.c: 122:         lcd_data(0x30 + d4);
  1020     0771  082C               	movf	_d4,w
  1021     0772  3E30               	addlw	48
  1022     0773  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1023                           
  1024                           ;ADC_PWM_TASK.c: 123:     } else {
  1025     0778  2F7F               	goto	l997
  1026     0779                     l995:
  1027                           
  1028                           ;ADC_PWM_TASK.c: 124:         lcd_data(0x20);
  1029     0779  3020               	movlw	32
  1030     077A  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1031     077F                     l997:
  1032                           
  1033                           ;ADC_PWM_TASK.c: 127:     if (d3 > 0 || d4 > 0) {
  1034     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1035     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1036     0781  082E               	movf	_d3,w
  1037     0782  042F               	iorwf	_d3+1,w
  1038     0783  1D03               	btfss	3,2
  1039     0784  2F86               	goto	u561
  1040     0785  2F87               	goto	u560
  1041     0786                     u561:
  1042     0786  2F8D               	goto	l1001
  1043     0787                     u560:
  1044     0787                     l999:
  1045     0787  082C               	movf	_d4,w
  1046     0788  042D               	iorwf	_d4+1,w
  1047     0789  1903               	btfsc	3,2
  1048     078A  2F8C               	goto	u571
  1049     078B  2F8D               	goto	u570
  1050     078C                     u571:
  1051     078C  2F95               	goto	l1003
  1052     078D                     u570:
  1053     078D                     l1001:
  1054                           
  1055                           ;ADC_PWM_TASK.c: 128:         lcd_data(0x30 + d3);
  1056     078D  082E               	movf	_d3,w
  1057     078E  3E30               	addlw	48
  1058     078F  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1059                           
  1060                           ;ADC_PWM_TASK.c: 129:     } else {
  1061     0794  2F9B               	goto	l1005
  1062     0795                     l1003:
  1063                           
  1064                           ;ADC_PWM_TASK.c: 130:         lcd_data(0x20);
  1065     0795  3020               	movlw	32
  1066     0796  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1067     079B                     l1005:
  1068                           
  1069                           ;ADC_PWM_TASK.c: 133:     if (d2 > 0 || d3 > 0 || d4 > 0) {
  1070     079B  1283               	bcf	3,5	;RP0=0, select bank0
  1071     079C  1303               	bcf	3,6	;RP1=0, select bank0
  1072     079D  0828               	movf	_d2,w
  1073     079E  0429               	iorwf	_d2+1,w
  1074     079F  1D03               	btfss	3,2
  1075     07A0  2FA2               	goto	u581
  1076     07A1  2FA3               	goto	u580
  1077     07A2                     u581:
  1078     07A2  2FAF               	goto	l1011
  1079     07A3                     u580:
  1080     07A3                     l1007:
  1081     07A3  082E               	movf	_d3,w
  1082     07A4  042F               	iorwf	_d3+1,w
  1083     07A5  1D03               	btfss	3,2
  1084     07A6  2FA8               	goto	u591
  1085     07A7  2FA9               	goto	u590
  1086     07A8                     u591:
  1087     07A8  2FAF               	goto	l1011
  1088     07A9                     u590:
  1089     07A9                     l1009:
  1090     07A9  082C               	movf	_d4,w
  1091     07AA  042D               	iorwf	_d4+1,w
  1092     07AB  1903               	btfsc	3,2
  1093     07AC  2FAE               	goto	u601
  1094     07AD  2FAF               	goto	u600
  1095     07AE                     u601:
  1096     07AE  2FB7               	goto	l1013
  1097     07AF                     u600:
  1098     07AF                     l1011:
  1099                           
  1100                           ;ADC_PWM_TASK.c: 134:         lcd_data(0x30 + d2);
  1101     07AF  0828               	movf	_d2,w
  1102     07B0  3E30               	addlw	48
  1103     07B1  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1104                           
  1105                           ;ADC_PWM_TASK.c: 135:     } else {
  1106     07B6  2FBD               	goto	l1015
  1107     07B7                     l1013:
  1108                           
  1109                           ;ADC_PWM_TASK.c: 136:         lcd_data(0x20);
  1110     07B7  3020               	movlw	32
  1111     07B8  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1112     07BD                     l1015:
  1113                           
  1114                           ;ADC_PWM_TASK.c: 139:     if (d4 > 0 || d3 > 0 || d2 > 0 || d1 > 0) {
  1115     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1116     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1117     07BF  082C               	movf	_d4,w
  1118     07C0  042D               	iorwf	_d4+1,w
  1119     07C1  1D03               	btfss	3,2
  1120     07C2  2FC4               	goto	u611
  1121     07C3  2FC5               	goto	u610
  1122     07C4                     u611:
  1123     07C4  2FD7               	goto	l1023
  1124     07C5                     u610:
  1125     07C5                     l1017:
  1126     07C5  082E               	movf	_d3,w
  1127     07C6  042F               	iorwf	_d3+1,w
  1128     07C7  1D03               	btfss	3,2
  1129     07C8  2FCA               	goto	u621
  1130     07C9  2FCB               	goto	u620
  1131     07CA                     u621:
  1132     07CA  2FD7               	goto	l1023
  1133     07CB                     u620:
  1134     07CB                     l1019:
  1135     07CB  0828               	movf	_d2,w
  1136     07CC  0429               	iorwf	_d2+1,w
  1137     07CD  1D03               	btfss	3,2
  1138     07CE  2FD0               	goto	u631
  1139     07CF  2FD1               	goto	u630
  1140     07D0                     u631:
  1141     07D0  2FD7               	goto	l1023
  1142     07D1                     u630:
  1143     07D1                     l1021:
  1144     07D1  082A               	movf	_d1,w
  1145     07D2  042B               	iorwf	_d1+1,w
  1146     07D3  1903               	btfsc	3,2
  1147     07D4  2FD6               	goto	u641
  1148     07D5  2FD7               	goto	u640
  1149     07D6                     u641:
  1150     07D6  2FDF               	goto	l1025
  1151     07D7                     u640:
  1152     07D7                     l1023:
  1153                           
  1154                           ;ADC_PWM_TASK.c: 140:         lcd_data(0x30 + d1);
  1155     07D7  082A               	movf	_d1,w
  1156     07D8  3E30               	addlw	48
  1157     07D9  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1158                           
  1159                           ;ADC_PWM_TASK.c: 141:     } else {
  1160     07DE  2FE5               	goto	l99
  1161     07DF                     l1025:
  1162                           
  1163                           ;ADC_PWM_TASK.c: 142:         lcd_data(0x20);
  1164     07DF  3020               	movlw	32
  1165     07E0  120A  118A  23DE  120A  118A  	fcall	_lcd_data
  1166     07E5                     l99:
  1167     07E5  0008               	return
  1168     07E6                     __end_of_lcd_output:
  1169                           
  1170                           	psect	text2
  1171     03DE                     __ptext2:	
  1172 ;; *************** function _lcd_data *****************
  1173 ;; Defined at:
  1174 ;;		line 105 in file "ADC_PWM_TASK.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  i               1    wreg     unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  i               1    2[COMMON] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, btemp+1
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         1       0       0       0       0
  1190 ;;      Temps:          2       0       0       0       0
  1191 ;;      Totals:         3       0       0       0       0
  1192 ;;Total ram usage:        3 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;;		_lcd_output
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202     03DE                     _lcd_data:	
  1203                           ;psect for function _lcd_data
  1204                           
  1205                           
  1206                           ;incstack = 0
  1207                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
  1208                           ;lcd_data@i stored from wreg
  1209     03DE  00F2               	movwf	lcd_data@i
  1210     03DF                     l889:
  1211                           
  1212                           ;ADC_PWM_TASK.c: 106:     PORTC |= (0x08);
  1213     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1214     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1215     03E1  1587               	bsf	7,3	;volatile
  1216     03E2                     l891:
  1217                           
  1218                           ;ADC_PWM_TASK.c: 107:     PORTD = i;
  1219     03E2  0872               	movf	lcd_data@i,w
  1220     03E3  0088               	movwf	8	;volatile
  1221     03E4                     l893:
  1222                           
  1223                           ;ADC_PWM_TASK.c: 108:     PORTC |= 0x01;
  1224     03E4  1407               	bsf	7,0	;volatile
  1225     03E5                     l895:
  1226                           
  1227                           ;ADC_PWM_TASK.c: 109:     PORTC &= ~0x01;
  1228     03E5  30FE               	movlw	254
  1229     03E6  00FF               	movwf	btemp+1
  1230     03E7  087F               	movf	btemp+1,w
  1231     03E8  0587               	andwf	7,f	;volatile
  1232     03E9                     l897:
  1233                           
  1234                           ;ADC_PWM_TASK.c: 110:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1235     03E9  30C3               	movlw	195
  1236     03EA  00F1               	movwf	??_lcd_data+1
  1237     03EB  30CD               	movlw	205
  1238     03EC  00F0               	movwf	??_lcd_data
  1239     03ED                     u837:
  1240     03ED  0BF0               	decfsz	??_lcd_data,f
  1241     03EE  2BED               	goto	u837
  1242     03EF  0BF1               	decfsz	??_lcd_data+1,f
  1243     03F0  2BED               	goto	u837
  1244     03F1                     l82:
  1245     03F1  0008               	return
  1246     03F2                     __end_of_lcd_data:
  1247                           
  1248                           	psect	text3
  1249     041E                     __ptext3:	
  1250 ;; *************** function ___wmul *****************
  1251 ;; Defined at:
  1252 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  multiplier      2    0[COMMON] unsigned int 
  1255 ;;  multiplicand    2    2[COMMON] unsigned int 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  product         2    4[COMMON] unsigned int 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2    0[COMMON] unsigned int 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         4       0       0       0       0
  1268 ;;      Locals:         2       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         6       0       0       0       0
  1271 ;;Total ram usage:        6 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_lcd_output
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280     041E                     ___wmul:	
  1281                           ;psect for function ___wmul
  1282                           
  1283     041E                     l899:	
  1284                           ;incstack = 0
  1285                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1286                           
  1287     041E  01F4               	clrf	___wmul@product
  1288     041F  01F5               	clrf	___wmul@product+1
  1289     0420                     l901:
  1290     0420  1C70               	btfss	___wmul@multiplier,0
  1291     0421  2C23               	goto	u421
  1292     0422  2C24               	goto	u420
  1293     0423                     u421:
  1294     0423  2C2A               	goto	l185
  1295     0424                     u420:
  1296     0424                     l903:
  1297     0424  0872               	movf	___wmul@multiplicand,w
  1298     0425  07F4               	addwf	___wmul@product,f
  1299     0426  1803               	skipnc
  1300     0427  0AF5               	incf	___wmul@product+1,f
  1301     0428  0873               	movf	___wmul@multiplicand+1,w
  1302     0429  07F5               	addwf	___wmul@product+1,f
  1303     042A                     l185:
  1304     042A  3001               	movlw	1
  1305     042B                     u435:
  1306     042B  1003               	clrc
  1307     042C  0DF2               	rlf	___wmul@multiplicand,f
  1308     042D  0DF3               	rlf	___wmul@multiplicand+1,f
  1309     042E  3EFF               	addlw	-1
  1310     042F  1D03               	skipz
  1311     0430  2C2B               	goto	u435
  1312     0431                     l905:
  1313     0431  3001               	movlw	1
  1314     0432                     u445:
  1315     0432  1003               	clrc
  1316     0433  0CF1               	rrf	___wmul@multiplier+1,f
  1317     0434  0CF0               	rrf	___wmul@multiplier,f
  1318     0435  3EFF               	addlw	-1
  1319     0436  1D03               	skipz
  1320     0437  2C32               	goto	u445
  1321     0438                     l907:
  1322     0438  0870               	movf	___wmul@multiplier,w
  1323     0439  0471               	iorwf	___wmul@multiplier+1,w
  1324     043A  1D03               	btfss	3,2
  1325     043B  2C3D               	goto	u451
  1326     043C  2C3E               	goto	u450
  1327     043D                     u451:
  1328     043D  2C20               	goto	l901
  1329     043E                     u450:
  1330     043E                     l909:
  1331     043E  0875               	movf	___wmul@product+1,w
  1332     043F  00F1               	movwf	?___wmul+1
  1333     0440  0874               	movf	___wmul@product,w
  1334     0441  00F0               	movwf	?___wmul
  1335     0442                     l187:
  1336     0442  0008               	return
  1337     0443                     __end_of___wmul:
  1338                           
  1339                           	psect	text4
  1340     0443                     __ptext4:	
  1341 ;; *************** function ___lwdiv *****************
  1342 ;; Defined at:
  1343 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  divisor         2    6[COMMON] unsigned int 
  1346 ;;  dividend        2    8[COMMON] unsigned int 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  quotient        2   10[COMMON] unsigned int 
  1349 ;;  counter         1   12[COMMON] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  2    6[COMMON] unsigned int 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0, btemp+1
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         4       0       0       0       0
  1360 ;;      Locals:         3       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         7       0       0       0       0
  1363 ;;Total ram usage:        7 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_lcd_output
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372     0443                     ___lwdiv:	
  1373                           ;psect for function ___lwdiv
  1374                           
  1375     0443                     l929:	
  1376                           ;incstack = 0
  1377                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1378                           
  1379     0443  01FA               	clrf	___lwdiv@quotient
  1380     0444  01FB               	clrf	___lwdiv@quotient+1
  1381     0445                     l931:
  1382     0445  0876               	movf	___lwdiv@divisor,w
  1383     0446  0477               	iorwf	___lwdiv@divisor+1,w
  1384     0447  1903               	btfsc	3,2
  1385     0448  2C4A               	goto	u481
  1386     0449  2C4B               	goto	u480
  1387     044A                     u481:
  1388     044A  2C82               	goto	l951
  1389     044B                     u480:
  1390     044B                     l933:
  1391     044B  01FC               	clrf	___lwdiv@counter
  1392     044C  0AFC               	incf	___lwdiv@counter,f
  1393     044D  2C59               	goto	l939
  1394     044E                     l935:
  1395     044E  3001               	movlw	1
  1396     044F                     u495:
  1397     044F  1003               	clrc
  1398     0450  0DF6               	rlf	___lwdiv@divisor,f
  1399     0451  0DF7               	rlf	___lwdiv@divisor+1,f
  1400     0452  3EFF               	addlw	-1
  1401     0453  1D03               	skipz
  1402     0454  2C4F               	goto	u495
  1403     0455                     l937:
  1404     0455  3001               	movlw	1
  1405     0456  00FF               	movwf	btemp+1
  1406     0457  087F               	movf	btemp+1,w
  1407     0458  07FC               	addwf	___lwdiv@counter,f
  1408     0459                     l939:
  1409     0459  1FF7               	btfss	___lwdiv@divisor+1,7
  1410     045A  2C5C               	goto	u501
  1411     045B  2C5D               	goto	u500
  1412     045C                     u501:
  1413     045C  2C4E               	goto	l935
  1414     045D                     u500:
  1415     045D                     l941:
  1416     045D  3001               	movlw	1
  1417     045E                     u515:
  1418     045E  1003               	clrc
  1419     045F  0DFA               	rlf	___lwdiv@quotient,f
  1420     0460  0DFB               	rlf	___lwdiv@quotient+1,f
  1421     0461  3EFF               	addlw	-1
  1422     0462  1D03               	skipz
  1423     0463  2C5E               	goto	u515
  1424     0464  0877               	movf	___lwdiv@divisor+1,w
  1425     0465  0279               	subwf	___lwdiv@dividend+1,w
  1426     0466  1D03               	skipz
  1427     0467  2C6A               	goto	u525
  1428     0468  0876               	movf	___lwdiv@divisor,w
  1429     0469  0278               	subwf	___lwdiv@dividend,w
  1430     046A                     u525:
  1431     046A  1C03               	skipc
  1432     046B  2C6D               	goto	u521
  1433     046C  2C6E               	goto	u520
  1434     046D                     u521:
  1435     046D  2C75               	goto	l947
  1436     046E                     u520:
  1437     046E                     l943:
  1438     046E  0876               	movf	___lwdiv@divisor,w
  1439     046F  02F8               	subwf	___lwdiv@dividend,f
  1440     0470  0877               	movf	___lwdiv@divisor+1,w
  1441     0471  1C03               	skipc
  1442     0472  03F9               	decf	___lwdiv@dividend+1,f
  1443     0473  02F9               	subwf	___lwdiv@dividend+1,f
  1444     0474                     l945:
  1445     0474  147A               	bsf	___lwdiv@quotient,0
  1446     0475                     l947:
  1447     0475  3001               	movlw	1
  1448     0476                     u535:
  1449     0476  1003               	clrc
  1450     0477  0CF7               	rrf	___lwdiv@divisor+1,f
  1451     0478  0CF6               	rrf	___lwdiv@divisor,f
  1452     0479  3EFF               	addlw	-1
  1453     047A  1D03               	skipz
  1454     047B  2C76               	goto	u535
  1455     047C                     l949:
  1456     047C  3001               	movlw	1
  1457     047D  02FC               	subwf	___lwdiv@counter,f
  1458     047E  1D03               	btfss	3,2
  1459     047F  2C81               	goto	u541
  1460     0480  2C82               	goto	u540
  1461     0481                     u541:
  1462     0481  2C5D               	goto	l941
  1463     0482                     u540:
  1464     0482                     l951:
  1465     0482  087B               	movf	___lwdiv@quotient+1,w
  1466     0483  00F7               	movwf	?___lwdiv+1
  1467     0484  087A               	movf	___lwdiv@quotient,w
  1468     0485  00F6               	movwf	?___lwdiv
  1469     0486                     l465:
  1470     0486  0008               	return
  1471     0487                     __end_of___lwdiv:
  1472                           
  1473                           	psect	text5
  1474     03F2                     __ptext5:	
  1475 ;; *************** function ___bmul *****************
  1476 ;; Defined at:
  1477 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  multiplier      1    wreg     unsigned char 
  1480 ;;  multiplicand    1    0[COMMON] unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  multiplier      1    2[COMMON] unsigned char 
  1483 ;;  product         1    1[COMMON] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      unsigned char 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, btemp+1
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         1       0       0       0       0
  1494 ;;      Locals:         2       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0
  1496 ;;      Totals:         3       0       0       0       0
  1497 ;;Total ram usage:        3 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_lcd_output
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506     03F2                     ___bmul:	
  1507                           ;psect for function ___bmul
  1508                           
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1512                           ;___bmul@multiplier stored from wreg
  1513     03F2  00F2               	movwf	___bmul@multiplier
  1514     03F3                     l913:
  1515     03F3  01F1               	clrf	___bmul@product
  1516     03F4                     l915:
  1517     03F4  1C72               	btfss	___bmul@multiplier,0
  1518     03F5  2BF7               	goto	u461
  1519     03F6  2BF8               	goto	u460
  1520     03F7                     u461:
  1521     03F7  2BFC               	goto	l919
  1522     03F8                     u460:
  1523     03F8                     l917:
  1524     03F8  0870               	movf	___bmul@multiplicand,w
  1525     03F9  00FF               	movwf	btemp+1
  1526     03FA  087F               	movf	btemp+1,w
  1527     03FB  07F1               	addwf	___bmul@product,f
  1528     03FC                     l919:
  1529     03FC  1003               	clrc
  1530     03FD  0DF0               	rlf	___bmul@multiplicand,f
  1531     03FE                     l921:
  1532     03FE  1003               	clrc
  1533     03FF  0CF2               	rrf	___bmul@multiplier,f
  1534     0400                     l923:
  1535     0400  0872               	movf	___bmul@multiplier,w
  1536     0401  1D03               	btfss	3,2
  1537     0402  2C04               	goto	u471
  1538     0403  2C05               	goto	u470
  1539     0404                     u471:
  1540     0404  2BF4               	goto	l915
  1541     0405                     u470:
  1542     0405                     l925:
  1543     0405  0871               	movf	___bmul@product,w
  1544     0406                     l211:
  1545     0406  0008               	return
  1546     0407                     __end_of___bmul:
  1547                           
  1548                           	psect	text6
  1549     0535                     __ptext6:	
  1550 ;; *************** function _lcd_init *****************
  1551 ;; Defined at:
  1552 ;;		line 69 in file "ADC_PWM_TASK.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          2       0       0       0       0
  1569 ;;      Totals:         2       0       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 1
  1573 ;; This function calls:
  1574 ;;		_lcd_command
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580     0535                     _lcd_init:	
  1581                           ;psect for function _lcd_init
  1582                           
  1583     0535                     l955:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1586                           
  1587                           
  1588                           ;ADC_PWM_TASK.c: 71:     TRISA = 0x01;
  1589     0535  3001               	movlw	1
  1590     0536  1683               	bsf	3,5	;RP0=1, select bank1
  1591     0537  1303               	bcf	3,6	;RP1=0, select bank1
  1592     0538  0085               	movwf	5	;volatile
  1593     0539                     l957:
  1594                           
  1595                           ;ADC_PWM_TASK.c: 72:     TRISC = 0x00;
  1596     0539  0187               	clrf	7	;volatile
  1597     053A                     l959:
  1598                           
  1599                           ;ADC_PWM_TASK.c: 73:     TRISD = 0x00;
  1600     053A  0188               	clrf	8	;volatile
  1601                           
  1602                           ;ADC_PWM_TASK.c: 74:     CCP1CON = 0x0F;
  1603     053B  300F               	movlw	15
  1604     053C  1283               	bcf	3,5	;RP0=0, select bank0
  1605     053D  1303               	bcf	3,6	;RP1=0, select bank0
  1606     053E  0097               	movwf	23	;volatile
  1607                           
  1608                           ;ADC_PWM_TASK.c: 75:     T2CON = 0x06;
  1609     053F  3006               	movlw	6
  1610     0540  0092               	movwf	18	;volatile
  1611                           
  1612                           ;ADC_PWM_TASK.c: 76:     PR2 = 0x5D;
  1613     0541  305D               	movlw	93
  1614     0542  1683               	bsf	3,5	;RP0=1, select bank1
  1615     0543  1303               	bcf	3,6	;RP1=0, select bank1
  1616     0544  0092               	movwf	18	;volatile
  1617                           
  1618                           ;ADC_PWM_TASK.c: 78:     ADCON0 = 0x81;
  1619     0545  3081               	movlw	129
  1620     0546  1283               	bcf	3,5	;RP0=0, select bank0
  1621     0547  1303               	bcf	3,6	;RP1=0, select bank0
  1622     0548  009F               	movwf	31	;volatile
  1623                           
  1624                           ;ADC_PWM_TASK.c: 79:     ADCON1 = 0x8E;
  1625     0549  308E               	movlw	142
  1626     054A  1683               	bsf	3,5	;RP0=1, select bank1
  1627     054B  1303               	bcf	3,6	;RP1=0, select bank1
  1628     054C  009F               	movwf	31	;volatile
  1629     054D                     l961:
  1630                           
  1631                           ;ADC_PWM_TASK.c: 81:     lcd_command(0x33);
  1632     054D  3033               	movlw	51
  1633     054E  120A  118A  2407  120A  118A  	fcall	_lcd_command
  1634     0553                     l963:
  1635                           
  1636                           ;ADC_PWM_TASK.c: 82:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1637     0553  30C3               	movlw	195
  1638     0554  00F4               	movwf	??_lcd_init+1
  1639     0555  30CD               	movlw	205
  1640     0556  00F3               	movwf	??_lcd_init
  1641     0557                     u847:
  1642     0557  0BF3               	decfsz	??_lcd_init,f
  1643     0558  2D57               	goto	u847
  1644     0559  0BF4               	decfsz	??_lcd_init+1,f
  1645     055A  2D57               	goto	u847
  1646                           
  1647                           ;ADC_PWM_TASK.c: 83:     lcd_command(0x32);
  1648     055B  3032               	movlw	50
  1649     055C  120A  118A  2407  120A  118A  	fcall	_lcd_command
  1650     0561                     l965:
  1651                           
  1652                           ;ADC_PWM_TASK.c: 84:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1653     0561  30C3               	movlw	195
  1654     0562  00F4               	movwf	??_lcd_init+1
  1655     0563  30CD               	movlw	205
  1656     0564  00F3               	movwf	??_lcd_init
  1657     0565                     u857:
  1658     0565  0BF3               	decfsz	??_lcd_init,f
  1659     0566  2D65               	goto	u857
  1660     0567  0BF4               	decfsz	??_lcd_init+1,f
  1661     0568  2D65               	goto	u857
  1662     0569                     l967:
  1663                           
  1664                           ;ADC_PWM_TASK.c: 85:     lcd_command(0x35);
  1665     0569  3035               	movlw	53
  1666     056A  120A  118A  2407  120A  118A  	fcall	_lcd_command
  1667                           
  1668                           ;ADC_PWM_TASK.c: 86:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1669     056F  30C3               	movlw	195
  1670     0570  00F4               	movwf	??_lcd_init+1
  1671     0571  30CD               	movlw	205
  1672     0572  00F3               	movwf	??_lcd_init
  1673     0573                     u867:
  1674     0573  0BF3               	decfsz	??_lcd_init,f
  1675     0574  2D73               	goto	u867
  1676     0575  0BF4               	decfsz	??_lcd_init+1,f
  1677     0576  2D73               	goto	u867
  1678     0577                     l969:
  1679                           
  1680                           ;ADC_PWM_TASK.c: 87:     lcd_command(0x38);
  1681     0577  3038               	movlw	56
  1682     0578  120A  118A  2407  120A  118A  	fcall	_lcd_command
  1683     057D                     l971:
  1684                           
  1685                           ;ADC_PWM_TASK.c: 88:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1686     057D  30C3               	movlw	195
  1687     057E  00F4               	movwf	??_lcd_init+1
  1688     057F  30CD               	movlw	205
  1689     0580  00F3               	movwf	??_lcd_init
  1690     0581                     u877:
  1691     0581  0BF3               	decfsz	??_lcd_init,f
  1692     0582  2D81               	goto	u877
  1693     0583  0BF4               	decfsz	??_lcd_init+1,f
  1694     0584  2D81               	goto	u877
  1695                           
  1696                           ;ADC_PWM_TASK.c: 89:     lcd_command(0x06);
  1697     0585  3006               	movlw	6
  1698     0586  120A  118A  2407  120A  118A  	fcall	_lcd_command
  1699     058B                     l973:
  1700                           
  1701                           ;ADC_PWM_TASK.c: 90:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1702     058B  30C3               	movlw	195
  1703     058C  00F4               	movwf	??_lcd_init+1
  1704     058D  30CD               	movlw	205
  1705     058E  00F3               	movwf	??_lcd_init
  1706     058F                     u887:
  1707     058F  0BF3               	decfsz	??_lcd_init,f
  1708     0590  2D8F               	goto	u887
  1709     0591  0BF4               	decfsz	??_lcd_init+1,f
  1710     0592  2D8F               	goto	u887
  1711     0593                     l975:
  1712                           
  1713                           ;ADC_PWM_TASK.c: 91:     lcd_command(0x0C);
  1714     0593  300C               	movlw	12
  1715     0594  120A  118A  2407  120A  118A  	fcall	_lcd_command
  1716                           
  1717                           ;ADC_PWM_TASK.c: 92:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1718     0599  30C3               	movlw	195
  1719     059A  00F4               	movwf	??_lcd_init+1
  1720     059B  30CD               	movlw	205
  1721     059C  00F3               	movwf	??_lcd_init
  1722     059D                     u897:
  1723     059D  0BF3               	decfsz	??_lcd_init,f
  1724     059E  2D9D               	goto	u897
  1725     059F  0BF4               	decfsz	??_lcd_init+1,f
  1726     05A0  2D9D               	goto	u897
  1727     05A1                     l977:
  1728                           
  1729                           ;ADC_PWM_TASK.c: 93:     lcd_command(0x01);
  1730     05A1  3001               	movlw	1
  1731     05A2  120A  118A  2407  120A  118A  	fcall	_lcd_command
  1732     05A7                     l979:
  1733                           
  1734                           ;ADC_PWM_TASK.c: 94:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1735     05A7  30C3               	movlw	195
  1736     05A8  00F4               	movwf	??_lcd_init+1
  1737     05A9  30CD               	movlw	205
  1738     05AA  00F3               	movwf	??_lcd_init
  1739     05AB                     u907:
  1740     05AB  0BF3               	decfsz	??_lcd_init,f
  1741     05AC  2DAB               	goto	u907
  1742     05AD  0BF4               	decfsz	??_lcd_init+1,f
  1743     05AE  2DAB               	goto	u907
  1744     05AF                     l76:
  1745     05AF  0008               	return
  1746     05B0                     __end_of_lcd_init:
  1747                           
  1748                           	psect	text7
  1749     0407                     __ptext7:	
  1750 ;; *************** function _lcd_command *****************
  1751 ;; Defined at:
  1752 ;;		line 97 in file "ADC_PWM_TASK.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  i               1    wreg     unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  i               1    2[COMMON] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, btemp+1
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       0       0       0
  1767 ;;      Locals:         1       0       0       0       0
  1768 ;;      Temps:          2       0       0       0       0
  1769 ;;      Totals:         3       0       0       0       0
  1770 ;;Total ram usage:        3 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;;		_lcd_init
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780     0407                     _lcd_command:	
  1781                           ;psect for function _lcd_command
  1782                           
  1783                           
  1784                           ;incstack = 0
  1785                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1]
  1786                           ;lcd_command@i stored from wreg
  1787     0407  00F2               	movwf	lcd_command@i
  1788     0408                     l881:
  1789                           
  1790                           ;ADC_PWM_TASK.c: 98:     PORTC &= ~(0x08);
  1791     0408  30F7               	movlw	247
  1792     0409  00FF               	movwf	btemp+1
  1793     040A  087F               	movf	btemp+1,w
  1794     040B  1283               	bcf	3,5	;RP0=0, select bank0
  1795     040C  1303               	bcf	3,6	;RP1=0, select bank0
  1796     040D  0587               	andwf	7,f	;volatile
  1797     040E                     l883:
  1798                           
  1799                           ;ADC_PWM_TASK.c: 99:     PORTD = i;
  1800     040E  0872               	movf	lcd_command@i,w
  1801     040F  0088               	movwf	8	;volatile
  1802     0410                     l885:
  1803                           
  1804                           ;ADC_PWM_TASK.c: 100:     PORTC |= 0x01;
  1805     0410  1407               	bsf	7,0	;volatile
  1806     0411                     l887:
  1807                           
  1808                           ;ADC_PWM_TASK.c: 101:     PORTC &= ~0x01;
  1809     0411  30FE               	movlw	254
  1810     0412  00FF               	movwf	btemp+1
  1811     0413  087F               	movf	btemp+1,w
  1812     0414  0587               	andwf	7,f	;volatile
  1813                           
  1814                           ;ADC_PWM_TASK.c: 102:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1815     0415  30C3               	movlw	195
  1816     0416  00F1               	movwf	??_lcd_command+1
  1817     0417  30CD               	movlw	205
  1818     0418  00F0               	movwf	??_lcd_command
  1819     0419                     u917:
  1820     0419  0BF0               	decfsz	??_lcd_command,f
  1821     041A  2C19               	goto	u917
  1822     041B  0BF1               	decfsz	??_lcd_command+1,f
  1823     041C  2C19               	goto	u917
  1824     041D                     l79:
  1825     041D  0008               	return
  1826     041E                     __end_of_lcd_command:
  1827                           
  1828                           	psect	text8
  1829     0487                     __ptext8:	
  1830 ;; *************** function ___lmul *****************
  1831 ;; Defined at:
  1832 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  multiplier      4    0[COMMON] unsigned long 
  1835 ;;  multiplicand    4    4[COMMON] unsigned long 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  product         4    9[COMMON] unsigned long 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  4    0[COMMON] unsigned long 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         8       0       0       0       0
  1848 ;;      Locals:         4       0       0       0       0
  1849 ;;      Temps:          1       0       0       0       0
  1850 ;;      Totals:        13       0       0       0       0
  1851 ;;Total ram usage:       13 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860     0487                     ___lmul:	
  1861                           ;psect for function ___lmul
  1862                           
  1863     0487                     l1027:	
  1864                           ;incstack = 0
  1865                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1866                           
  1867     0487  3000               	movlw	0
  1868     0488  00FC               	movwf	___lmul@product+3
  1869     0489  3000               	movlw	0
  1870     048A  00FB               	movwf	___lmul@product+2
  1871     048B  3000               	movlw	0
  1872     048C  00FA               	movwf	___lmul@product+1
  1873     048D  3000               	movlw	0
  1874     048E  00F9               	movwf	___lmul@product
  1875     048F                     l1029:
  1876     048F  1C70               	btfss	___lmul@multiplier,0
  1877     0490  2C92               	goto	u651
  1878     0491  2C93               	goto	u650
  1879     0492                     u651:
  1880     0492  2CAA               	goto	l1033
  1881     0493                     u650:
  1882     0493                     l1031:
  1883     0493  0874               	movf	___lmul@multiplicand,w
  1884     0494  07F9               	addwf	___lmul@product,f
  1885     0495  0875               	movf	___lmul@multiplicand+1,w
  1886     0496  1103               	clrz
  1887     0497  1803               	skipnc
  1888     0498  3E01               	addlw	1
  1889     0499  1903               	skipnz
  1890     049A  2C9C               	goto	u661
  1891     049B  07FA               	addwf	___lmul@product+1,f
  1892     049C                     u661:
  1893     049C  0876               	movf	___lmul@multiplicand+2,w
  1894     049D  1103               	clrz
  1895     049E  1803               	skipnc
  1896     049F  3E01               	addlw	1
  1897     04A0  1903               	skipnz
  1898     04A1  2CA3               	goto	u662
  1899     04A2  07FB               	addwf	___lmul@product+2,f
  1900     04A3                     u662:
  1901     04A3  0877               	movf	___lmul@multiplicand+3,w
  1902     04A4  1103               	clrz
  1903     04A5  1803               	skipnc
  1904     04A6  3E01               	addlw	1
  1905     04A7  1903               	skipnz
  1906     04A8  2CAA               	goto	u663
  1907     04A9  07FC               	addwf	___lmul@product+3,f
  1908     04AA                     u663:
  1909     04AA                     l1033:
  1910     04AA  3001               	movlw	1
  1911     04AB  00F8               	movwf	??___lmul
  1912     04AC                     u675:
  1913     04AC  1003               	clrc
  1914     04AD  0DF4               	rlf	___lmul@multiplicand,f
  1915     04AE  0DF5               	rlf	___lmul@multiplicand+1,f
  1916     04AF  0DF6               	rlf	___lmul@multiplicand+2,f
  1917     04B0  0DF7               	rlf	___lmul@multiplicand+3,f
  1918     04B1  0BF8               	decfsz	??___lmul,f
  1919     04B2  2CAC               	goto	u675
  1920     04B3                     l1035:
  1921     04B3  3001               	movlw	1
  1922     04B4                     u685:
  1923     04B4  1003               	clrc
  1924     04B5  0CF3               	rrf	___lmul@multiplier+3,f
  1925     04B6  0CF2               	rrf	___lmul@multiplier+2,f
  1926     04B7  0CF1               	rrf	___lmul@multiplier+1,f
  1927     04B8  0CF0               	rrf	___lmul@multiplier,f
  1928     04B9  3EFF               	addlw	-1
  1929     04BA  1D03               	skipz
  1930     04BB  2CB4               	goto	u685
  1931     04BC  0873               	movf	___lmul@multiplier+3,w
  1932     04BD  0472               	iorwf	___lmul@multiplier+2,w
  1933     04BE  0471               	iorwf	___lmul@multiplier+1,w
  1934     04BF  0470               	iorwf	___lmul@multiplier,w
  1935     04C0  1D03               	skipz
  1936     04C1  2CC3               	goto	u691
  1937     04C2  2CC4               	goto	u690
  1938     04C3                     u691:
  1939     04C3  2C8F               	goto	l1029
  1940     04C4                     u690:
  1941     04C4                     l1037:
  1942     04C4  087C               	movf	___lmul@product+3,w
  1943     04C5  00F3               	movwf	?___lmul+3
  1944     04C6  087B               	movf	___lmul@product+2,w
  1945     04C7  00F2               	movwf	?___lmul+2
  1946     04C8  087A               	movf	___lmul@product+1,w
  1947     04C9  00F1               	movwf	?___lmul+1
  1948     04CA  0879               	movf	___lmul@product,w
  1949     04CB  00F0               	movwf	?___lmul
  1950     04CC                     l199:
  1951     04CC  0008               	return
  1952     04CD                     __end_of___lmul:
  1953                           
  1954                           	psect	text9
  1955     04CD                     __ptext9:	
  1956 ;; *************** function ___lldiv *****************
  1957 ;; Defined at:
  1958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  divisor         4    0[BANK0 ] unsigned long 
  1961 ;;  dividend        4    4[BANK0 ] unsigned long 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  quotient        4    8[BANK0 ] unsigned long 
  1964 ;;  counter         1   12[BANK0 ] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  4    0[BANK0 ] unsigned long 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, btemp+1
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1974 ;;      Params:         0       8       0       0       0
  1975 ;;      Locals:         0       5       0       0       0
  1976 ;;      Temps:          1       0       0       0       0
  1977 ;;      Totals:         1      13       0       0       0
  1978 ;;Total ram usage:       14 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987     04CD                     ___lldiv:	
  1988                           ;psect for function ___lldiv
  1989                           
  1990     04CD                     l1041:	
  1991                           ;incstack = 0
  1992                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1993                           
  1994     04CD  3000               	movlw	0
  1995     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  1996     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  1997     04D0  00C1               	movwf	___lldiv@quotient+3
  1998     04D1  3000               	movlw	0
  1999     04D2  00C0               	movwf	___lldiv@quotient+2
  2000     04D3  3000               	movlw	0
  2001     04D4  00BF               	movwf	___lldiv@quotient+1
  2002     04D5  3000               	movlw	0
  2003     04D6  00BE               	movwf	___lldiv@quotient
  2004     04D7  0839               	movf	___lldiv@divisor+3,w
  2005     04D8  0438               	iorwf	___lldiv@divisor+2,w
  2006     04D9  0437               	iorwf	___lldiv@divisor+1,w
  2007     04DA  0436               	iorwf	___lldiv@divisor,w
  2008     04DB  1903               	skipnz
  2009     04DC  2CDE               	goto	u701
  2010     04DD  2CDF               	goto	u700
  2011     04DE                     u701:
  2012     04DE  2D2C               	goto	l1063
  2013     04DF                     u700:
  2014     04DF                     l1043:
  2015     04DF  01C2               	clrf	___lldiv@counter
  2016     04E0  0AC2               	incf	___lldiv@counter,f
  2017     04E1  2CEF               	goto	l1049
  2018     04E2                     l1045:
  2019     04E2  3001               	movlw	1
  2020     04E3  00FD               	movwf	??___lldiv
  2021     04E4                     u715:
  2022     04E4  1003               	clrc
  2023     04E5  0DB6               	rlf	___lldiv@divisor,f
  2024     04E6  0DB7               	rlf	___lldiv@divisor+1,f
  2025     04E7  0DB8               	rlf	___lldiv@divisor+2,f
  2026     04E8  0DB9               	rlf	___lldiv@divisor+3,f
  2027     04E9  0BFD               	decfsz	??___lldiv,f
  2028     04EA  2CE4               	goto	u715
  2029     04EB                     l1047:
  2030     04EB  3001               	movlw	1
  2031     04EC  00FF               	movwf	btemp+1
  2032     04ED  087F               	movf	btemp+1,w
  2033     04EE  07C2               	addwf	___lldiv@counter,f
  2034     04EF                     l1049:
  2035     04EF  1FB9               	btfss	___lldiv@divisor+3,7
  2036     04F0  2CF2               	goto	u721
  2037     04F1  2CF3               	goto	u720
  2038     04F2                     u721:
  2039     04F2  2CE2               	goto	l1045
  2040     04F3                     u720:
  2041     04F3                     l1051:
  2042     04F3  3001               	movlw	1
  2043     04F4  00FD               	movwf	??___lldiv
  2044     04F5                     u735:
  2045     04F5  1003               	clrc
  2046     04F6  0DBE               	rlf	___lldiv@quotient,f
  2047     04F7  0DBF               	rlf	___lldiv@quotient+1,f
  2048     04F8  0DC0               	rlf	___lldiv@quotient+2,f
  2049     04F9  0DC1               	rlf	___lldiv@quotient+3,f
  2050     04FA  0BFD               	decfsz	??___lldiv,f
  2051     04FB  2CF5               	goto	u735
  2052     04FC                     l1053:
  2053     04FC  0839               	movf	___lldiv@divisor+3,w
  2054     04FD  023D               	subwf	___lldiv@dividend+3,w
  2055     04FE  1D03               	skipz
  2056     04FF  2D0A               	goto	u745
  2057     0500  0838               	movf	___lldiv@divisor+2,w
  2058     0501  023C               	subwf	___lldiv@dividend+2,w
  2059     0502  1D03               	skipz
  2060     0503  2D0A               	goto	u745
  2061     0504  0837               	movf	___lldiv@divisor+1,w
  2062     0505  023B               	subwf	___lldiv@dividend+1,w
  2063     0506  1D03               	skipz
  2064     0507  2D0A               	goto	u745
  2065     0508  0836               	movf	___lldiv@divisor,w
  2066     0509  023A               	subwf	___lldiv@dividend,w
  2067     050A                     u745:
  2068     050A  1C03               	skipc
  2069     050B  2D0D               	goto	u741
  2070     050C  2D0E               	goto	u740
  2071     050D                     u741:
  2072     050D  2D1D               	goto	l1059
  2073     050E                     u740:
  2074     050E                     l1055:
  2075     050E  0836               	movf	___lldiv@divisor,w
  2076     050F  02BA               	subwf	___lldiv@dividend,f
  2077     0510  0837               	movf	___lldiv@divisor+1,w
  2078     0511  1C03               	skipc
  2079     0512  0F37               	incfsz	___lldiv@divisor+1,w
  2080     0513  02BB               	subwf	___lldiv@dividend+1,f
  2081     0514  0838               	movf	___lldiv@divisor+2,w
  2082     0515  1C03               	skipc
  2083     0516  0F38               	incfsz	___lldiv@divisor+2,w
  2084     0517  02BC               	subwf	___lldiv@dividend+2,f
  2085     0518  0839               	movf	___lldiv@divisor+3,w
  2086     0519  1C03               	skipc
  2087     051A  0F39               	incfsz	___lldiv@divisor+3,w
  2088     051B  02BD               	subwf	___lldiv@dividend+3,f
  2089     051C                     l1057:
  2090     051C  143E               	bsf	___lldiv@quotient,0
  2091     051D                     l1059:
  2092     051D  3001               	movlw	1
  2093     051E                     u755:
  2094     051E  1003               	clrc
  2095     051F  0CB9               	rrf	___lldiv@divisor+3,f
  2096     0520  0CB8               	rrf	___lldiv@divisor+2,f
  2097     0521  0CB7               	rrf	___lldiv@divisor+1,f
  2098     0522  0CB6               	rrf	___lldiv@divisor,f
  2099     0523  3EFF               	addlw	-1
  2100     0524  1D03               	skipz
  2101     0525  2D1E               	goto	u755
  2102     0526                     l1061:
  2103     0526  3001               	movlw	1
  2104     0527  02C2               	subwf	___lldiv@counter,f
  2105     0528  1D03               	btfss	3,2
  2106     0529  2D2B               	goto	u761
  2107     052A  2D2C               	goto	u760
  2108     052B                     u761:
  2109     052B  2CF3               	goto	l1051
  2110     052C                     u760:
  2111     052C                     l1063:
  2112     052C  0841               	movf	___lldiv@quotient+3,w
  2113     052D  00B9               	movwf	?___lldiv+3
  2114     052E  0840               	movf	___lldiv@quotient+2,w
  2115     052F  00B8               	movwf	?___lldiv+2
  2116     0530  083F               	movf	___lldiv@quotient+1,w
  2117     0531  00B7               	movwf	?___lldiv+1
  2118     0532  083E               	movf	___lldiv@quotient,w
  2119     0533  00B6               	movwf	?___lldiv
  2120     0534                     l221:
  2121     0534  0008               	return
  2122     0535                     __end_of___lldiv:
  2123     007E                     btemp	set	126	;btemp
  2124     007E                     wtemp0	set	126
  2125                           
  2126                           	psect	config
  2127                           
  2128                           ;Config register CONFIG @ 0x2007
  2129                           ;	Oscillator Selection bits
  2130                           ;	FOSC = EXTRC, RC oscillator
  2131                           ;	Watchdog Timer Enable bit
  2132                           ;	WDTE = OFF, WDT disabled
  2133                           ;	Power-up Timer Enable bit
  2134                           ;	PWRTE = OFF, PWRT disabled
  2135                           ;	Brown-out Reset Enable bit
  2136                           ;	BOREN = OFF, BOR disabled
  2137                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2138                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2139                           ;	Data EEPROM Memory Code Protection bit
  2140                           ;	CPD = OFF, Data EEPROM code protection off
  2141                           ;	Flash Program Memory Write Enable bits
  2142                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2143                           ;	In-Circuit Debugger Mode bit
  2144                           ;	DEBUG = 0x1, unprogrammed default
  2145                           ;	Flash Program Memory Code Protection bit
  2146                           ;	CP = OFF, Code protection off
  2147     2007                     	org	8199
  2148     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _lcd_output->___lwdiv
    ___lwdiv->___wmul
    _lcd_init->_lcd_command
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    2531
                                             13 BANK0      9     9      0
                            ___lldiv
                             ___lmul
                        _lcd_command
                           _lcd_data
                           _lcd_init
                         _lcd_output
 ---------------------------------------------------------------------------------
 (1) _lcd_output                                          10     8      2    1771
                                              0 BANK0     10     8      2
                             ___bmul
                            ___lwdiv
                             ___wmul
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _lcd_command
   _lcd_data
   _lcd_init
     _lcd_command
   _lcd_output
     ___bmul
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 12 15:14:34 2024

                      _m 0034                        pc 0002           ___bmul@product 0071  
                     l82 03F1                       l76 05AF                       l68 0604  
                     l79 041D                       l99 07E5                       _d1 002A  
                     _d2 0028                       _d3 002E                       _d4 002C  
                     fsr 0004      ___wmul@multiplicand 0072                      l211 0406  
                    l221 0534                      l185 042A                      l187 0442  
                    l199 04CC                      l465 0486                      l901 0420  
                    l903 0424                      l921 03FE                      l913 03F3  
                    l905 0431                      l923 0400                      l915 03F4  
                    l931 0445                      l907 0438                      l925 0405  
                    l917 03F8                      l941 045D                      l933 044B  
                    l909 043E                      l919 03FC                      l943 046E  
                    l935 044E                      l951 0482                      l881 0408  
                    l961 054D                      l945 0474                      l937 0455  
                    l929 0443                      l883 040E                      l971 057D  
                    l963 0553                      l955 0535                      l947 0475  
                    l939 0459                      l891 03E2                      l885 0410  
                    l973 058B                      l965 0561                      l957 0539  
                    l949 047C                      l893 03E4                      l981 06B9  
                    l887 0411                      l975 0593                      l967 0569  
                    l959 053A                      l895 03E5                      l991 076B  
                    l983 06BF                      l977 05A1                      l969 0577  
                    l897 03E9                      l889 03DF                      l993 0771  
                    l985 06D5                      l979 05A7                      l899 041E  
                    l995 0779                      l987 06FE                      l997 077F  
                    l989 0742                      l999 0787                      u500 045D  
                    u420 0424                      u501 045C                      u421 0423  
                    _PR2 0092                      u520 046E                      u600 07AF  
                    u521 046D                      u601 07AE                      u450 043E  
                    u610 07C5                      u515 045E                      u451 043D  
                    u435 042B                      u611 07C4                      u700 04DF  
                    u460 03F8                      u540 0482                      u620 07CB  
                    u701 04DE                      u461 03F7                      u541 0481  
                    u525 046A                      u445 0432                      u621 07CA  
                    u470 0405                      u630 07D1                      u550 0771  
                    u471 0404                      u535 0476                      u631 07D0  
                    u551 0770                      u720 04F3                      u480 044B  
                    u640 07D7                      u560 0787                      u800 062C  
                    u721 04F2                      u481 044A                      u641 07D6  
                    u561 0786                      u650 0493                      u570 078D  
                    u810 06A3                      u715 04E4                      u651 0492  
                    u571 078C                      u740 050E                      u580 07A3  
                    u741 050D                      u661 049C                      u581 07A2  
                    u805 0627                      u662 04A3                      u590 07A9  
                    u735 04F5                      u663 04AA                      u495 044F  
                    u591 07A8                      u815 069E                      u760 052C  
                    u761 052B                      u745 050A                      u825 06AC  
                    u690 04C4                      u770 05D4                      u755 051E  
                    u691 04C3                      u675 04AC                      u907 05AB  
                    u771 05D3                      u780 05F3                      u685 04B4  
                    u917 0419                      u837 03ED                      u781 05F2  
                    u790 0608                      u847 0557                      u791 0607  
                    u857 0565                      u867 0573                      u877 0581  
                    u887 058F                      u897 059D                      fsr0 0004  
                    indf 0000             lcd_command@i 0072                     l1001 078D  
                   l1011 07AF                     l1003 0795                     l1021 07D1  
                   l1013 07B7                     l1005 079B                     l1101 0608  
                   l1031 0493                     l1023 07D7                     l1015 07BD  
                   l1007 07A3                     l1111 0682                     l1103 061A  
                   l1041 04CD                     l1033 04AA                     l1025 07DF  
                   l1017 07C5                     l1009 07A9                     l1113 0688  
                   l1105 063B                     l1051 04F3                     l1043 04DF  
                   l1035 04B3                     l1027 0487                     l1019 07CB  
                   l1115 0693                     l1107 0671                     l1061 0526  
                   l1053 04FC                     l1045 04E2                     l1037 04C4  
                   l1029 048F                     l1117 06A8                     l1109 0677  
                   l1055 050E                     l1047 04EB                     l1063 052C  
                   l1057 051C                     l1049 04EF                     l1081 05D4  
                   l1059 051D                     l1091 05E7                     l1083 05DA  
                   l1075 05BE                     l1067 05B0                     l1093 05ED  
                   l1077 05C8                     l1069 05BB                     l1095 05F3  
                   l1079 05CE                     l1097 05FF                     l1089 05DD  
                   l1099 0603                     _main 05B0                     btemp 007E  
                   _volt 0020              lcd_output@i 0036              lcd_output@m 003E  
                   start 0000        ___bmul@multiplier 0072                    ?_main 0070  
        __end_of___lldiv 0535                    _T2CON 0012          __end_of___lwdiv 0487  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088      ___lmul@multiplicand 0074  
                  _msg_1 0055                    _msg_2 004C                    main@i 004B  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E6             __end_of_main 06B9                   ??_main 0043  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                   _CCPR1L 0015         __end_of_lcd_data 03F2  
       __end_of_lcd_init 05B0                   ___bmul 03F2                   ___lmul 0487  
                 ___wmul 041E                ??___lldiv 007D                ??___lwdiv 007A  
                 _result 0024  __end_of__initialization 07FC      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 03B9               __pbssBANK0 0020  
             __pmaintext 05B0                  ?___bmul 0070                  ?___lmul 0070  
                ?___wmul 0070                  _CCP1CON 0017           ___lmul@product 0079  
             _lcd_output 06B9                ?_lcd_data 0070                ?_lcd_init 0070  
                ___lldiv 04CD                  _adc_low 0032                  ___lwdiv 0443  
                __ptext1 06B9                  __ptext2 03DE                  __ptext3 041E  
                __ptext4 0443                  __ptext5 03F2                  __ptext6 0535  
                __ptext7 0407                  __ptext8 0487                  __ptext9 04CD  
             ??_lcd_data 0070                  clrloop0 03B2               ??_lcd_init 0073  
   end_of_initialization 07FC          ___lldiv@divisor 0036          ___lldiv@counter 0042  
            ?_lcd_output 0036            ??_lcd_command 0070           __end_of___bmul 0407  
         __end_of___lmul 04CD           __end_of___wmul 0443      start_initialization 07E6  
               ??___bmul 0071                 ??___lmul 0078                 ??___wmul 0074  
             init_fetch0 03CB      __end_of_lcd_command 041E              __pdataBANK0 004C  
              ___latbits 0002            __pcstackBANK0 0036         ___lwdiv@dividend 0078  
               ?___lldiv 0036                 ?___lwdiv 0076         ___lwdiv@quotient 007A  
         ___wmul@product 0074                clear_ram0 03B1              _lcd_command 0407  
              lcd_data@i 0072        ___wmul@multiplier 0070             ??_lcd_output 0038  
      ___lmul@multiplier 0070       __end_of_lcd_output 07E6                 _adc_high 0030  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007C                 _lcd_data 03DE  
               _lcd_init 0535                 init_ram0 03CF         ___lldiv@dividend 003A  
       ___lldiv@quotient 003E             ?_lcd_command 0070  
