

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 19:46:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169                           
   170                           	psect	nvBANK0
   171     002C                     __pnvBANK0:
   172     002C                     _pwmhigh90:
   173     002C                     	ds	1
   174     002D                     _pwmlow90:
   175     002D                     	ds	1
   176     002E                     _pwmhigh60:
   177     002E                     	ds	1
   178     002F                     _pwmlow60:
   179     002F                     	ds	1
   180     0030                     _pwmhigh20:
   181     0030                     	ds	1
   182     0031                     _pwmlow20:
   183     0031                     	ds	1
   184     001B                     _CCPR2L	set	27
   185     0012                     _T2CON	set	18
   186     001D                     _CCP2CON	set	29
   187     0092                     _PR2	set	146
   188     0087                     _TRISC	set	135
   189                           
   190                           	psect	cinit
   191     07FC                     start_initialization:	
   192                           ; #config settings
   193                           
   194     07FC                     __initialization:
   195     07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     07FC                     __end_of__initialization:
   199     07FC  0183               	clrf	3
   200     07FD  120A  118A  2E67   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	cstackCOMMON
   203     0070                     __pcstackCOMMON:
   204     0070                     ?_initiate:
   205     0070                     ?_pwm:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ??_pwm:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     ?___fltol:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0070                     ___fltol@f1:	
   218                           ; 4 bytes @ 0x0
   219                           
   220                           
   221                           ; 4 bytes @ 0x0
   222     0070                     	ds	4
   223     0074                     ??___fltol:
   224                           
   225                           ; 1 bytes @ 0x4
   226     0074                     	ds	4
   227     0078                     ___fltol@sign1:
   228                           
   229                           ; 1 bytes @ 0x8
   230     0078                     	ds	1
   231     0079                     ___fltol@exp1:
   232                           
   233                           ; 1 bytes @ 0x9
   234     0079                     	ds	1
   235     007A                     ??_initiate:
   236                           
   237                           ; 1 bytes @ 0xA
   238     007A                     	ds	2
   239     007C                     ??_main:
   240                           
   241                           	psect	cstackBANK0
   242     0020                     __pcstackBANK0:	
   243                           ; 1 bytes @ 0xC
   244                           
   245     0020                     initiate@dutyCycle20:
   246                           
   247                           ; 4 bytes @ 0x0
   248     0020                     	ds	4
   249     0024                     initiate@dutyCycle60:
   250                           
   251                           ; 4 bytes @ 0x4
   252     0024                     	ds	4
   253     0028                     initiate@dutyCycle90:
   254                           
   255                           ; 4 bytes @ 0x8
   256     0028                     	ds	4
   257                           
   258                           	psect	maintext
   259     0667                     __pmaintext:	
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 17 in file "PWM_TASK.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   274 ;; Tracked objects:
   275 ;;		On entry : B00/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   279 ;;      Params:         0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0
   281 ;;      Temps:          0       0       0       0       0
   282 ;;      Totals:         0       0       0       0       0
   283 ;;Total ram usage:        0 bytes
   284 ;; Hardware stack levels required when called: 2
   285 ;; This function calls:
   286 ;;		_initiate
   287 ;;		_pwm
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293     0667                     _main:	
   294                           ;psect for function _main
   295                           
   296     0667                     l734:	
   297                           ;incstack = 0
   298                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   299                           
   300                           
   301                           ;PWM_TASK.c: 18:     initiate();
   302     0667  120A  118A  272B  120A  118A  	fcall	_initiate
   303     066C                     l736:
   304                           
   305                           ;PWM_TASK.c: 20:         pwm();
   306     066C  120A  118A  2675  120A  118A  	fcall	_pwm
   307     0671  2E6C               	goto	l736
   308     0672  120A  118A  2800   	ljmp	start
   309     0675                     __end_of_main:
   310                           
   311                           	psect	text1
   312     0675                     __ptext1:	
   313 ;; *************** function _pwm *****************
   314 ;; Defined at:
   315 ;;		line 49 in file "PWM_TASK.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0
   331 ;;      Temps:          3       0       0       0       0
   332 ;;      Totals:         3       0       0       0       0
   333 ;;Total ram usage:        3 bytes
   334 ;; Hardware stack levels used: 1
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342     0675                     _pwm:	
   343                           ;psect for function _pwm
   344                           
   345     0675                     l720:	
   346                           ;incstack = 0
   347                           ; Regs used in _pwm: [wreg+status,2+status,0]
   348                           
   349                           
   350                           ;PWM_TASK.c: 51:     CCPR2L = pwmhigh20;
   351     0675  1283               	bcf	3,5	;RP0=0, select bank0
   352     0676  1303               	bcf	3,6	;RP1=0, select bank0
   353     0677  0830               	movf	_pwmhigh20,w
   354     0678  009B               	movwf	27	;volatile
   355     0679                     l722:
   356                           
   357                           ;PWM_TASK.c: 52:     CCP2CON = (CCP2CON & 0xCF) | pwmlow20;
   358     0679  081D               	movf	29,w	;volatile
   359     067A  39CF               	andlw	207
   360     067B  0431               	iorwf	_pwmlow20,w
   361     067C  009D               	movwf	29	;volatile
   362     067D                     l724:
   363                           
   364                           ;PWM_TASK.c: 53:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   365     067D  3017               	movlw	23
   366     067E  00F2               	movwf	??_pwm+2
   367     067F  30D5               	movlw	213
   368     0680  00F1               	movwf	??_pwm+1
   369     0681  3016               	movlw	22
   370     0682  00F0               	movwf	??_pwm
   371     0683                     u277:
   372     0683  0BF0               	decfsz	??_pwm,f
   373     0684  2E83               	goto	u277
   374     0685  0BF1               	decfsz	??_pwm+1,f
   375     0686  2E83               	goto	u277
   376     0687  0BF2               	decfsz	??_pwm+2,f
   377     0688  2E83               	goto	u277
   378     0689  0000               	nop
   379     068A                     l726:
   380                           
   381                           ;PWM_TASK.c: 56:     CCPR2L = pwmhigh60;
   382     068A  1283               	bcf	3,5	;RP0=0, select bank0
   383     068B  1303               	bcf	3,6	;RP1=0, select bank0
   384     068C  082E               	movf	_pwmhigh60,w
   385     068D  009B               	movwf	27	;volatile
   386     068E                     l728:
   387                           
   388                           ;PWM_TASK.c: 57:     CCP2CON = (CCP2CON & 0xCF) | pwmlow60;
   389     068E  081D               	movf	29,w	;volatile
   390     068F  39CF               	andlw	207
   391     0690  042F               	iorwf	_pwmlow60,w
   392     0691  009D               	movwf	29	;volatile
   393                           
   394                           ;PWM_TASK.c: 58:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   395     0692  3017               	movlw	23
   396     0693  00F2               	movwf	??_pwm+2
   397     0694  30D5               	movlw	213
   398     0695  00F1               	movwf	??_pwm+1
   399     0696  3016               	movlw	22
   400     0697  00F0               	movwf	??_pwm
   401     0698                     u287:
   402     0698  0BF0               	decfsz	??_pwm,f
   403     0699  2E98               	goto	u287
   404     069A  0BF1               	decfsz	??_pwm+1,f
   405     069B  2E98               	goto	u287
   406     069C  0BF2               	decfsz	??_pwm+2,f
   407     069D  2E98               	goto	u287
   408     069E  0000               	nop
   409                           
   410                           ;PWM_TASK.c: 61:     CCPR2L = pwmhigh90;
   411     069F  1283               	bcf	3,5	;RP0=0, select bank0
   412     06A0  1303               	bcf	3,6	;RP1=0, select bank0
   413     06A1  082C               	movf	_pwmhigh90,w
   414     06A2  009B               	movwf	27	;volatile
   415     06A3                     l730:
   416                           
   417                           ;PWM_TASK.c: 62:     CCP2CON = (CCP2CON & 0xCF) | pwmlow90;
   418     06A3  081D               	movf	29,w	;volatile
   419     06A4  39CF               	andlw	207
   420     06A5  042D               	iorwf	_pwmlow90,w
   421     06A6  009D               	movwf	29	;volatile
   422     06A7                     l732:
   423                           
   424                           ;PWM_TASK.c: 63:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   425     06A7  3017               	movlw	23
   426     06A8  00F2               	movwf	??_pwm+2
   427     06A9  30D5               	movlw	213
   428     06AA  00F1               	movwf	??_pwm+1
   429     06AB  3016               	movlw	22
   430     06AC  00F0               	movwf	??_pwm
   431     06AD                     u297:
   432     06AD  0BF0               	decfsz	??_pwm,f
   433     06AE  2EAD               	goto	u297
   434     06AF  0BF1               	decfsz	??_pwm+1,f
   435     06B0  2EAD               	goto	u297
   436     06B1  0BF2               	decfsz	??_pwm+2,f
   437     06B2  2EAD               	goto	u297
   438     06B3  0000               	nop
   439     06B4                     l42:
   440     06B4  0008               	return
   441     06B5                     __end_of_pwm:
   442                           
   443                           	psect	text2
   444     072B                     __ptext2:	
   445 ;; *************** function _initiate *****************
   446 ;; Defined at:
   447 ;;		line 24 in file "PWM_TASK.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;		None
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  dutyCycle90     4    8[BANK0 ] float 
   452 ;;  dutyCycle60     4    4[BANK0 ] float 
   453 ;;  dutyCycle20     4    0[BANK0 ] float 
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0      12       0       0       0
   465 ;;      Temps:          2       0       0       0       0
   466 ;;      Totals:         2      12       0       0       0
   467 ;;Total ram usage:       14 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 1
   470 ;; This function calls:
   471 ;;		___fltol
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477     072B                     _initiate:	
   478                           ;psect for function _initiate
   479                           
   480     072B                     l700:	
   481                           ;incstack = 0
   482                           ; Regs used in _initiate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   483                           
   484                           
   485                           ;PWM_TASK.c: 25:     TRISC = 0xFB;
   486     072B  30FB               	movlw	251
   487     072C  1683               	bsf	3,5	;RP0=1, select bank1
   488     072D  1303               	bcf	3,6	;RP1=0, select bank1
   489     072E  0087               	movwf	7	;volatile
   490                           
   491                           ;PWM_TASK.c: 26:     CCP2CON = 0x0F;
   492     072F  300F               	movlw	15
   493     0730  1283               	bcf	3,5	;RP0=0, select bank0
   494     0731  1303               	bcf	3,6	;RP1=0, select bank0
   495     0732  009D               	movwf	29	;volatile
   496                           
   497                           ;PWM_TASK.c: 27:     T2CON = 0x06;
   498     0733  3006               	movlw	6
   499     0734  0092               	movwf	18	;volatile
   500                           
   501                           ;PWM_TASK.c: 28:     PR2 = 45;
   502     0735  302D               	movlw	45
   503     0736  1683               	bsf	3,5	;RP0=1, select bank1
   504     0737  1303               	bcf	3,6	;RP1=0, select bank1
   505     0738  0092               	movwf	18	;volatile
   506                           
   507                           ;PWM_TASK.c: 31:     float dutyCycle20 = 36.8;
   508     0739  3042               	movlw	66
   509     073A  1283               	bcf	3,5	;RP0=0, select bank0
   510     073B  1303               	bcf	3,6	;RP1=0, select bank0
   511     073C  00A3               	movwf	initiate@dutyCycle20+3
   512     073D  3013               	movlw	19
   513     073E  00A2               	movwf	initiate@dutyCycle20+2
   514     073F  3033               	movlw	51
   515     0740  00A1               	movwf	initiate@dutyCycle20+1
   516     0741  3033               	movlw	51
   517     0742  00A0               	movwf	initiate@dutyCycle20
   518                           
   519                           ;PWM_TASK.c: 32:     float dutyCycle60 = 110.4;
   520     0743  3042               	movlw	66
   521     0744  00A7               	movwf	initiate@dutyCycle60+3
   522     0745  30DC               	movlw	220
   523     0746  00A6               	movwf	initiate@dutyCycle60+2
   524     0747  30CC               	movlw	204
   525     0748  00A5               	movwf	initiate@dutyCycle60+1
   526     0749  30CD               	movlw	205
   527     074A  00A4               	movwf	initiate@dutyCycle60
   528                           
   529                           ;PWM_TASK.c: 33:     float dutyCycle90 = 165.6;
   530     074B  3043               	movlw	67
   531     074C  00AB               	movwf	initiate@dutyCycle90+3
   532     074D  3025               	movlw	37
   533     074E  00AA               	movwf	initiate@dutyCycle90+2
   534     074F  3099               	movlw	153
   535     0750  00A9               	movwf	initiate@dutyCycle90+1
   536     0751  309A               	movlw	154
   537     0752  00A8               	movwf	initiate@dutyCycle90
   538     0753                     l702:
   539                           
   540                           ;PWM_TASK.c: 35:     pwmlow20 = ((unsigned int)(dutyCycle20) & 0x03);
   541     0753  0823               	movf	initiate@dutyCycle20+3,w
   542     0754  00F3               	movwf	___fltol@f1+3
   543     0755  0822               	movf	initiate@dutyCycle20+2,w
   544     0756  00F2               	movwf	___fltol@f1+2
   545     0757  0821               	movf	initiate@dutyCycle20+1,w
   546     0758  00F1               	movwf	___fltol@f1+1
   547     0759  0820               	movf	initiate@dutyCycle20,w
   548     075A  00F0               	movwf	___fltol@f1
   549     075B  120A  118A  26B5  120A  118A  	fcall	___fltol
   550     0760  0870               	movf	?___fltol,w
   551     0761  3903               	andlw	3
   552     0762  1283               	bcf	3,5	;RP0=0, select bank0
   553     0763  1303               	bcf	3,6	;RP1=0, select bank0
   554     0764  00B1               	movwf	_pwmlow20
   555     0765                     l704:
   556                           
   557                           ;PWM_TASK.c: 36:     pwmhigh20 = (unsigned int)(dutyCycle20) >> 2;
   558     0765  0823               	movf	initiate@dutyCycle20+3,w
   559     0766  00F3               	movwf	___fltol@f1+3
   560     0767  0822               	movf	initiate@dutyCycle20+2,w
   561     0768  00F2               	movwf	___fltol@f1+2
   562     0769  0821               	movf	initiate@dutyCycle20+1,w
   563     076A  00F1               	movwf	___fltol@f1+1
   564     076B  0820               	movf	initiate@dutyCycle20,w
   565     076C  00F0               	movwf	___fltol@f1
   566     076D  120A  118A  26B5  120A  118A  	fcall	___fltol
   567     0772  0871               	movf	?___fltol+1,w
   568     0773  00FB               	movwf	??_initiate+1
   569     0774  0870               	movf	?___fltol,w
   570     0775  00FA               	movwf	??_initiate
   571     0776  1003               	clrc
   572     0777  0CFB               	rrf	??_initiate+1,f
   573     0778  0CFA               	rrf	??_initiate,f
   574     0779  1003               	clrc
   575     077A  0CFB               	rrf	??_initiate+1,f
   576     077B  0CFA               	rrf	??_initiate,f
   577     077C  087A               	movf	??_initiate,w
   578     077D  1283               	bcf	3,5	;RP0=0, select bank0
   579     077E  1303               	bcf	3,6	;RP1=0, select bank0
   580     077F  00B0               	movwf	_pwmhigh20
   581     0780                     l706:
   582                           
   583                           ;PWM_TASK.c: 38:     pwmlow60 = ((unsigned int)(dutyCycle60) & 0x03);
   584     0780  0827               	movf	initiate@dutyCycle60+3,w
   585     0781  00F3               	movwf	___fltol@f1+3
   586     0782  0826               	movf	initiate@dutyCycle60+2,w
   587     0783  00F2               	movwf	___fltol@f1+2
   588     0784  0825               	movf	initiate@dutyCycle60+1,w
   589     0785  00F1               	movwf	___fltol@f1+1
   590     0786  0824               	movf	initiate@dutyCycle60,w
   591     0787  00F0               	movwf	___fltol@f1
   592     0788  120A  118A  26B5  120A  118A  	fcall	___fltol
   593     078D  0870               	movf	?___fltol,w
   594     078E  3903               	andlw	3
   595     078F  1283               	bcf	3,5	;RP0=0, select bank0
   596     0790  1303               	bcf	3,6	;RP1=0, select bank0
   597     0791  00AF               	movwf	_pwmlow60
   598     0792                     l708:
   599                           
   600                           ;PWM_TASK.c: 39:     pwmhigh60 = (unsigned int)(dutyCycle60) >> 2;
   601     0792  0827               	movf	initiate@dutyCycle60+3,w
   602     0793  00F3               	movwf	___fltol@f1+3
   603     0794  0826               	movf	initiate@dutyCycle60+2,w
   604     0795  00F2               	movwf	___fltol@f1+2
   605     0796  0825               	movf	initiate@dutyCycle60+1,w
   606     0797  00F1               	movwf	___fltol@f1+1
   607     0798  0824               	movf	initiate@dutyCycle60,w
   608     0799  00F0               	movwf	___fltol@f1
   609     079A  120A  118A  26B5  120A  118A  	fcall	___fltol
   610     079F  0871               	movf	?___fltol+1,w
   611     07A0  00FB               	movwf	??_initiate+1
   612     07A1  0870               	movf	?___fltol,w
   613     07A2  00FA               	movwf	??_initiate
   614     07A3  1003               	clrc
   615     07A4  0CFB               	rrf	??_initiate+1,f
   616     07A5  0CFA               	rrf	??_initiate,f
   617     07A6  1003               	clrc
   618     07A7  0CFB               	rrf	??_initiate+1,f
   619     07A8  0CFA               	rrf	??_initiate,f
   620     07A9  087A               	movf	??_initiate,w
   621     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   622     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   623     07AC  00AE               	movwf	_pwmhigh60
   624     07AD                     l710:
   625                           
   626                           ;PWM_TASK.c: 41:     pwmlow90 = ((unsigned int)(dutyCycle90) & 0x03);
   627     07AD  082B               	movf	initiate@dutyCycle90+3,w
   628     07AE  00F3               	movwf	___fltol@f1+3
   629     07AF  082A               	movf	initiate@dutyCycle90+2,w
   630     07B0  00F2               	movwf	___fltol@f1+2
   631     07B1  0829               	movf	initiate@dutyCycle90+1,w
   632     07B2  00F1               	movwf	___fltol@f1+1
   633     07B3  0828               	movf	initiate@dutyCycle90,w
   634     07B4  00F0               	movwf	___fltol@f1
   635     07B5  120A  118A  26B5  120A  118A  	fcall	___fltol
   636     07BA  0870               	movf	?___fltol,w
   637     07BB  3903               	andlw	3
   638     07BC  1283               	bcf	3,5	;RP0=0, select bank0
   639     07BD  1303               	bcf	3,6	;RP1=0, select bank0
   640     07BE  00AD               	movwf	_pwmlow90
   641     07BF                     l712:
   642                           
   643                           ;PWM_TASK.c: 42:     pwmhigh90 = (unsigned int)(dutyCycle90) >> 2;
   644     07BF  082B               	movf	initiate@dutyCycle90+3,w
   645     07C0  00F3               	movwf	___fltol@f1+3
   646     07C1  082A               	movf	initiate@dutyCycle90+2,w
   647     07C2  00F2               	movwf	___fltol@f1+2
   648     07C3  0829               	movf	initiate@dutyCycle90+1,w
   649     07C4  00F1               	movwf	___fltol@f1+1
   650     07C5  0828               	movf	initiate@dutyCycle90,w
   651     07C6  00F0               	movwf	___fltol@f1
   652     07C7  120A  118A  26B5  120A  118A  	fcall	___fltol
   653     07CC  0871               	movf	?___fltol+1,w
   654     07CD  00FB               	movwf	??_initiate+1
   655     07CE  0870               	movf	?___fltol,w
   656     07CF  00FA               	movwf	??_initiate
   657     07D0  1003               	clrc
   658     07D1  0CFB               	rrf	??_initiate+1,f
   659     07D2  0CFA               	rrf	??_initiate,f
   660     07D3  1003               	clrc
   661     07D4  0CFB               	rrf	??_initiate+1,f
   662     07D5  0CFA               	rrf	??_initiate,f
   663     07D6  087A               	movf	??_initiate,w
   664     07D7  1283               	bcf	3,5	;RP0=0, select bank0
   665     07D8  1303               	bcf	3,6	;RP1=0, select bank0
   666     07D9  00AC               	movwf	_pwmhigh90
   667     07DA                     l714:
   668                           
   669                           ;PWM_TASK.c: 44:     pwmlow20 = (pwmlow20 << 4);
   670     07DA  0831               	movf	_pwmlow20,w
   671     07DB  00FA               	movwf	??_initiate
   672     07DC  3003               	movlw	3
   673     07DD                     u245:
   674     07DD  1003               	clrc
   675     07DE  0DFA               	rlf	??_initiate,f
   676     07DF  3EFF               	addlw	-1
   677     07E0  1D03               	skipz
   678     07E1  2FDD               	goto	u245
   679     07E2  1003               	clrc
   680     07E3  0D7A               	rlf	??_initiate,w
   681     07E4  00B1               	movwf	_pwmlow20
   682     07E5                     l716:
   683                           
   684                           ;PWM_TASK.c: 45:     pwmlow60 = (pwmlow60 << 4);
   685     07E5  082F               	movf	_pwmlow60,w
   686     07E6  00FA               	movwf	??_initiate
   687     07E7  3003               	movlw	3
   688     07E8                     u255:
   689     07E8  1003               	clrc
   690     07E9  0DFA               	rlf	??_initiate,f
   691     07EA  3EFF               	addlw	-1
   692     07EB  1D03               	skipz
   693     07EC  2FE8               	goto	u255
   694     07ED  1003               	clrc
   695     07EE  0D7A               	rlf	??_initiate,w
   696     07EF  00AF               	movwf	_pwmlow60
   697     07F0                     l718:
   698                           
   699                           ;PWM_TASK.c: 46:     pwmlow90 = (pwmlow90 << 4);
   700     07F0  082D               	movf	_pwmlow90,w
   701     07F1  00FA               	movwf	??_initiate
   702     07F2  3003               	movlw	3
   703     07F3                     u265:
   704     07F3  1003               	clrc
   705     07F4  0DFA               	rlf	??_initiate,f
   706     07F5  3EFF               	addlw	-1
   707     07F6  1D03               	skipz
   708     07F7  2FF3               	goto	u265
   709     07F8  1003               	clrc
   710     07F9  0D7A               	rlf	??_initiate,w
   711     07FA  00AD               	movwf	_pwmlow90
   712     07FB                     l39:
   713     07FB  0008               	return
   714     07FC                     __end_of_initiate:
   715                           
   716                           	psect	text3
   717     06B5                     __ptext3:	
   718 ;; *************** function ___fltol *****************
   719 ;; Defined at:
   720 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  f1              4    0[COMMON] void 
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  exp1            1    9[COMMON] unsigned char 
   725 ;;  sign1           1    8[COMMON] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  4    0[COMMON] long 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, btemp+1
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         4       0       0       0       0
   736 ;;      Locals:         2       0       0       0       0
   737 ;;      Temps:          4       0       0       0       0
   738 ;;      Totals:        10       0       0       0       0
   739 ;;Total ram usage:       10 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_initiate
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748     06B5                     ___fltol:	
   749                           ;psect for function ___fltol
   750                           
   751     06B5                     l662:	
   752                           ;incstack = 0
   753                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
   754                           
   755     06B5  1003               	clrc
   756     06B6  0D72               	rlf	___fltol@f1+2,w
   757     06B7  0D73               	rlf	___fltol@f1+3,w
   758     06B8  00F9               	movwf	___fltol@exp1
   759     06B9  0879               	movf	___fltol@exp1,w
   760     06BA  1D03               	btfss	3,2
   761     06BB  2EBD               	goto	u141
   762     06BC  2EBE               	goto	u140
   763     06BD                     u141:
   764     06BD  2EC7               	goto	l668
   765     06BE                     u140:
   766     06BE                     l664:
   767     06BE  3000               	movlw	0
   768     06BF  00F3               	movwf	?___fltol+3
   769     06C0  3000               	movlw	0
   770     06C1  00F2               	movwf	?___fltol+2
   771     06C2  3000               	movlw	0
   772     06C3  00F1               	movwf	?___fltol+1
   773     06C4  3000               	movlw	0
   774     06C5  00F0               	movwf	?___fltol
   775     06C6  2F2A               	goto	l322
   776     06C7                     l668:
   777     06C7  0870               	movf	___fltol@f1,w
   778     06C8  00F4               	movwf	??___fltol
   779     06C9  0871               	movf	___fltol@f1+1,w
   780     06CA  00F5               	movwf	??___fltol+1
   781     06CB  0872               	movf	___fltol@f1+2,w
   782     06CC  00F6               	movwf	??___fltol+2
   783     06CD  0873               	movf	___fltol@f1+3,w
   784     06CE  00F7               	movwf	??___fltol+3
   785     06CF  301F               	movlw	31
   786     06D0                     u155:
   787     06D0  1003               	clrc
   788     06D1  0CF7               	rrf	??___fltol+3,f
   789     06D2  0CF6               	rrf	??___fltol+2,f
   790     06D3  0CF5               	rrf	??___fltol+1,f
   791     06D4  0CF4               	rrf	??___fltol,f
   792     06D5                     u150:
   793     06D5  3EFF               	addlw	-1
   794     06D6  1D03               	skipz
   795     06D7  2ED0               	goto	u155
   796     06D8  0874               	movf	??___fltol,w
   797     06D9  00F8               	movwf	___fltol@sign1
   798     06DA                     l670:
   799     06DA  17F2               	bsf	___fltol@f1+2,7
   800     06DB                     l672:
   801     06DB  30FF               	movlw	255
   802     06DC  05F0               	andwf	___fltol@f1,f
   803     06DD  30FF               	movlw	255
   804     06DE  05F1               	andwf	___fltol@f1+1,f
   805     06DF  30FF               	movlw	255
   806     06E0  05F2               	andwf	___fltol@f1+2,f
   807     06E1  3000               	movlw	0
   808     06E2  05F3               	andwf	___fltol@f1+3,f
   809     06E3                     l674:
   810     06E3  3096               	movlw	150
   811     06E4  02F9               	subwf	___fltol@exp1,f
   812     06E5                     l676:
   813     06E5  1FF9               	btfss	___fltol@exp1,7
   814     06E6  2EE8               	goto	u161
   815     06E7  2EE9               	goto	u160
   816     06E8                     u161:
   817     06E8  2F03               	goto	l688
   818     06E9                     u160:
   819     06E9                     l678:
   820     06E9  0879               	movf	___fltol@exp1,w
   821     06EA  3A80               	xorlw	128
   822     06EB  3E97               	addlw	151
   823     06EC  1803               	skipnc
   824     06ED  2EEF               	goto	u171
   825     06EE  2EF0               	goto	u170
   826     06EF                     u171:
   827     06EF  2EF1               	goto	l684
   828     06F0                     u170:
   829     06F0  2EBE               	goto	l664
   830     06F1                     l684:
   831     06F1  3001               	movlw	1
   832     06F2                     u185:
   833     06F2  1003               	clrc
   834     06F3  0CF3               	rrf	___fltol@f1+3,f
   835     06F4  0CF2               	rrf	___fltol@f1+2,f
   836     06F5  0CF1               	rrf	___fltol@f1+1,f
   837     06F6  0CF0               	rrf	___fltol@f1,f
   838     06F7  3EFF               	addlw	-1
   839     06F8  1D03               	skipz
   840     06F9  2EF2               	goto	u185
   841     06FA                     l686:
   842     06FA  3001               	movlw	1
   843     06FB  00FF               	movwf	btemp+1
   844     06FC  087F               	movf	btemp+1,w
   845     06FD  07F9               	addwf	___fltol@exp1,f
   846     06FE  1D03               	btfss	3,2
   847     06FF  2F01               	goto	u191
   848     0700  2F02               	goto	u190
   849     0701                     u191:
   850     0701  2EF1               	goto	l684
   851     0702                     u190:
   852     0702  2F1A               	goto	l696
   853     0703                     l688:
   854     0703  3020               	movlw	32
   855     0704  0279               	subwf	___fltol@exp1,w
   856     0705  1C03               	skipc
   857     0706  2F08               	goto	u201
   858     0707  2F09               	goto	u200
   859     0708                     u201:
   860     0708  2F15               	goto	l329
   861     0709                     u200:
   862     0709  2EBE               	goto	l664
   863     070A                     l694:
   864     070A  3001               	movlw	1
   865     070B  00F4               	movwf	??___fltol
   866     070C                     u215:
   867     070C  1003               	clrc
   868     070D  0DF0               	rlf	___fltol@f1,f
   869     070E  0DF1               	rlf	___fltol@f1+1,f
   870     070F  0DF2               	rlf	___fltol@f1+2,f
   871     0710  0DF3               	rlf	___fltol@f1+3,f
   872     0711  0BF4               	decfsz	??___fltol,f
   873     0712  2F0C               	goto	u215
   874     0713  3001               	movlw	1
   875     0714  02F9               	subwf	___fltol@exp1,f
   876     0715                     l329:
   877     0715  0879               	movf	___fltol@exp1,w
   878     0716  1D03               	btfss	3,2
   879     0717  2F19               	goto	u221
   880     0718  2F1A               	goto	u220
   881     0719                     u221:
   882     0719  2F0A               	goto	l694
   883     071A                     u220:
   884     071A                     l696:
   885     071A  0878               	movf	___fltol@sign1,w
   886     071B  1903               	btfsc	3,2
   887     071C  2F1E               	goto	u231
   888     071D  2F1F               	goto	u230
   889     071E                     u231:
   890     071E  2F2A               	goto	l332
   891     071F                     u230:
   892     071F                     l698:
   893     071F  09F0               	comf	___fltol@f1,f
   894     0720  09F1               	comf	___fltol@f1+1,f
   895     0721  09F2               	comf	___fltol@f1+2,f
   896     0722  09F3               	comf	___fltol@f1+3,f
   897     0723  0AF0               	incf	___fltol@f1,f
   898     0724  1903               	skipnz
   899     0725  0AF1               	incf	___fltol@f1+1,f
   900     0726  1903               	skipnz
   901     0727  0AF2               	incf	___fltol@f1+2,f
   902     0728  1903               	skipnz
   903     0729  0AF3               	incf	___fltol@f1+3,f
   904     072A                     l332:
   905     072A                     l322:
   906     072A  0008               	return
   907     072B                     __end_of___fltol:
   908     007E                     btemp	set	126	;btemp
   909     007E                     wtemp0	set	126
   910                           
   911                           	psect	config
   912                           
   913                           ;Config register CONFIG @ 0x2007
   914                           ;	Oscillator Selection bits
   915                           ;	FOSC = EXTRC, RC oscillator
   916                           ;	Watchdog Timer Enable bit
   917                           ;	WDTE = OFF, WDT disabled
   918                           ;	Power-up Timer Enable bit
   919                           ;	PWRTE = OFF, PWRT disabled
   920                           ;	Brown-out Reset Enable bit
   921                           ;	BOREN = OFF, BOR disabled
   922                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   923                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   924                           ;	Data EEPROM Memory Code Protection bit
   925                           ;	CPD = OFF, Data EEPROM code protection off
   926                           ;	Flash Program Memory Write Enable bits
   927                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   928                           ;	In-Circuit Debugger Mode bit
   929                           ;	DEBUG = 0x1, unprogrammed default
   930                           ;	Flash Program Memory Code Protection bit
   931                           ;	CP = OFF, Code protection off
   932     2007                     	org	8199
   933     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     12      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initiate
    _initiate->___fltol

Critical Paths under _main in BANK0

    _main->_initiate

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     820
                           _initiate
                                _pwm
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initiate                                            14    14      0     820
                                             10 COMMON     2     2      0
                                              0 BANK0     12    12      0
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     685
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
     ___fltol
   _pwm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1E      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 19:46:49 2024

                     l42 06B4                       l39 07FB                      l322 072A  
                    l332 072A                      l329 0715                      l700 072B  
                    l710 07AD                      l702 0753                      l712 07BF  
                    l704 0765                      l720 0675                      l714 07DA  
                    l706 0780                      l730 06A3                      l722 0679  
                    l716 07E5                      l708 0792                      l732 06A7  
                    l724 067D                      l670 06DA                      l662 06B5  
                    l718 07F0                      l726 068A                      l734 0667  
                    l672 06DB                      l664 06BE                      l728 068E  
                    l736 066C                      l674 06E3                      l684 06F1  
                    l676 06E5                      l668 06C7                      l694 070A  
                    l686 06FA                      l678 06E9                      l696 071A  
                    l688 0703                      l698 071F                      u200 0709  
                    u201 0708                      u220 071A                      u140 06BE  
                    u221 0719                      u141 06BD                      u230 071F  
                    u150 06D5                      u231 071E                      u215 070C  
                    u160 06E9                      u161 06E8                      u170 06F0  
                    u171 06EF                      u155 06D0                      u245 07DD  
                    u190 0702                      _PR2 0092                      u191 0701  
                    u255 07E8                      u185 06F2                      u265 07F3  
                    u277 0683                      u287 0698                      u297 06AD  
                    _pwm 0675             ___fltol@exp1 0079                     ?_pwm 0070  
                   _main 0667                     btemp 007E                     start 0000  
                  ??_pwm 0070            ___fltol@sign1 0078                    ?_main 0070  
        __end_of___fltol 072B                    _T2CON 0012                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0675                   ??_main 007C                   _CCPR2L 001B  
              ??___fltol 0074         __end_of_initiate 07FC  __end_of__initialization 07FC  
             ___fltol@f1 0070           __pcstackCOMMON 0070               __pmaintext 0667  
                _CCP2CON 001D      initiate@dutyCycle20 0020      initiate@dutyCycle60 0024  
    initiate@dutyCycle90 0028                ?_initiate 0070                  ___fltol 06B5  
                __ptext1 0675                  __ptext2 072B                  __ptext3 06B5  
   end_of_initialization 07FC               ??_initiate 007A      start_initialization 07FC  
            __end_of_pwm 06B5                ___latbits 0002            __pcstackBANK0 0020  
              __pnvBANK0 002C                 ?___fltol 0070                _pwmhigh20 0030  
              _pwmhigh60 002E                _pwmhigh90 002C                 _initiate 072B  
               _pwmlow20 0031                 _pwmlow60 002F                 _pwmlow90 002D  
