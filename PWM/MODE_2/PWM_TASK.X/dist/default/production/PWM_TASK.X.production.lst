

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 20:08:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	nvCOMMON
   169     0070                     __pnvCOMMON:
   170     0070                     _pwmhigh90:
   171     0070                     	ds	1
   172     0071                     _pwmlow90:
   173     0071                     	ds	1
   174     0072                     _pwmhigh60:
   175     0072                     	ds	1
   176     0073                     _pwmlow60:
   177     0073                     	ds	1
   178     0074                     _pwmhigh20:
   179     0074                     	ds	1
   180     0075                     _pwmlow20:
   181     0075                     	ds	1
   182     001B                     _CCPR2L	set	27
   183     0015                     _CCPR1L	set	21
   184     0012                     _T2CON	set	18
   185     0017                     _CCP1CON	set	23
   186     0092                     _PR2	set	146
   187     0087                     _TRISC	set	135
   188                           
   189                           	psect	cinit
   190     07FC                     start_initialization:	
   191                           ; #config settings
   192                           
   193     07FC                     __initialization:
   194     07FC                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197     07FC                     __end_of__initialization:
   198     07FC  0183               	clrf	3
   199     07FD  120A  118A  2F72   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	cstackCOMMON
   202     0076                     __pcstackCOMMON:
   203     0076                     ?_initiate:
   204     0076                     ??_initiate:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0076                     ?_pwm:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0076                     ??_pwm:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0076                     ?_main:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0076                     	ds	3
   219     0079                     ??_main:
   220                           
   221                           	psect	maintext
   222     0772                     __pmaintext:	
   223                           ; 1 bytes @ 0x3
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 17 in file "PWM_TASK.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, status,0, pclath, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : B00/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   243 ;;      Params:         0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels required when called: 1
   249 ;; This function calls:
   250 ;;		_initiate
   251 ;;		_pwm
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257     0772                     _main:	
   258                           ;psect for function _main
   259                           
   260     0772                     l616:	
   261                           ;incstack = 0
   262                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   263                           
   264                           
   265                           ;PWM_TASK.c: 18:     initiate();
   266     0772  120A  118A  2780  120A  118A  	fcall	_initiate
   267     0777                     l35:	
   268                           ;PWM_TASK.c: 19:     while(1){
   269                           
   270                           
   271                           ;PWM_TASK.c: 20:         pwm();
   272     0777  120A  118A  27BC  120A  118A  	fcall	_pwm
   273     077C  2F77               	goto	l35
   274     077D  120A  118A  2800   	ljmp	start
   275     0780                     __end_of_main:
   276                           
   277                           	psect	text1
   278     07BC                     __ptext1:	
   279 ;; *************** function _pwm *****************
   280 ;; Defined at:
   281 ;;		line 38 in file "PWM_TASK.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0
   297 ;;      Temps:          3       0       0       0       0
   298 ;;      Totals:         3       0       0       0       0
   299 ;;Total ram usage:        3 bytes
   300 ;; Hardware stack levels used: 1
   301 ;; This function calls:
   302 ;;		Nothing
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308     07BC                     _pwm:	
   309                           ;psect for function _pwm
   310                           
   311     07BC                     l602:	
   312                           ;incstack = 0
   313                           ; Regs used in _pwm: [wreg+status,2+status,0]
   314                           
   315                           
   316                           ;PWM_TASK.c: 39:     CCPR1L=pwmhigh20;
   317     07BC  0874               	movf	_pwmhigh20,w
   318     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   319     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   320     07BF  0095               	movwf	21	;volatile
   321     07C0                     l604:
   322                           
   323                           ;PWM_TASK.c: 40:     CCP1CON=(CCP1CON&0xCF)|pwmlow20;
   324     07C0  0817               	movf	23,w	;volatile
   325     07C1  39CF               	andlw	207
   326     07C2  0475               	iorwf	_pwmlow20,w
   327     07C3  0097               	movwf	23	;volatile
   328     07C4                     l606:
   329                           
   330                           ;PWM_TASK.c: 41:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   331     07C4  3017               	movlw	23
   332     07C5  00F8               	movwf	??_pwm+2
   333     07C6  30D5               	movlw	213
   334     07C7  00F7               	movwf	??_pwm+1
   335     07C8  3016               	movlw	22
   336     07C9  00F6               	movwf	??_pwm
   337     07CA                     u47:
   338     07CA  0BF6               	decfsz	??_pwm,f
   339     07CB  2FCA               	goto	u47
   340     07CC  0BF7               	decfsz	??_pwm+1,f
   341     07CD  2FCA               	goto	u47
   342     07CE  0BF8               	decfsz	??_pwm+2,f
   343     07CF  2FCA               	goto	u47
   344     07D0  0000               	nop
   345     07D1                     l608:
   346                           
   347                           ;PWM_TASK.c: 42:     CCPR2L=pwmhigh60;
   348     07D1  0872               	movf	_pwmhigh60,w
   349     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   350     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   351     07D4  009B               	movwf	27	;volatile
   352     07D5                     l610:
   353                           
   354                           ;PWM_TASK.c: 43:     CCP1CON=(CCP1CON&0xCF)|pwmlow60;
   355     07D5  0817               	movf	23,w	;volatile
   356     07D6  39CF               	andlw	207
   357     07D7  0473               	iorwf	_pwmlow60,w
   358     07D8  0097               	movwf	23	;volatile
   359                           
   360                           ;PWM_TASK.c: 44:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   361     07D9  3017               	movlw	23
   362     07DA  00F8               	movwf	??_pwm+2
   363     07DB  30D5               	movlw	213
   364     07DC  00F7               	movwf	??_pwm+1
   365     07DD  3016               	movlw	22
   366     07DE  00F6               	movwf	??_pwm
   367     07DF                     u57:
   368     07DF  0BF6               	decfsz	??_pwm,f
   369     07E0  2FDF               	goto	u57
   370     07E1  0BF7               	decfsz	??_pwm+1,f
   371     07E2  2FDF               	goto	u57
   372     07E3  0BF8               	decfsz	??_pwm+2,f
   373     07E4  2FDF               	goto	u57
   374     07E5  0000               	nop
   375                           
   376                           ;PWM_TASK.c: 45:     CCPR1L=pwmhigh90;
   377     07E6  0870               	movf	_pwmhigh90,w
   378     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   379     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   380     07E9  0095               	movwf	21	;volatile
   381     07EA                     l612:
   382                           
   383                           ;PWM_TASK.c: 46:     CCP1CON=(CCP1CON&0xCF)|pwmlow90;
   384     07EA  0817               	movf	23,w	;volatile
   385     07EB  39CF               	andlw	207
   386     07EC  0471               	iorwf	_pwmlow90,w
   387     07ED  0097               	movwf	23	;volatile
   388     07EE                     l614:
   389                           
   390                           ;PWM_TASK.c: 47:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   391     07EE  3017               	movlw	23
   392     07EF  00F8               	movwf	??_pwm+2
   393     07F0  30D5               	movlw	213
   394     07F1  00F7               	movwf	??_pwm+1
   395     07F2  3016               	movlw	22
   396     07F3  00F6               	movwf	??_pwm
   397     07F4                     u67:
   398     07F4  0BF6               	decfsz	??_pwm,f
   399     07F5  2FF4               	goto	u67
   400     07F6  0BF7               	decfsz	??_pwm+1,f
   401     07F7  2FF4               	goto	u67
   402     07F8  0BF8               	decfsz	??_pwm+2,f
   403     07F9  2FF4               	goto	u67
   404     07FA  0000               	nop
   405     07FB                     l44:
   406     07FB  0008               	return
   407     07FC                     __end_of_pwm:
   408                           
   409                           	psect	text2
   410     0780                     __ptext2:	
   411 ;; *************** function _initiate *****************
   412 ;; Defined at:
   413 ;;		line 23 in file "PWM_TASK.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          1       0       0       0       0
   430 ;;      Totals:         1       0       0       0       0
   431 ;;Total ram usage:        1 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440     0780                     _initiate:	
   441                           ;psect for function _initiate
   442                           
   443     0780                     l588:	
   444                           ;incstack = 0
   445                           ; Regs used in _initiate: [wreg+status,2+status,0]
   446                           
   447                           
   448                           ;PWM_TASK.c: 24:     TRISC=0xFB;
   449     0780  30FB               	movlw	251
   450     0781  1683               	bsf	3,5	;RP0=1, select bank1
   451     0782  1303               	bcf	3,6	;RP1=0, select bank1
   452     0783  0087               	movwf	7	;volatile
   453                           
   454                           ;PWM_TASK.c: 25:     CCP1CON=0x0F;
   455     0784  300F               	movlw	15
   456     0785  1283               	bcf	3,5	;RP0=0, select bank0
   457     0786  1303               	bcf	3,6	;RP1=0, select bank0
   458     0787  0097               	movwf	23	;volatile
   459                           
   460                           ;PWM_TASK.c: 26:     T2CON=0x06;
   461     0788  3006               	movlw	6
   462     0789  0092               	movwf	18	;volatile
   463                           
   464                           ;PWM_TASK.c: 27:     PR2=0x2E;
   465     078A  302E               	movlw	46
   466     078B  1683               	bsf	3,5	;RP0=1, select bank1
   467     078C  1303               	bcf	3,6	;RP1=0, select bank1
   468     078D  0092               	movwf	18	;volatile
   469                           
   470                           ;PWM_TASK.c: 28:     pwmlow20=0x02;
   471     078E  3002               	movlw	2
   472     078F  00F5               	movwf	_pwmlow20
   473     0790                     l590:
   474                           
   475                           ;PWM_TASK.c: 29:     pwmlow20=(pwmlow20<<4);
   476     0790  0875               	movf	_pwmlow20,w
   477     0791  00F6               	movwf	??_initiate
   478     0792  3003               	movlw	3
   479     0793                     u15:
   480     0793  1003               	clrc
   481     0794  0DF6               	rlf	??_initiate,f
   482     0795  3EFF               	addlw	-1
   483     0796  1D03               	skipz
   484     0797  2F93               	goto	u15
   485     0798  1003               	clrc
   486     0799  0D76               	rlf	??_initiate,w
   487     079A  00F5               	movwf	_pwmlow20
   488     079B                     l592:
   489                           
   490                           ;PWM_TASK.c: 30:     pwmhigh20=0x09;
   491     079B  3009               	movlw	9
   492     079C  00F4               	movwf	_pwmhigh20
   493     079D                     l594:
   494                           
   495                           ;PWM_TASK.c: 31:     pwmlow60=0x01;
   496     079D  01F3               	clrf	_pwmlow60
   497     079E  0AF3               	incf	_pwmlow60,f
   498                           
   499                           ;PWM_TASK.c: 32:     pwmlow60=(pwmlow60<<4);
   500     079F  0873               	movf	_pwmlow60,w
   501     07A0  00F6               	movwf	??_initiate
   502     07A1  3003               	movlw	3
   503     07A2                     u25:
   504     07A2  1003               	clrc
   505     07A3  0DF6               	rlf	??_initiate,f
   506     07A4  3EFF               	addlw	-1
   507     07A5  1D03               	skipz
   508     07A6  2FA2               	goto	u25
   509     07A7  1003               	clrc
   510     07A8  0D76               	rlf	??_initiate,w
   511     07A9  00F3               	movwf	_pwmlow60
   512     07AA                     l596:
   513                           
   514                           ;PWM_TASK.c: 33:     pwmhigh60=0x1C;
   515     07AA  301C               	movlw	28
   516     07AB  00F2               	movwf	_pwmhigh60
   517     07AC                     l598:
   518                           
   519                           ;PWM_TASK.c: 34:     pwmlow90=0x01;
   520     07AC  01F1               	clrf	_pwmlow90
   521     07AD  0AF1               	incf	_pwmlow90,f
   522     07AE                     l600:
   523                           
   524                           ;PWM_TASK.c: 35:     pwmlow90=(pwmlow90<<4);
   525     07AE  0871               	movf	_pwmlow90,w
   526     07AF  00F6               	movwf	??_initiate
   527     07B0  3003               	movlw	3
   528     07B1                     u35:
   529     07B1  1003               	clrc
   530     07B2  0DF6               	rlf	??_initiate,f
   531     07B3  3EFF               	addlw	-1
   532     07B4  1D03               	skipz
   533     07B5  2FB1               	goto	u35
   534     07B6  1003               	clrc
   535     07B7  0D76               	rlf	??_initiate,w
   536     07B8  00F1               	movwf	_pwmlow90
   537                           
   538                           ;PWM_TASK.c: 36:     pwmhigh90=0x2A;
   539     07B9  302A               	movlw	42
   540     07BA  00F0               	movwf	_pwmhigh90
   541     07BB                     l41:
   542     07BB  0008               	return
   543     07BC                     __end_of_initiate:
   544     007E                     btemp	set	126	;btemp
   545     007E                     wtemp0	set	126
   546                           
   547                           	psect	config
   548                           
   549                           ;Config register CONFIG @ 0x2007
   550                           ;	Oscillator Selection bits
   551                           ;	FOSC = EXTRC, RC oscillator
   552                           ;	Watchdog Timer Enable bit
   553                           ;	WDTE = OFF, WDT disabled
   554                           ;	Power-up Timer Enable bit
   555                           ;	PWRTE = OFF, PWRT disabled
   556                           ;	Brown-out Reset Enable bit
   557                           ;	BOREN = OFF, BOR disabled
   558                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   559                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   560                           ;	Data EEPROM Memory Code Protection bit
   561                           ;	CPD = OFF, Data EEPROM code protection off
   562                           ;	Flash Program Memory Write Enable bits
   563                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   564                           ;	In-Circuit Debugger Mode bit
   565                           ;	DEBUG = 0x1, unprogrammed default
   566                           ;	Flash Program Memory Code Protection bit
   567                           ;	CP = OFF, Code protection off
   568     2007                     	org	8199
   569     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwm

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _initiate
                                _pwm
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initiate                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
   _pwm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 20:08:17 2024

                     l41 07BB                       l35 0777                       l44 07FB  
                     u15 0793                       u25 07A2                       u35 07B1  
                     u47 07CA                       u57 07DF                       u67 07F4  
                    l600 07AE                      l610 07D5                      l602 07BC  
                    l612 07EA                      l604 07C0                      l614 07EE  
                    l606 07C4                      l608 07D1                      l616 0772  
                    l590 0790                      l592 079B                      l594 079D  
                    l596 07AA                      l588 0780                      l598 07AC  
                    _PR2 0092                      _pwm 07BC                     ?_pwm 0076  
                   _main 0772                     btemp 007E                     start 0000  
                  ??_pwm 0076                    ?_main 0076                    _T2CON 0012  
                  _TRISC 0087                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0780                   ??_main 0079  
                 _CCPR1L 0015                   _CCPR2L 001B         __end_of_initiate 07BC  
__end_of__initialization 07FC           __pcstackCOMMON 0076               __pnvCOMMON 0070  
             __pmaintext 0772                  _CCP1CON 0017                ?_initiate 0076  
                __ptext1 07BC                  __ptext2 0780     end_of_initialization 07FC  
             ??_initiate 0076      start_initialization 07FC              __end_of_pwm 07FC  
              ___latbits 0002                _pwmhigh20 0074                _pwmhigh60 0072  
              _pwmhigh90 0070                 _initiate 0780                 _pwmlow20 0075  
               _pwmlow60 0073                 _pwmlow90 0071  
