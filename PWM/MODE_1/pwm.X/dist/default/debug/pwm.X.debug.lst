

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Jul 29 17:54:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	nvCOMMON
   169     0070                     __pnvCOMMON:
   170     0070                     _pwmhigh80:
   171     0070                     	ds	1
   172     0071                     _pwmlow80:
   173     0071                     	ds	1
   174     0072                     _pwmhigh50:
   175     0072                     	ds	1
   176     0073                     _pwmlow50:
   177     0073                     	ds	1
   178     0074                     _pwmhigh10:
   179     0074                     	ds	1
   180     0075                     _pwmlow10:
   181     0075                     	ds	1
   182     0015                     _CCPR1L	set	21
   183     0012                     _T2CON	set	18
   184     0017                     _CCP1CON	set	23
   185     0092                     _PR2	set	146
   186     0087                     _TRISC	set	135
   187                           
   188                           	psect	cinit
   189     07FC                     start_initialization:	
   190                           ; #config settings
   191                           
   192     07FC                     __initialization:
   193     07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FC                     __end_of__initialization:
   197     07FC  0183               	clrf	3
   198     07FD  120A  118A  2F74   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	cstackCOMMON
   201     0076                     __pcstackCOMMON:
   202     0076                     ?_initiate:
   203     0076                     ??_initiate:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0076                     ?_pwm:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0076                     ??_pwm:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0076                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0076                     	ds	3
   218     0079                     ??_main:
   219                           
   220                           	psect	maintext
   221     0774                     __pmaintext:	
   222                           ; 1 bytes @ 0x3
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 17 in file "pwm.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_initiate
   250 ;;		_pwm
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256     0774                     _main:	
   257                           ;psect for function _main
   258                           
   259     0774                     l618:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   262                           
   263                           
   264                           ;pwm.c: 18:     initiate();
   265     0774  120A  118A  2782  120A  118A  	fcall	_initiate
   266     0779                     l33:	
   267                           ;pwm.c: 19:     while(1){
   268                           
   269                           
   270                           ;pwm.c: 20:         pwm();
   271     0779  120A  118A  27BC  120A  118A  	fcall	_pwm
   272     077E  2F79               	goto	l33
   273     077F  120A  118A  2800   	ljmp	start
   274     0782                     __end_of_main:
   275                           
   276                           	psect	text1
   277     07BC                     __ptext1:	
   278 ;; *************** function _pwm *****************
   279 ;; Defined at:
   280 ;;		line 38 in file "pwm.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, status,2, status,0
   289 ;; Tracked objects:
   290 ;;		On entry : 0/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0
   296 ;;      Temps:          3       0       0       0       0
   297 ;;      Totals:         3       0       0       0       0
   298 ;;Total ram usage:        3 bytes
   299 ;; Hardware stack levels used: 1
   300 ;; This function calls:
   301 ;;		Nothing
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307     07BC                     _pwm:	
   308                           ;psect for function _pwm
   309                           
   310     07BC                     l604:	
   311                           ;incstack = 0
   312                           ; Regs used in _pwm: [wreg+status,2+status,0]
   313                           
   314                           
   315                           ;pwm.c: 39:     CCPR1L=pwmhigh10;
   316     07BC  0874               	movf	_pwmhigh10,w
   317     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   318     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   319     07BF  0095               	movwf	21	;volatile
   320     07C0                     l606:
   321                           
   322                           ;pwm.c: 40:     CCP1CON=(CCP1CON&0xCF)|pwmlow10;
   323     07C0  0817               	movf	23,w	;volatile
   324     07C1  39CF               	andlw	207
   325     07C2  0475               	iorwf	_pwmlow10,w
   326     07C3  0097               	movwf	23	;volatile
   327     07C4                     l608:
   328                           
   329                           ;pwm.c: 41:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   330     07C4  3017               	movlw	23
   331     07C5  00F8               	movwf	??_pwm+2
   332     07C6  30D5               	movlw	213
   333     07C7  00F7               	movwf	??_pwm+1
   334     07C8  3016               	movlw	22
   335     07C9  00F6               	movwf	??_pwm
   336     07CA                     u47:
   337     07CA  0BF6               	decfsz	??_pwm,f
   338     07CB  2FCA               	goto	u47
   339     07CC  0BF7               	decfsz	??_pwm+1,f
   340     07CD  2FCA               	goto	u47
   341     07CE  0BF8               	decfsz	??_pwm+2,f
   342     07CF  2FCA               	goto	u47
   343     07D0  0000               	nop
   344     07D1                     l610:
   345                           
   346                           ;pwm.c: 42:     CCPR1L=pwmhigh50;
   347     07D1  0872               	movf	_pwmhigh50,w
   348     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   349     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   350     07D4  0095               	movwf	21	;volatile
   351     07D5                     l612:
   352                           
   353                           ;pwm.c: 43:     CCP1CON=(CCP1CON&0xCF)|pwmlow50;
   354     07D5  0817               	movf	23,w	;volatile
   355     07D6  39CF               	andlw	207
   356     07D7  0473               	iorwf	_pwmlow50,w
   357     07D8  0097               	movwf	23	;volatile
   358                           
   359                           ;pwm.c: 44:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   360     07D9  3017               	movlw	23
   361     07DA  00F8               	movwf	??_pwm+2
   362     07DB  30D5               	movlw	213
   363     07DC  00F7               	movwf	??_pwm+1
   364     07DD  3016               	movlw	22
   365     07DE  00F6               	movwf	??_pwm
   366     07DF                     u57:
   367     07DF  0BF6               	decfsz	??_pwm,f
   368     07E0  2FDF               	goto	u57
   369     07E1  0BF7               	decfsz	??_pwm+1,f
   370     07E2  2FDF               	goto	u57
   371     07E3  0BF8               	decfsz	??_pwm+2,f
   372     07E4  2FDF               	goto	u57
   373     07E5  0000               	nop
   374                           
   375                           ;pwm.c: 45:     CCPR1L=pwmhigh80;
   376     07E6  0870               	movf	_pwmhigh80,w
   377     07E7  1283               	bcf	3,5	;RP0=0, select bank0
   378     07E8  1303               	bcf	3,6	;RP1=0, select bank0
   379     07E9  0095               	movwf	21	;volatile
   380     07EA                     l614:
   381                           
   382                           ;pwm.c: 46:     CCP1CON=(CCP1CON&0xCF)|pwmlow80;
   383     07EA  0817               	movf	23,w	;volatile
   384     07EB  39CF               	andlw	207
   385     07EC  0471               	iorwf	_pwmlow80,w
   386     07ED  0097               	movwf	23	;volatile
   387     07EE                     l616:
   388                           
   389                           ;pwm.c: 47:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   390     07EE  3017               	movlw	23
   391     07EF  00F8               	movwf	??_pwm+2
   392     07F0  30D5               	movlw	213
   393     07F1  00F7               	movwf	??_pwm+1
   394     07F2  3016               	movlw	22
   395     07F3  00F6               	movwf	??_pwm
   396     07F4                     u67:
   397     07F4  0BF6               	decfsz	??_pwm,f
   398     07F5  2FF4               	goto	u67
   399     07F6  0BF7               	decfsz	??_pwm+1,f
   400     07F7  2FF4               	goto	u67
   401     07F8  0BF8               	decfsz	??_pwm+2,f
   402     07F9  2FF4               	goto	u67
   403     07FA  0000               	nop
   404     07FB                     l42:
   405     07FB  0008               	return
   406     07FC                     __end_of_pwm:
   407                           
   408                           	psect	text2
   409     0782                     __ptext2:	
   410 ;; *************** function _initiate *****************
   411 ;; Defined at:
   412 ;;		line 23 in file "pwm.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          1       0       0       0       0
   429 ;;      Totals:         1       0       0       0       0
   430 ;;Total ram usage:        1 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439     0782                     _initiate:	
   440                           ;psect for function _initiate
   441                           
   442     0782                     l586:	
   443                           ;incstack = 0
   444                           ; Regs used in _initiate: [wreg+status,2+status,0]
   445                           
   446                           
   447                           ;pwm.c: 24:     TRISC=0xFB;
   448     0782  30FB               	movlw	251
   449     0783  1683               	bsf	3,5	;RP0=1, select bank1
   450     0784  1303               	bcf	3,6	;RP1=0, select bank1
   451     0785  0087               	movwf	7	;volatile
   452                           
   453                           ;pwm.c: 25:     CCP1CON=0x0F;
   454     0786  300F               	movlw	15
   455     0787  1283               	bcf	3,5	;RP0=0, select bank0
   456     0788  1303               	bcf	3,6	;RP1=0, select bank0
   457     0789  0097               	movwf	23	;volatile
   458                           
   459                           ;pwm.c: 26:     T2CON=0x06;
   460     078A  3006               	movlw	6
   461     078B  0092               	movwf	18	;volatile
   462                           
   463                           ;pwm.c: 27:     PR2=0x5D;
   464     078C  305D               	movlw	93
   465     078D  1683               	bsf	3,5	;RP0=1, select bank1
   466     078E  1303               	bcf	3,6	;RP1=0, select bank1
   467     078F  0092               	movwf	18	;volatile
   468                           
   469                           ;pwm.c: 28:     pwmlow10=0x02;
   470     0790  3002               	movlw	2
   471     0791  00F5               	movwf	_pwmlow10
   472     0792                     l588:
   473                           
   474                           ;pwm.c: 29:     pwmlow10=(pwmlow10<<4);
   475     0792  0875               	movf	_pwmlow10,w
   476     0793  00F6               	movwf	??_initiate
   477     0794  3003               	movlw	3
   478     0795                     u15:
   479     0795  1003               	clrc
   480     0796  0DF6               	rlf	??_initiate,f
   481     0797  3EFF               	addlw	-1
   482     0798  1D03               	skipz
   483     0799  2F95               	goto	u15
   484     079A  1003               	clrc
   485     079B  0D76               	rlf	??_initiate,w
   486     079C  00F5               	movwf	_pwmlow10
   487     079D                     l590:
   488                           
   489                           ;pwm.c: 30:     pwmhigh10=0x09;
   490     079D  3009               	movlw	9
   491     079E  00F4               	movwf	_pwmhigh10
   492     079F                     l592:
   493                           
   494                           ;pwm.c: 31:     pwmlow50=0x00;
   495     079F  01F3               	clrf	_pwmlow50
   496     07A0                     l594:
   497                           
   498                           ;pwm.c: 32:     pwmlow50=(pwmlow50<<4);
   499     07A0  0873               	movf	_pwmlow50,w
   500     07A1  00F6               	movwf	??_initiate
   501     07A2  3003               	movlw	3
   502     07A3                     u25:
   503     07A3  1003               	clrc
   504     07A4  0DF6               	rlf	??_initiate,f
   505     07A5  3EFF               	addlw	-1
   506     07A6  1D03               	skipz
   507     07A7  2FA3               	goto	u25
   508     07A8  1003               	clrc
   509     07A9  0D76               	rlf	??_initiate,w
   510     07AA  00F3               	movwf	_pwmlow50
   511     07AB                     l596:
   512                           
   513                           ;pwm.c: 33:     pwmhigh50=0x2F;
   514     07AB  302F               	movlw	47
   515     07AC  00F2               	movwf	_pwmhigh50
   516     07AD                     l598:
   517                           
   518                           ;pwm.c: 34:     pwmlow80=0x00;
   519     07AD  01F1               	clrf	_pwmlow80
   520     07AE                     l600:
   521                           
   522                           ;pwm.c: 35:     pwmlow80=(pwmlow80<<4);
   523     07AE  0871               	movf	_pwmlow80,w
   524     07AF  00F6               	movwf	??_initiate
   525     07B0  3003               	movlw	3
   526     07B1                     u35:
   527     07B1  1003               	clrc
   528     07B2  0DF6               	rlf	??_initiate,f
   529     07B3  3EFF               	addlw	-1
   530     07B4  1D03               	skipz
   531     07B5  2FB1               	goto	u35
   532     07B6  1003               	clrc
   533     07B7  0D76               	rlf	??_initiate,w
   534     07B8  00F1               	movwf	_pwmlow80
   535     07B9                     l602:
   536                           
   537                           ;pwm.c: 36:     pwmhigh80=0x4B;
   538     07B9  304B               	movlw	75
   539     07BA  00F0               	movwf	_pwmhigh80
   540     07BB                     l39:
   541     07BB  0008               	return
   542     07BC                     __end_of_initiate:
   543     007E                     btemp	set	126	;btemp
   544     007E                     wtemp0	set	126
   545                           
   546                           	psect	config
   547                           
   548                           ;Config register CONFIG @ 0x2007
   549                           ;	Oscillator Selection bits
   550                           ;	FOSC = EXTRC, RC oscillator
   551                           ;	Watchdog Timer Enable bit
   552                           ;	WDTE = OFF, WDT disabled
   553                           ;	Power-up Timer Enable bit
   554                           ;	PWRTE = OFF, PWRT disabled
   555                           ;	Brown-out Reset Enable bit
   556                           ;	BOREN = OFF, BOR disabled
   557                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   558                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   559                           ;	Data EEPROM Memory Code Protection bit
   560                           ;	CPD = OFF, Data EEPROM code protection off
   561                           ;	Flash Program Memory Write Enable bits
   562                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   563                           ;	In-Circuit Debugger Mode bit
   564                           ;	DEBUG = 0x1, unprogrammed default
   565                           ;	Flash Program Memory Code Protection bit
   566                           ;	CP = OFF, Code protection off
   567     2007                     	org	8199
   568     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwm

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _initiate
                                _pwm
 ---------------------------------------------------------------------------------
 (1) _pwm                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initiate                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate
   _pwm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Jul 29 17:54:17 2024

                     l33 0779                       l42 07FB                       l39 07BB  
                     u15 0795                       u25 07A3                       u35 07B1  
                     u47 07CA                       u57 07DF                       u67 07F4  
                    l600 07AE                      l602 07B9                      l610 07D1  
                    l612 07D5                      l604 07BC                      l614 07EA  
                    l606 07C0                      l616 07EE                      l608 07C4  
                    l618 0774                      l590 079D                      l592 079F  
                    l594 07A0                      l586 0782                      l596 07AB  
                    l588 0792                      l598 07AD                      _PR2 0092  
                    _pwm 07BC                     ?_pwm 0076                     _main 0774  
                   btemp 007E                     start 0000                    ??_pwm 0076  
                  ?_main 0076                    _T2CON 0012                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0782                   ??_main 0079                   _CCPR1L 0015  
       __end_of_initiate 07BC  __end_of__initialization 07FC           __pcstackCOMMON 0076  
             __pnvCOMMON 0070               __pmaintext 0774                  _CCP1CON 0017  
              ?_initiate 0076                  __ptext1 07BC                  __ptext2 0782  
   end_of_initialization 07FC               ??_initiate 0076      start_initialization 07FC  
            __end_of_pwm 07FC                ___latbits 0002                _pwmhigh10 0074  
              _pwmhigh50 0072                _pwmhigh80 0070                 _initiate 0782  
               _pwmlow10 0075                 _pwmlow50 0073                 _pwmlow80 0071  
