

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 16 14:38:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0098                     	;# 
   104     0099                     	;# 
   105     009C                     	;# 
   106     009D                     	;# 
   107     009E                     	;# 
   108     009F                     	;# 
   109     010C                     	;# 
   110     010D                     	;# 
   111     010E                     	;# 
   112     010F                     	;# 
   113     018C                     	;# 
   114     018D                     	;# 
   115     0000                     	;# 
   116     0001                     	;# 
   117     0002                     	;# 
   118     0003                     	;# 
   119     0004                     	;# 
   120     0005                     	;# 
   121     0006                     	;# 
   122     0007                     	;# 
   123     0008                     	;# 
   124     0009                     	;# 
   125     000A                     	;# 
   126     000B                     	;# 
   127     000C                     	;# 
   128     000D                     	;# 
   129     000E                     	;# 
   130     000E                     	;# 
   131     000F                     	;# 
   132     0010                     	;# 
   133     0011                     	;# 
   134     0012                     	;# 
   135     0013                     	;# 
   136     0014                     	;# 
   137     0015                     	;# 
   138     0015                     	;# 
   139     0016                     	;# 
   140     0017                     	;# 
   141     0018                     	;# 
   142     0019                     	;# 
   143     001A                     	;# 
   144     001B                     	;# 
   145     001B                     	;# 
   146     001C                     	;# 
   147     001D                     	;# 
   148     001E                     	;# 
   149     001F                     	;# 
   150     0081                     	;# 
   151     0085                     	;# 
   152     0086                     	;# 
   153     0087                     	;# 
   154     0088                     	;# 
   155     0089                     	;# 
   156     008C                     	;# 
   157     008D                     	;# 
   158     008E                     	;# 
   159     0091                     	;# 
   160     0092                     	;# 
   161     0093                     	;# 
   162     0094                     	;# 
   163     0098                     	;# 
   164     0099                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     009F                     	;# 
   169     010C                     	;# 
   170     010D                     	;# 
   171     010E                     	;# 
   172     010F                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175                           
   176                           	psect	idataCOMMON
   177     064C                     __pidataCOMMON:
   178                           
   179                           ;initializer for _Key
   180     064C  346E               	retlw	110
   181                           
   182                           	psect	idataBANK0
   183     064D                     __pidataBANK0:
   184                           
   185                           ;initializer for _arr3
   186     064D  344B               	retlw	75
   187     064E  3465               	retlw	101
   188     064F  3479               	retlw	121
   189     0650  3420               	retlw	32
   190     0651  3450               	retlw	80
   191     0652  3472               	retlw	114
   192     0653  3465               	retlw	101
   193     0654  3473               	retlw	115
   194     0655  3473               	retlw	115
   195     0656  3465               	retlw	101
   196     0657  3464               	retlw	100
   197     0658  3420               	retlw	32
   198     0659  343A               	retlw	58
   199     065A  3420               	retlw	32
   200     065B  3400               	retlw	0
   201     0008                     _PORTD	set	8
   202     0007                     _PORTC	set	7
   203     0006                     _PORTB	set	6
   204     0037                     _RB7	set	55
   205     0036                     _RB6	set	54
   206     0035                     _RB5	set	53
   207     0034                     _RB4	set	52
   208     0032                     _RB2	set	50
   209     0031                     _RB1	set	49
   210     0030                     _RB0	set	48
   211     0081                     _OPTION_REG	set	129
   212     0088                     _TRISD	set	136
   213     0087                     _TRISC	set	135
   214     0086                     _TRISB	set	134
   215                           
   216                           	psect	cinit
   217     07E7                     start_initialization:	
   218                           ; #config settings
   219                           
   220     07E7                     __initialization:
   221                           
   222                           ; Initialize objects allocated to BANK0
   223     07E7  1383               	bcf	3,7	;select IRP bank0
   224     07E8  302F               	movlw	low (__pdataBANK0+15)
   225     07E9  00FD               	movwf	btemp+-1
   226     07EA  3006               	movlw	high __pidataBANK0
   227     07EB  00FE               	movwf	btemp
   228     07EC  304D               	movlw	low __pidataBANK0
   229     07ED  00FF               	movwf	btemp+1
   230     07EE  3020               	movlw	low __pdataBANK0
   231     07EF  0084               	movwf	4
   232     07F0  120A  118A  2671  120A  118A  	fcall	init_ram0
   233                           
   234                           ; Initialize objects allocated to COMMON
   235     07F5  120A  118A  264C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   236     07FA  00F6               	movwf	__pdataCOMMON& (0+127)
   237                           
   238                           ; Clear objects allocated to COMMON
   239     07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   240     07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243     07FC                     __end_of__initialization:
   244     07FC  0183               	clrf	3
   245     07FD  120A  118A  2EBD   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMMON
   248     0075                     __pbssCOMMON:
   249     0075                     _i:
   250     0075                     	ds	1
   251                           
   252                           	psect	dataCOMMON
   253     0076                     __pdataCOMMON:
   254     0076                     _Key:
   255     0076                     	ds	1
   256                           
   257                           	psect	dataBANK0
   258     0020                     __pdataBANK0:
   259     0020                     _arr3:
   260     0020                     	ds	15
   261                           
   262                           	psect	inittext
   263     066D                     init_fetch0:	
   264                           ;	Called with low address in FSR and high address in W
   265                           
   266     066D  087E               	movf	btemp,w
   267     066E  008A               	movwf	10
   268     066F  087F               	movf	btemp+1,w
   269     0670  0082               	movwf	2
   270     0671                     init_ram0:	
   271                           ;Called with:
   272                           ;	high address of idata address in btemp 
   273                           ;	low address of idata address in btemp+1 
   274                           ;	low address of data in FSR
   275                           ;	high address + 1 of data in btemp-1
   276                           
   277     0671  120A  118A  266D  120A  118A  	fcall	init_fetch0
   278     0676  0080               	movwf	0
   279     0677  0A84               	incf	4,f
   280     0678  0804               	movf	4,w
   281     0679  067D               	xorwf	btemp+-1,w
   282     067A  1903               	btfsc	3,2
   283     067B  3400               	retlw	0
   284     067C  0AFF               	incf	btemp+1,f
   285     067D  1903               	btfsc	3,2
   286     067E  0AFE               	incf	btemp,f
   287     067F  2E71               	goto	init_ram0
   288                           
   289                           	psect	cstackCOMMON
   290     0070                     __pcstackCOMMON:
   291     0070                     ?_init:
   292     0070                     ?_lcd_Command:	
   293                           ; 1 bytes @ 0x0
   294                           
   295     0070                     ??_lcd_Command:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ?_lcd_Data:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ??_lcd_Data:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ?_switch_press_scan:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ??_switch_press_scan:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?_main:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ?_keypad_scanner:	
   314                           ; 1 bytes @ 0x0
   315                           
   316     0070                     ??_keypad_scanner:	
   317                           ; 1 bytes @ 0x0
   318                           
   319     0070                     switch_press_scan@key:	
   320                           ; 1 bytes @ 0x0
   321                           
   322                           
   323                           ; 1 bytes @ 0x0
   324     0070                     	ds	2
   325     0072                     lcd_Data@i:
   326     0072                     lcd_Command@i:	
   327                           ; 1 bytes @ 0x2
   328                           
   329                           
   330                           ; 1 bytes @ 0x2
   331     0072                     	ds	1
   332     0073                     ??_init:
   333                           
   334                           ; 1 bytes @ 0x3
   335     0073                     	ds	2
   336     0075                     ??_main:
   337                           
   338                           	psect	maintext
   339     06BD                     __pmaintext:	
   340                           ; 1 bytes @ 0x5
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 34 in file "KEYPAD.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels required when called: 2
   366 ;; This function calls:
   367 ;;		_init
   368 ;;		_lcd_Command
   369 ;;		_lcd_Data
   370 ;;		_switch_press_scan
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376     06BD                     _main:	
   377                           ;psect for function _main
   378                           
   379     06BD                     l816:	
   380                           ;incstack = 0
   381                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   382                           
   383                           
   384                           ;KEYPAD.c: 35:     init();
   385     06BD  120A  118A  26F3  120A  118A  	fcall	_init
   386                           
   387                           ;KEYPAD.c: 36:     lcd_Command(0x80);
   388     06C2  3080               	movlw	128
   389     06C3  120A  118A  269D  120A  118A  	fcall	_lcd_Command
   390     06C8                     l818:
   391                           
   392                           ;KEYPAD.c: 39:     for (i = 0; i < sizeof (arr3) - 1; i++) {
   393     06C8  01F5               	clrf	_i
   394     06C9                     l824:
   395                           
   396                           ;KEYPAD.c: 40:         lcd_Data(arr3[i]);
   397     06C9  0875               	movf	_i,w
   398     06CA  3E20               	addlw	(low (_arr3| 0))& (0+255)
   399     06CB  0084               	movwf	4
   400     06CC  1383               	bcf	3,7	;select IRP bank0
   401     06CD  0800               	movf	0,w
   402     06CE  120A  118A  2680  120A  118A  	fcall	_lcd_Data
   403     06D3                     l826:
   404                           
   405                           ;KEYPAD.c: 41:     }
   406     06D3  3001               	movlw	1
   407     06D4  00FF               	movwf	btemp+1
   408     06D5  087F               	movf	btemp+1,w
   409     06D6  07F5               	addwf	_i,f
   410     06D7                     l828:
   411     06D7  300E               	movlw	14
   412     06D8  0275               	subwf	_i,w
   413     06D9  1C03               	skipc
   414     06DA  2EDC               	goto	u261
   415     06DB  2EDD               	goto	u260
   416     06DC                     u261:
   417     06DC  2EC9               	goto	l824
   418     06DD                     u260:
   419     06DD                     l830:
   420                           
   421                           ;KEYPAD.c: 44:         Key = switch_press_scan();
   422     06DD  120A  118A  265C  120A  118A  	fcall	_switch_press_scan
   423     06E2  00F6               	movwf	_Key
   424     06E3                     l832:
   425                           
   426                           ;KEYPAD.c: 45:         lcd_Command(0x8E);
   427     06E3  308E               	movlw	142
   428     06E4  120A  118A  269D  120A  118A  	fcall	_lcd_Command
   429     06E9                     l834:
   430                           
   431                           ;KEYPAD.c: 46:         lcd_Data(Key);
   432     06E9  0876               	movf	_Key,w
   433     06EA  120A  118A  2680  120A  118A  	fcall	_lcd_Data
   434     06EF  2EDD               	goto	l830
   435     06F0  120A  118A  2800   	ljmp	start
   436     06F3                     __end_of_main:
   437                           
   438                           	psect	text1
   439     065C                     __ptext1:	
   440 ;; *************** function _switch_press_scan *****************
   441 ;; Defined at:
   442 ;;		line 161 in file "KEYPAD.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  key             1    0[COMMON] unsigned char 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      unsigned char 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, pclath, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   456 ;;      Params:         0       0       0       0       0
   457 ;;      Locals:         1       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0
   459 ;;      Totals:         1       0       0       0       0
   460 ;;Total ram usage:        1 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 1
   463 ;; This function calls:
   464 ;;		_keypad_scanner
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470     065C                     _switch_press_scan:	
   471                           ;psect for function _switch_press_scan
   472                           
   473     065C                     l806:	
   474                           ;incstack = 0
   475                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+pclath+cstack]
   476                           
   477                           
   478                           ;KEYPAD.c: 162:     char key = 'n';
   479     065C  306E               	movlw	110
   480     065D  00F0               	movwf	switch_press_scan@key
   481                           
   482                           ;KEYPAD.c: 164:     while (key == 'n') {
   483     065E  2E65               	goto	l810
   484     065F                     l808:
   485                           
   486                           ;KEYPAD.c: 165:         key = keypad_scanner();
   487     065F  120A  118A  2762  120A  118A  	fcall	_keypad_scanner
   488     0664  00F0               	movwf	switch_press_scan@key
   489     0665                     l810:
   490                           
   491                           ;KEYPAD.c: 164:     while (key == 'n') {
   492     0665  306E               	movlw	110
   493     0666  0670               	xorwf	switch_press_scan@key,w
   494     0667  1903               	btfsc	3,2
   495     0668  2E6A               	goto	u251
   496     0669  2E6B               	goto	u250
   497     066A                     u251:
   498     066A  2E5F               	goto	l808
   499     066B                     u250:
   500     066B                     l812:
   501                           
   502                           ;KEYPAD.c: 167:     return key;
   503     066B  0870               	movf	switch_press_scan@key,w
   504     066C                     l120:
   505     066C  0008               	return
   506     066D                     __end_of_switch_press_scan:
   507                           
   508                           	psect	text2
   509     0762                     __ptext2:	
   510 ;; *************** function _keypad_scanner *****************
   511 ;; Defined at:
   512 ;;		line 92 in file "KEYPAD.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  key             1    0        unsigned char 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      unsigned char 
   519 ;; Registers used:
   520 ;;		wreg
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_switch_press_scan
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539     0762                     _keypad_scanner:	
   540                           ;psect for function _keypad_scanner
   541                           
   542     0762                     l674:	
   543                           ;incstack = 0
   544                           ; Regs used in _keypad_scanner: [wreg]
   545                           
   546     0762                     l676:
   547                           
   548                           ;KEYPAD.c: 95:     RB0 = 0;
   549     0762  1283               	bcf	3,5	;RP0=0, select bank0
   550     0763  1303               	bcf	3,6	;RP1=0, select bank0
   551     0764  1006               	bcf	6,0	;volatile
   552     0765                     l678:
   553                           
   554                           ;KEYPAD.c: 96:     RB1 = 1;
   555     0765  1486               	bsf	6,1	;volatile
   556     0766                     l680:
   557                           
   558                           ;KEYPAD.c: 97:     RB2 = 1;
   559     0766  1506               	bsf	6,2	;volatile
   560     0767                     l682:
   561                           
   562                           ;KEYPAD.c: 99:     if (RB4 == 0) {
   563     0767  1A06               	btfsc	6,4	;volatile
   564     0768  2F6A               	goto	u11
   565     0769  2F6B               	goto	u10
   566     076A                     u11:
   567     076A  2F71               	goto	l66
   568     076B                     u10:
   569     076B                     l67:
   570     076B  1E06               	btfss	6,4	;volatile
   571     076C  2F6E               	goto	u21
   572     076D  2F6F               	goto	u20
   573     076E                     u21:
   574     076E  2F6B               	goto	l67
   575     076F                     u20:
   576     076F                     l686:
   577                           
   578                           ;KEYPAD.c: 101:         return '3';
   579     076F  3033               	movlw	51
   580     0770  2FE6               	goto	l70
   581     0771                     l66:	
   582                           ;KEYPAD.c: 102:     }
   583                           
   584                           
   585                           ;KEYPAD.c: 103:     if (RB5 == 0) {
   586     0771  1A86               	btfsc	6,5	;volatile
   587     0772  2F74               	goto	u31
   588     0773  2F75               	goto	u30
   589     0774                     u31:
   590     0774  2F7B               	goto	l71
   591     0775                     u30:
   592     0775                     l72:
   593     0775  1E86               	btfss	6,5	;volatile
   594     0776  2F78               	goto	u41
   595     0777  2F79               	goto	u40
   596     0778                     u41:
   597     0778  2F75               	goto	l72
   598     0779                     u40:
   599     0779                     l692:
   600                           
   601                           ;KEYPAD.c: 105:         return '6';
   602     0779  3036               	movlw	54
   603     077A  2FE6               	goto	l70
   604     077B                     l71:	
   605                           ;KEYPAD.c: 106:     }
   606                           
   607                           
   608                           ;KEYPAD.c: 107:     if (RB6 == 0) {
   609     077B  1B06               	btfsc	6,6	;volatile
   610     077C  2F7E               	goto	u51
   611     077D  2F7F               	goto	u50
   612     077E                     u51:
   613     077E  2F85               	goto	l75
   614     077F                     u50:
   615     077F                     l76:
   616     077F  1F06               	btfss	6,6	;volatile
   617     0780  2F82               	goto	u61
   618     0781  2F83               	goto	u60
   619     0782                     u61:
   620     0782  2F7F               	goto	l76
   621     0783                     u60:
   622     0783                     l698:
   623                           
   624                           ;KEYPAD.c: 109:         return '9';
   625     0783  3039               	movlw	57
   626     0784  2FE6               	goto	l70
   627     0785                     l75:	
   628                           ;KEYPAD.c: 110:     }
   629                           
   630                           
   631                           ;KEYPAD.c: 111:     if (RB7 == 0) {
   632     0785  1B86               	btfsc	6,7	;volatile
   633     0786  2F88               	goto	u71
   634     0787  2F89               	goto	u70
   635     0788                     u71:
   636     0788  2F8F               	goto	l79
   637     0789                     u70:
   638     0789                     l80:
   639     0789  1F86               	btfss	6,7	;volatile
   640     078A  2F8C               	goto	u81
   641     078B  2F8D               	goto	u80
   642     078C                     u81:
   643     078C  2F89               	goto	l80
   644     078D                     u80:
   645     078D                     l704:
   646                           
   647                           ;KEYPAD.c: 113:         return '#';
   648     078D  3023               	movlw	35
   649     078E  2FE6               	goto	l70
   650     078F                     l79:	
   651                           ;KEYPAD.c: 114:     }
   652                           
   653                           
   654                           ;KEYPAD.c: 116:     RB0 = 1;
   655     078F  1406               	bsf	6,0	;volatile
   656                           
   657                           ;KEYPAD.c: 117:     RB1 = 0;
   658     0790  1086               	bcf	6,1	;volatile
   659                           
   660                           ;KEYPAD.c: 118:     RB2 = 1;
   661     0791  1506               	bsf	6,2	;volatile
   662                           
   663                           ;KEYPAD.c: 120:     if (RB4 == 0) {
   664     0792  1A06               	btfsc	6,4	;volatile
   665     0793  2F95               	goto	u91
   666     0794  2F96               	goto	u90
   667     0795                     u91:
   668     0795  2F9C               	goto	l83
   669     0796                     u90:
   670     0796                     l84:
   671     0796  1E06               	btfss	6,4	;volatile
   672     0797  2F99               	goto	u101
   673     0798  2F9A               	goto	u100
   674     0799                     u101:
   675     0799  2F96               	goto	l84
   676     079A                     u100:
   677     079A                     l710:
   678                           
   679                           ;KEYPAD.c: 122:         return '2';
   680     079A  3032               	movlw	50
   681     079B  2FE6               	goto	l70
   682     079C                     l83:	
   683                           ;KEYPAD.c: 123:     }
   684                           
   685                           
   686                           ;KEYPAD.c: 124:     if (RB5 == 0) {
   687     079C  1A86               	btfsc	6,5	;volatile
   688     079D  2F9F               	goto	u111
   689     079E  2FA0               	goto	u110
   690     079F                     u111:
   691     079F  2FA6               	goto	l87
   692     07A0                     u110:
   693     07A0                     l88:
   694     07A0  1E86               	btfss	6,5	;volatile
   695     07A1  2FA3               	goto	u121
   696     07A2  2FA4               	goto	u120
   697     07A3                     u121:
   698     07A3  2FA0               	goto	l88
   699     07A4                     u120:
   700     07A4                     l716:
   701                           
   702                           ;KEYPAD.c: 126:         return '5';
   703     07A4  3035               	movlw	53
   704     07A5  2FE6               	goto	l70
   705     07A6                     l87:	
   706                           ;KEYPAD.c: 127:     }
   707                           
   708                           
   709                           ;KEYPAD.c: 128:     if (RB6 == 0) {
   710     07A6  1B06               	btfsc	6,6	;volatile
   711     07A7  2FA9               	goto	u131
   712     07A8  2FAA               	goto	u130
   713     07A9                     u131:
   714     07A9  2FB0               	goto	l91
   715     07AA                     u130:
   716     07AA                     l92:
   717     07AA  1F06               	btfss	6,6	;volatile
   718     07AB  2FAD               	goto	u141
   719     07AC  2FAE               	goto	u140
   720     07AD                     u141:
   721     07AD  2FAA               	goto	l92
   722     07AE                     u140:
   723     07AE                     l722:
   724                           
   725                           ;KEYPAD.c: 130:         return '8';
   726     07AE  3038               	movlw	56
   727     07AF  2FE6               	goto	l70
   728     07B0                     l91:	
   729                           ;KEYPAD.c: 131:     }
   730                           
   731                           
   732                           ;KEYPAD.c: 132:     if (RB7 == 0) {
   733     07B0  1B86               	btfsc	6,7	;volatile
   734     07B1  2FB3               	goto	u151
   735     07B2  2FB4               	goto	u150
   736     07B3                     u151:
   737     07B3  2FBA               	goto	l95
   738     07B4                     u150:
   739     07B4                     l96:
   740     07B4  1F86               	btfss	6,7	;volatile
   741     07B5  2FB7               	goto	u161
   742     07B6  2FB8               	goto	u160
   743     07B7                     u161:
   744     07B7  2FB4               	goto	l96
   745     07B8                     u160:
   746     07B8                     l728:
   747                           
   748                           ;KEYPAD.c: 134:         return '0';
   749     07B8  3030               	movlw	48
   750     07B9  2FE6               	goto	l70
   751     07BA                     l95:	
   752                           ;KEYPAD.c: 135:     }
   753                           
   754                           
   755                           ;KEYPAD.c: 137:     RB0 = 1;
   756     07BA  1406               	bsf	6,0	;volatile
   757                           
   758                           ;KEYPAD.c: 138:     RB1 = 1;
   759     07BB  1486               	bsf	6,1	;volatile
   760                           
   761                           ;KEYPAD.c: 139:     RB2 = 0;
   762     07BC  1106               	bcf	6,2	;volatile
   763                           
   764                           ;KEYPAD.c: 141:     if (RB4 == 0) {
   765     07BD  1A06               	btfsc	6,4	;volatile
   766     07BE  2FC0               	goto	u171
   767     07BF  2FC1               	goto	u170
   768     07C0                     u171:
   769     07C0  2FC7               	goto	l99
   770     07C1                     u170:
   771     07C1                     l100:
   772     07C1  1E06               	btfss	6,4	;volatile
   773     07C2  2FC4               	goto	u181
   774     07C3  2FC5               	goto	u180
   775     07C4                     u181:
   776     07C4  2FC1               	goto	l100
   777     07C5                     u180:
   778     07C5                     l734:
   779                           
   780                           ;KEYPAD.c: 143:         return '1';
   781     07C5  3031               	movlw	49
   782     07C6  2FE6               	goto	l70
   783     07C7                     l99:	
   784                           ;KEYPAD.c: 144:     }
   785                           
   786                           
   787                           ;KEYPAD.c: 145:     if (RB5 == 0) {
   788     07C7  1A86               	btfsc	6,5	;volatile
   789     07C8  2FCA               	goto	u191
   790     07C9  2FCB               	goto	u190
   791     07CA                     u191:
   792     07CA  2FD1               	goto	l103
   793     07CB                     u190:
   794     07CB                     l104:
   795     07CB  1E86               	btfss	6,5	;volatile
   796     07CC  2FCE               	goto	u201
   797     07CD  2FCF               	goto	u200
   798     07CE                     u201:
   799     07CE  2FCB               	goto	l104
   800     07CF                     u200:
   801     07CF                     l740:
   802                           
   803                           ;KEYPAD.c: 147:         return '4';
   804     07CF  3034               	movlw	52
   805     07D0  2FE6               	goto	l70
   806     07D1                     l103:	
   807                           ;KEYPAD.c: 148:     }
   808                           
   809                           
   810                           ;KEYPAD.c: 149:     if (RB6 == 0) {
   811     07D1  1B06               	btfsc	6,6	;volatile
   812     07D2  2FD4               	goto	u211
   813     07D3  2FD5               	goto	u210
   814     07D4                     u211:
   815     07D4  2FDB               	goto	l107
   816     07D5                     u210:
   817     07D5                     l108:
   818     07D5  1F06               	btfss	6,6	;volatile
   819     07D6  2FD8               	goto	u221
   820     07D7  2FD9               	goto	u220
   821     07D8                     u221:
   822     07D8  2FD5               	goto	l108
   823     07D9                     u220:
   824     07D9                     l746:
   825                           
   826                           ;KEYPAD.c: 151:         return '7';
   827     07D9  3037               	movlw	55
   828     07DA  2FE6               	goto	l70
   829     07DB                     l107:	
   830                           ;KEYPAD.c: 152:     }
   831                           
   832                           
   833                           ;KEYPAD.c: 153:     if (RB7 == 0) {
   834     07DB  1B86               	btfsc	6,7	;volatile
   835     07DC  2FDE               	goto	u231
   836     07DD  2FDF               	goto	u230
   837     07DE                     u231:
   838     07DE  2FE5               	goto	l756
   839     07DF                     u230:
   840     07DF                     l112:
   841     07DF  1F86               	btfss	6,7	;volatile
   842     07E0  2FE2               	goto	u241
   843     07E1  2FE3               	goto	u240
   844     07E2                     u241:
   845     07E2  2FDF               	goto	l112
   846     07E3                     u240:
   847     07E3                     l752:
   848                           
   849                           ;KEYPAD.c: 155:         return '*';
   850     07E3  302A               	movlw	42
   851     07E4  2FE6               	goto	l70
   852     07E5                     l756:
   853                           
   854                           ;KEYPAD.c: 158:     return 'n';
   855     07E5  306E               	movlw	110
   856     07E6                     l70:
   857     07E6  0008               	return
   858     07E7                     __end_of_keypad_scanner:
   859                           
   860                           	psect	text3
   861     0680                     __ptext3:	
   862 ;; *************** function _lcd_Data *****************
   863 ;; Defined at:
   864 ;;		line 74 in file "KEYPAD.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;  i               1    wreg     unsigned char 
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  i               1    2[COMMON] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, btemp+1
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0
   880 ;;      Temps:          2       0       0       0       0
   881 ;;      Totals:         3       0       0       0       0
   882 ;;Total ram usage:        3 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891     0680                     _lcd_Data:	
   892                           ;psect for function _lcd_Data
   893                           
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _lcd_Data: [wreg+status,2+status,0+btemp+1]
   897                           ;lcd_Data@i stored from wreg
   898     0680  00F2               	movwf	lcd_Data@i
   899     0681                     l796:
   900                           
   901                           ;KEYPAD.c: 75:     PORTC |= 0x01;
   902     0681  1283               	bcf	3,5	;RP0=0, select bank0
   903     0682  1303               	bcf	3,6	;RP1=0, select bank0
   904     0683  1407               	bsf	7,0	;volatile
   905     0684                     l798:
   906                           
   907                           ;KEYPAD.c: 76:     PORTD = i;
   908     0684  0872               	movf	lcd_Data@i,w
   909     0685  0088               	movwf	8	;volatile
   910     0686                     l800:
   911                           
   912                           ;KEYPAD.c: 77:     PORTC |= 0x08;
   913     0686  1587               	bsf	7,3	;volatile
   914                           
   915                           ;KEYPAD.c: 78:     _delay((unsigned long)((1)*(6000000/4000.0)));
   916     0687  30D6               	movlw	214
   917     0688  00F0               	movwf	??_lcd_Data
   918     0689                     u277:
   919     0689  2E8A               	nop2
   920     068A  2E8B               	nop2
   921     068B  0BF0               	decfsz	??_lcd_Data,f
   922     068C  2E89               	goto	u277
   923     068D  0000               	nop
   924     068E                     l802:
   925                           
   926                           ;KEYPAD.c: 79:     PORTC &= ~0x08;
   927     068E  30F7               	movlw	247
   928     068F  00FF               	movwf	btemp+1
   929     0690  087F               	movf	btemp+1,w
   930     0691  1283               	bcf	3,5	;RP0=0, select bank0
   931     0692  1303               	bcf	3,6	;RP1=0, select bank0
   932     0693  0587               	andwf	7,f	;volatile
   933     0694                     l804:
   934                           
   935                           ;KEYPAD.c: 80:     _delay((unsigned long)((100)*(6000000/4000.0)));
   936     0694  30C3               	movlw	195
   937     0695  00F1               	movwf	??_lcd_Data+1
   938     0696  30CD               	movlw	205
   939     0697  00F0               	movwf	??_lcd_Data
   940     0698                     u287:
   941     0698  0BF0               	decfsz	??_lcd_Data,f
   942     0699  2E98               	goto	u287
   943     069A  0BF1               	decfsz	??_lcd_Data+1,f
   944     069B  2E98               	goto	u287
   945     069C                     l60:
   946     069C  0008               	return
   947     069D                     __end_of_lcd_Data:
   948                           
   949                           	psect	text4
   950     06F3                     __ptext4:	
   951 ;; *************** function _init *****************
   952 ;; Defined at:
   953 ;;		line 50 in file "KEYPAD.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   967 ;;      Params:         0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0
   969 ;;      Temps:          2       0       0       0       0
   970 ;;      Totals:         2       0       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; Hardware stack levels required when called: 1
   974 ;; This function calls:
   975 ;;		_lcd_Command
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981     06F3                     _init:	
   982                           ;psect for function _init
   983                           
   984     06F3                     l760:	
   985                           ;incstack = 0
   986                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   987                           
   988                           
   989                           ;KEYPAD.c: 51:     TRISB = 0xF0;
   990     06F3  30F0               	movlw	240
   991     06F4  1683               	bsf	3,5	;RP0=1, select bank1
   992     06F5  1303               	bcf	3,6	;RP1=0, select bank1
   993     06F6  0086               	movwf	6	;volatile
   994                           
   995                           ;KEYPAD.c: 52:     PORTB = 0xF0;
   996     06F7  30F0               	movlw	240
   997     06F8  1283               	bcf	3,5	;RP0=0, select bank0
   998     06F9  1303               	bcf	3,6	;RP1=0, select bank0
   999     06FA  0086               	movwf	6	;volatile
  1000     06FB                     l762:
  1001                           
  1002                           ;KEYPAD.c: 53:     TRISC = 0x00;
  1003     06FB  1683               	bsf	3,5	;RP0=1, select bank1
  1004     06FC  1303               	bcf	3,6	;RP1=0, select bank1
  1005     06FD  0187               	clrf	7	;volatile
  1006     06FE                     l764:
  1007                           
  1008                           ;KEYPAD.c: 54:     PORTC = 0x00;
  1009     06FE  1283               	bcf	3,5	;RP0=0, select bank0
  1010     06FF  1303               	bcf	3,6	;RP1=0, select bank0
  1011     0700  0187               	clrf	7	;volatile
  1012     0701                     l766:
  1013                           
  1014                           ;KEYPAD.c: 55:     TRISD = 0x00;
  1015     0701  1683               	bsf	3,5	;RP0=1, select bank1
  1016     0702  1303               	bcf	3,6	;RP1=0, select bank1
  1017     0703  0188               	clrf	8	;volatile
  1018     0704                     l768:
  1019                           
  1020                           ;KEYPAD.c: 56:     PORTD = 0x00;
  1021     0704  1283               	bcf	3,5	;RP0=0, select bank0
  1022     0705  1303               	bcf	3,6	;RP1=0, select bank0
  1023     0706  0188               	clrf	8	;volatile
  1024     0707                     l770:
  1025                           
  1026                           ;KEYPAD.c: 57:     OPTION_REG &= 0x7F;
  1027     0707  307F               	movlw	127
  1028     0708  00FF               	movwf	btemp+1
  1029     0709  087F               	movf	btemp+1,w
  1030     070A  1683               	bsf	3,5	;RP0=1, select bank1
  1031     070B  1303               	bcf	3,6	;RP1=0, select bank1
  1032     070C  0581               	andwf	1,f	;volatile
  1033     070D                     l772:
  1034                           
  1035                           ;KEYPAD.c: 60:     lcd_Command(0x33);
  1036     070D  3033               	movlw	51
  1037     070E  120A  118A  269D  120A  118A  	fcall	_lcd_Command
  1038     0713                     l774:
  1039                           
  1040                           ;KEYPAD.c: 61:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1041     0713  30C3               	movlw	195
  1042     0714  00F4               	movwf	??_init+1
  1043     0715  30CD               	movlw	205
  1044     0716  00F3               	movwf	??_init
  1045     0717                     u297:
  1046     0717  0BF3               	decfsz	??_init,f
  1047     0718  2F17               	goto	u297
  1048     0719  0BF4               	decfsz	??_init+1,f
  1049     071A  2F17               	goto	u297
  1050     071B                     l776:
  1051                           
  1052                           ;KEYPAD.c: 62:     lcd_Command(0x34);
  1053     071B  3034               	movlw	52
  1054     071C  120A  118A  269D  120A  118A  	fcall	_lcd_Command
  1055     0721                     l778:
  1056                           
  1057                           ;KEYPAD.c: 63:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1058     0721  30C3               	movlw	195
  1059     0722  00F4               	movwf	??_init+1
  1060     0723  30CD               	movlw	205
  1061     0724  00F3               	movwf	??_init
  1062     0725                     u307:
  1063     0725  0BF3               	decfsz	??_init,f
  1064     0726  2F25               	goto	u307
  1065     0727  0BF4               	decfsz	??_init+1,f
  1066     0728  2F25               	goto	u307
  1067     0729                     l780:
  1068                           
  1069                           ;KEYPAD.c: 64:     lcd_Command(0x35);
  1070     0729  3035               	movlw	53
  1071     072A  120A  118A  269D  120A  118A  	fcall	_lcd_Command
  1072     072F                     l782:
  1073                           
  1074                           ;KEYPAD.c: 65:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1075     072F  30C3               	movlw	195
  1076     0730  00F4               	movwf	??_init+1
  1077     0731  30CD               	movlw	205
  1078     0732  00F3               	movwf	??_init
  1079     0733                     u317:
  1080     0733  0BF3               	decfsz	??_init,f
  1081     0734  2F33               	goto	u317
  1082     0735  0BF4               	decfsz	??_init+1,f
  1083     0736  2F33               	goto	u317
  1084     0737                     l784:
  1085                           
  1086                           ;KEYPAD.c: 66:     lcd_Command(0x38);
  1087     0737  3038               	movlw	56
  1088     0738  120A  118A  269D  120A  118A  	fcall	_lcd_Command
  1089     073D                     l786:
  1090                           
  1091                           ;KEYPAD.c: 67:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1092     073D  30C3               	movlw	195
  1093     073E  00F4               	movwf	??_init+1
  1094     073F  30CD               	movlw	205
  1095     0740  00F3               	movwf	??_init
  1096     0741                     u327:
  1097     0741  0BF3               	decfsz	??_init,f
  1098     0742  2F41               	goto	u327
  1099     0743  0BF4               	decfsz	??_init+1,f
  1100     0744  2F41               	goto	u327
  1101     0745                     l788:
  1102                           
  1103                           ;KEYPAD.c: 68:     lcd_Command(0x0C);
  1104     0745  300C               	movlw	12
  1105     0746  120A  118A  269D  120A  118A  	fcall	_lcd_Command
  1106     074B                     l790:
  1107                           
  1108                           ;KEYPAD.c: 69:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1109     074B  30C3               	movlw	195
  1110     074C  00F4               	movwf	??_init+1
  1111     074D  30CD               	movlw	205
  1112     074E  00F3               	movwf	??_init
  1113     074F                     u337:
  1114     074F  0BF3               	decfsz	??_init,f
  1115     0750  2F4F               	goto	u337
  1116     0751  0BF4               	decfsz	??_init+1,f
  1117     0752  2F4F               	goto	u337
  1118     0753                     l792:
  1119                           
  1120                           ;KEYPAD.c: 70:     lcd_Command(0x01);
  1121     0753  3001               	movlw	1
  1122     0754  120A  118A  269D  120A  118A  	fcall	_lcd_Command
  1123     0759                     l794:
  1124                           
  1125                           ;KEYPAD.c: 71:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1126     0759  30C3               	movlw	195
  1127     075A  00F4               	movwf	??_init+1
  1128     075B  30CD               	movlw	205
  1129     075C  00F3               	movwf	??_init
  1130     075D                     u347:
  1131     075D  0BF3               	decfsz	??_init,f
  1132     075E  2F5D               	goto	u347
  1133     075F  0BF4               	decfsz	??_init+1,f
  1134     0760  2F5D               	goto	u347
  1135     0761                     l57:
  1136     0761  0008               	return
  1137     0762                     __end_of_init:
  1138                           
  1139                           	psect	text5
  1140     069D                     __ptext5:	
  1141 ;; *************** function _lcd_Command *****************
  1142 ;; Defined at:
  1143 ;;		line 83 in file "KEYPAD.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  i               1    wreg     unsigned char 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  i               1    2[COMMON] unsigned char 
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, status,2, status,0, btemp+1
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1157 ;;      Params:         0       0       0       0       0
  1158 ;;      Locals:         1       0       0       0       0
  1159 ;;      Temps:          2       0       0       0       0
  1160 ;;      Totals:         3       0       0       0       0
  1161 ;;Total ram usage:        3 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;;		_init
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171     069D                     _lcd_Command:	
  1172                           ;psect for function _lcd_Command
  1173                           
  1174                           
  1175                           ;incstack = 0
  1176                           ; Regs used in _lcd_Command: [wreg+status,2+status,0+btemp+1]
  1177                           ;lcd_Command@i stored from wreg
  1178     069D  00F2               	movwf	lcd_Command@i
  1179     069E                     l664:
  1180                           
  1181                           ;KEYPAD.c: 84:     PORTC &= ~0x01;
  1182     069E  30FE               	movlw	254
  1183     069F  00FF               	movwf	btemp+1
  1184     06A0  087F               	movf	btemp+1,w
  1185     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1186     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1187     06A3  0587               	andwf	7,f	;volatile
  1188     06A4                     l666:
  1189                           
  1190                           ;KEYPAD.c: 85:     PORTD = i;
  1191     06A4  0872               	movf	lcd_Command@i,w
  1192     06A5  0088               	movwf	8	;volatile
  1193     06A6                     l668:
  1194                           
  1195                           ;KEYPAD.c: 86:     PORTC |= 0x08;
  1196     06A6  1587               	bsf	7,3	;volatile
  1197     06A7                     l670:
  1198                           
  1199                           ;KEYPAD.c: 87:     _delay((unsigned long)((1)*(6000000/4000.0)));
  1200     06A7  30D6               	movlw	214
  1201     06A8  00F0               	movwf	??_lcd_Command
  1202     06A9                     u357:
  1203     06A9  2EAA               	nop2
  1204     06AA  2EAB               	nop2
  1205     06AB  0BF0               	decfsz	??_lcd_Command,f
  1206     06AC  2EA9               	goto	u357
  1207     06AD  0000               	nop
  1208                           
  1209                           ;KEYPAD.c: 88:     PORTC &= ~0x08;
  1210     06AE  30F7               	movlw	247
  1211     06AF  00FF               	movwf	btemp+1
  1212     06B0  087F               	movf	btemp+1,w
  1213     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1214     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1215     06B3  0587               	andwf	7,f	;volatile
  1216     06B4                     l672:
  1217                           
  1218                           ;KEYPAD.c: 89:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1219     06B4  30C3               	movlw	195
  1220     06B5  00F1               	movwf	??_lcd_Command+1
  1221     06B6  30CD               	movlw	205
  1222     06B7  00F0               	movwf	??_lcd_Command
  1223     06B8                     u367:
  1224     06B8  0BF0               	decfsz	??_lcd_Command,f
  1225     06B9  2EB8               	goto	u367
  1226     06BA  0BF1               	decfsz	??_lcd_Command+1,f
  1227     06BB  2EB8               	goto	u367
  1228     06BC                     l63:
  1229     06BC  0008               	return
  1230     06BD                     __end_of_lcd_Command:
  1231     007E                     btemp	set	126	;btemp
  1232     007E                     wtemp0	set	126
  1233                           
  1234                           	psect	config
  1235                           
  1236                           ;Config register CONFIG @ 0x2007
  1237                           ;	Oscillator Selection bits
  1238                           ;	FOSC = EXTRC, RC oscillator
  1239                           ;	Watchdog Timer Enable bit
  1240                           ;	WDTE = OFF, WDT disabled
  1241                           ;	Power-up Timer Enable bit
  1242                           ;	PWRTE = OFF, PWRT disabled
  1243                           ;	Brown-out Reset Enable bit
  1244                           ;	BOREN = OFF, BOR disabled
  1245                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1246                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1247                           ;	Data EEPROM Memory Code Protection bit
  1248                           ;	CPD = OFF, Data EEPROM code protection off
  1249                           ;	Flash Program Memory Write Enable bits
  1250                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1251                           ;	In-Circuit Debugger Mode bit
  1252                           ;	DEBUG = 0x1, unprogrammed default
  1253                           ;	Flash Program Memory Code Protection bit
  1254                           ;	CP = OFF, Code protection off
  1255     2007                     	org	8199
  1256     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_lcd_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                               _init
                        _lcd_Command
                           _lcd_Data
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    1     1      0      30
                                              0 COMMON     1     1      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_Data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      15
                                              3 COMMON     2     2      0
                        _lcd_Command
 ---------------------------------------------------------------------------------
 (1) _lcd_Command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _lcd_Command
   _lcd_Command
   _lcd_Data
   _switch_press_scan
     _keypad_scanner

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      16      12        0.0%
ABS                  0      0      16       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 16 14:38:26 2024

                        _i 0075                          pc 0002                         l60 069C  
                       l70 07E6                         l63 06BC                         l71 077B  
                       l80 0789                         l72 0775                         l57 0761  
                       l66 0771                         l91 07B0                         l83 079C  
                       l75 0785                         l67 076B                         l92 07AA  
                       l84 0796                         l76 077F                         l95 07BA  
                       l87 07A6                         l79 078F                         l96 07B4  
                       l88 07A0                         l99 07C7                         u10 076B  
                       u11 076A                         u20 076F                         u21 076E  
                       u30 0775                         u31 0774                         u40 0779  
                       u41 0778                         u50 077F                         u51 077E  
                       u60 0783                         u61 0782                         u70 0789  
                       u71 0788                         u80 078D                         u81 078C  
                       u90 0796                         u91 0795                         fsr 0004  
                      l100 07C1                        l103 07D1                        l112 07DF  
                      l104 07CB                        l120 066C                        l107 07DB  
                      l108 07D5                        l710 079A                        l800 0686  
                      l704 078D                        l802 068E                        l722 07AE  
                      l810 0665                        l804 0694                        l740 07CF  
                      l716 07A4                        l812 066B                        l670 06A7  
                      l734 07C5                        l806 065C                        l830 06DD  
                      l672 06B4                        l664 069E                        l760 06F3  
                      l752 07E3                        l728 07B8                        l680 0766  
                      l808 065F                        l832 06E3                        l824 06C9  
                      l816 06BD                        l666 06A4                        l770 0707  
                      l762 06FB                        l746 07D9                        l682 0767  
                      l674 0762                        l834 06E9                        l826 06D3  
                      l818 06C8                        l668 06A6                        l780 0729  
                      l772 070D                        l764 06FE                        l756 07E5  
                      l692 0779                        l676 0762                        l828 06D7  
                      l790 074B                        l782 072F                        l774 0713  
                      l766 0701                        l686 076F                        l678 0765  
                      l792 0753                        l784 0737                        l776 071B  
                      l768 0704                        l794 0759                        l786 073D  
                      l778 0721                        l698 0783                        l788 0745  
                      l796 0681                        l798 0684                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB4 0034  
                      _RB5 0035                        _RB6 0036                        _RB7 0037  
                      u100 079A                        u101 0799                        u110 07A0  
                      u111 079F                        u200 07CF                        u120 07A4  
                      u201 07CE                        u121 07A3                        u210 07D5  
                      u130 07AA                        u211 07D4                        u131 07A9  
                      u220 07D9                        u140 07AE                        u221 07D8  
                      u141 07AD                        u230 07DF                        u150 07B4  
                      u231 07DE                        u151 07B3                        u240 07E3  
                      u160 07B8                        u241 07E2                        u161 07B7  
                      u170 07C1                        u250 066B                        u307 0725  
                      u171 07C0                        u251 066A                        u180 07C5  
                      u260 06DD                        u317 0733                        u181 07C4  
                      u261 06DC                        u190 07CB                        u327 0741  
                      u191 07CA                        u337 074F                        u347 075D  
                      u357 06A9                        u277 0689                        u367 06B8  
                      u287 0698                        u297 0717                        _Key 0076  
                      fsr0 0004                        indf 0000                       _arr3 0020  
                     _main 06BD                       _init 06F3                       btemp 007E  
                     start 0000                      ?_main 0070                      ?_init 0070  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
         ??_keypad_scanner 0070                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 07E7               __end_of_main 06F3  
             __end_of_init 0762                     ??_main 0075                     ??_init 0073  
         __end_of_lcd_Data 069D               __pdataCOMMON 0076    __end_of__initialization 07FC  
           __pcstackCOMMON 0070               __pidataBANK0 064D                 __pmaintext 06BD  
                ?_lcd_Data 0070                    __ptext1 065C                    __ptext2 0762  
                  __ptext3 0680                    __ptext4 06F3                    __ptext5 069D  
               ??_lcd_Data 0070       end_of_initialization 07FC              ??_lcd_Command 0070  
     switch_press_scan@key 0070              __pidataCOMMON 064C        start_initialization 07E7  
      __end_of_lcd_Command 06BD                 init_fetch0 066D                __pdataBANK0 0020  
              __pbssCOMMON 0075                  ___latbits 0002                _lcd_Command 069D  
           _keypad_scanner 0762                  lcd_Data@i 0072          _switch_press_scan 065C  
       ?_switch_press_scan 0070        ??_switch_press_scan 0070     __end_of_keypad_scanner 07E7  
__end_of_switch_press_scan 066D                   _lcd_Data 0680            ?_keypad_scanner 0070  
                 init_ram0 0671               lcd_Command@i 0072                 _OPTION_REG 0081  
             ?_lcd_Command 0070  
