

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Nov 08 20:39:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0013                     _SSPBUF	set	19
   177     0014                     _SSPCON	set	20
   178     0008                     _PORTD	set	8
   179     0063                     _SSPIF	set	99
   180     0087                     _TRISC	set	135
   181     0094                     _SSPSTAT	set	148
   182     0093                     _SSPADD	set	147
   183     0091                     _SSPCON2	set	145
   184     0088                     _TRISD	set	136
   185     048C                     _ACKEN	set	1164
   186     048D                     _ACKDT	set	1165
   187     048E                     _ACKSTAT	set	1166
   188                           
   189                           	psect	cinit
   190     07FC                     start_initialization:	
   191                           ; #config settings
   192                           
   193     07FC                     __initialization:
   194     07FC                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197     07FC                     __end_of__initialization:
   198     07FC  0183               	clrf	3
   199     07FD  120A  118A  2F37   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	cstackCOMMON
   202     0070                     __pcstackCOMMON:
   203     0070                     ?_EEPROM_Read:
   204     0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ?_I2C_Master_Wait:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ??_I2C_Master_Wait:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ?_I2C_Master_Start:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ??_I2C_Master_Start:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ?_I2C_Master_RepeatedStart:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ??_I2C_Master_RepeatedStart:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ?_I2C_Master_Stop:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     ??_I2C_Master_Stop:	
   229                           ; 1 bytes @ 0x0
   230                           
   231     0070                     ?_I2C_Master_Write:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     ??_I2C_Master_Write:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0070                     ?_I2C_Read_Byte:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ??_I2C_Read_Byte:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_I2C_NACK:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ??_I2C_NACK:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?___lldiv:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     I2C_Master_Write@data:	
   253                           ; 4 bytes @ 0x0
   254                           
   255     0070                     ___lldiv@divisor:	
   256                           ; 1 bytes @ 0x0
   257                           
   258                           
   259                           ; 4 bytes @ 0x0
   260     0070                     	ds	1
   261     0071                     ?_EEPROM_Write:
   262     0071                     ??_EEPROM_Read:	
   263                           ; 1 bytes @ 0x1
   264                           
   265     0071                     EEPROM_Write@data:	
   266                           ; 1 bytes @ 0x1
   267                           
   268     0071                     EEPROM_Read@add:	
   269                           ; 1 bytes @ 0x1
   270                           
   271                           
   272                           ; 1 bytes @ 0x1
   273     0071                     	ds	1
   274     0072                     ??_EEPROM_Write:
   275     0072                     EEPROM_Write@add:	
   276                           ; 1 bytes @ 0x2
   277                           
   278     0072                     EEPROM_Read@Data:	
   279                           ; 1 bytes @ 0x2
   280                           
   281                           
   282                           ; 1 bytes @ 0x2
   283     0072                     	ds	2
   284     0074                     ___lldiv@dividend:
   285                           
   286                           ; 4 bytes @ 0x4
   287     0074                     	ds	4
   288     0078                     ??___lldiv:
   289                           
   290                           ; 1 bytes @ 0x8
   291     0078                     	ds	1
   292     0079                     ___lldiv@quotient:
   293                           
   294                           ; 4 bytes @ 0x9
   295     0079                     	ds	4
   296     007D                     ___lldiv@counter:
   297                           
   298                           ; 1 bytes @ 0xD
   299     007D                     	ds	1
   300                           
   301                           	psect	cstackBANK0
   302     0020                     __pcstackBANK0:
   303     0020                     ?_I2C_Master_init:
   304     0020                     I2C_Master_init@baud:	
   305                           ; 1 bytes @ 0x0
   306                           
   307                           
   308                           ; 4 bytes @ 0x0
   309     0020                     	ds	4
   310     0024                     ??_I2C_Master_init:
   311                           
   312                           ; 1 bytes @ 0x4
   313     0024                     	ds	4
   314     0028                     ??_main:
   315                           
   316                           ; 1 bytes @ 0x8
   317     0028                     	ds	3
   318     002B                     main@ret1:
   319                           
   320                           ; 1 bytes @ 0xB
   321     002B                     	ds	1
   322     002C                     main@ret2:
   323                           
   324                           ; 1 bytes @ 0xC
   325     002C                     	ds	1
   326     002D                     main@ret3:
   327                           
   328                           ; 1 bytes @ 0xD
   329     002D                     	ds	1
   330     002E                     main@Data:
   331                           
   332                           ; 1 bytes @ 0xE
   333     002E                     	ds	1
   334     002F                     main@Address:
   335                           
   336                           ; 2 bytes @ 0xF
   337     002F                     	ds	2
   338                           
   339                           	psect	maintext
   340     0737                     __pmaintext:	
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 28 in file "class.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  Address         2   15[BANK0 ] unsigned int 
   351 ;;  Data            1   14[BANK0 ] unsigned char 
   352 ;;  ret3            1   13[BANK0 ] unsigned char 
   353 ;;  ret2            1   12[BANK0 ] unsigned char 
   354 ;;  ret1            1   11[BANK0 ] unsigned char 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : B00/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       6       0       0       0
   366 ;;      Temps:          0       3       0       0       0
   367 ;;      Totals:         0       9       0       0       0
   368 ;;Total ram usage:        9 bytes
   369 ;; Hardware stack levels required when called: 3
   370 ;; This function calls:
   371 ;;		_EEPROM_Read
   372 ;;		_EEPROM_Write
   373 ;;		_I2C_Master_init
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379     0737                     _main:	
   380                           ;psect for function _main
   381                           
   382     0737                     l872:	
   383                           ;incstack = 0
   384                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   385                           
   386                           
   387                           ;class.c: 29:     I2C_Master_init(100000);
   388     0737  3000               	movlw	0
   389     0738  1283               	bcf	3,5	;RP0=0, select bank0
   390     0739  1303               	bcf	3,6	;RP1=0, select bank0
   391     073A  00A3               	movwf	I2C_Master_init@baud+3
   392     073B  3001               	movlw	1
   393     073C  00A2               	movwf	I2C_Master_init@baud+2
   394     073D  3086               	movlw	134
   395     073E  00A1               	movwf	I2C_Master_init@baud+1
   396     073F  30A0               	movlw	160
   397     0740  00A0               	movwf	I2C_Master_init@baud
   398     0741  120A  118A  2659  120A  118A  	fcall	_I2C_Master_init
   399     0746                     l874:
   400                           
   401                           ;class.c: 30:     unsigned int Address = 0x0020;
   402     0746  3020               	movlw	32
   403     0747  1283               	bcf	3,5	;RP0=0, select bank0
   404     0748  1303               	bcf	3,6	;RP1=0, select bank0
   405     0749  00AF               	movwf	main@Address
   406     074A  3000               	movlw	0
   407     074B  00B0               	movwf	main@Address+1
   408     074C                     l876:
   409                           
   410                           ;class.c: 31:     unsigned char Data = 0x04;
   411     074C  3004               	movlw	4
   412     074D  00AE               	movwf	main@Data
   413     074E                     l878:
   414                           
   415                           ;class.c: 32:     unsigned char ret1, ret2, ret3;;class.c: 35:     EEPROM_Write(Address+
      +                          +, Data++);
   416     074E  3004               	movlw	4
   417     074F  00F1               	movwf	EEPROM_Write@data
   418     0750  3020               	movlw	32
   419     0751  120A  118A  262A  120A  118A  	fcall	_EEPROM_Write
   420     0756                     l880:
   421     0756  3001               	movlw	1
   422     0757  00FF               	movwf	btemp+1
   423     0758  087F               	movf	btemp+1,w
   424     0759  1283               	bcf	3,5	;RP0=0, select bank0
   425     075A  1303               	bcf	3,6	;RP1=0, select bank0
   426     075B  07AE               	addwf	main@Data,f
   427     075C                     l882:
   428     075C  3001               	movlw	1
   429     075D  07AF               	addwf	main@Address,f
   430     075E  1803               	skipnc
   431     075F  0AB0               	incf	main@Address+1,f
   432     0760  3000               	movlw	0
   433     0761  07B0               	addwf	main@Address+1,f
   434     0762                     l884:
   435                           
   436                           ;class.c: 36:     _delay((unsigned long)((10)*(16000000/4000.0)));
   437     0762  3034               	movlw	52
   438     0763  1283               	bcf	3,5	;RP0=0, select bank0
   439     0764  1303               	bcf	3,6	;RP1=0, select bank0
   440     0765  00A9               	movwf	??_main+1
   441     0766  30F1               	movlw	241
   442     0767  00A8               	movwf	??_main
   443     0768                     u297:
   444     0768  0BA8               	decfsz	??_main,f
   445     0769  2F68               	goto	u297
   446     076A  0BA9               	decfsz	??_main+1,f
   447     076B  2F68               	goto	u297
   448     076C                     l886:
   449                           
   450                           ;class.c: 37:     EEPROM_Write(Address++, Data++);
   451     076C  1283               	bcf	3,5	;RP0=0, select bank0
   452     076D  1303               	bcf	3,6	;RP1=0, select bank0
   453     076E  082E               	movf	main@Data,w
   454     076F  00F1               	movwf	EEPROM_Write@data
   455     0770  082F               	movf	main@Address,w
   456     0771  120A  118A  262A  120A  118A  	fcall	_EEPROM_Write
   457     0776                     l888:
   458     0776  3001               	movlw	1
   459     0777  00FF               	movwf	btemp+1
   460     0778  087F               	movf	btemp+1,w
   461     0779  1283               	bcf	3,5	;RP0=0, select bank0
   462     077A  1303               	bcf	3,6	;RP1=0, select bank0
   463     077B  07AE               	addwf	main@Data,f
   464     077C                     l890:
   465     077C  3001               	movlw	1
   466     077D  07AF               	addwf	main@Address,f
   467     077E  1803               	skipnc
   468     077F  0AB0               	incf	main@Address+1,f
   469     0780  3000               	movlw	0
   470     0781  07B0               	addwf	main@Address+1,f
   471     0782                     l892:
   472                           
   473                           ;class.c: 38:     _delay((unsigned long)((10)*(16000000/4000.0)));
   474     0782  3034               	movlw	52
   475     0783  1283               	bcf	3,5	;RP0=0, select bank0
   476     0784  1303               	bcf	3,6	;RP1=0, select bank0
   477     0785  00A9               	movwf	??_main+1
   478     0786  30F1               	movlw	241
   479     0787  00A8               	movwf	??_main
   480     0788                     u307:
   481     0788  0BA8               	decfsz	??_main,f
   482     0789  2F88               	goto	u307
   483     078A  0BA9               	decfsz	??_main+1,f
   484     078B  2F88               	goto	u307
   485     078C                     l894:
   486                           
   487                           ;class.c: 39:     EEPROM_Write(Address, Data);
   488     078C  1283               	bcf	3,5	;RP0=0, select bank0
   489     078D  1303               	bcf	3,6	;RP1=0, select bank0
   490     078E  082E               	movf	main@Data,w
   491     078F  00F1               	movwf	EEPROM_Write@data
   492     0790  082F               	movf	main@Address,w
   493     0791  120A  118A  262A  120A  118A  	fcall	_EEPROM_Write
   494     0796                     l896:
   495                           
   496                           ;class.c: 40:     _delay((unsigned long)((10)*(16000000/4000.0)));
   497     0796  3034               	movlw	52
   498     0797  1283               	bcf	3,5	;RP0=0, select bank0
   499     0798  1303               	bcf	3,6	;RP1=0, select bank0
   500     0799  00A9               	movwf	??_main+1
   501     079A  30F1               	movlw	241
   502     079B  00A8               	movwf	??_main
   503     079C                     u317:
   504     079C  0BA8               	decfsz	??_main,f
   505     079D  2F9C               	goto	u317
   506     079E  0BA9               	decfsz	??_main+1,f
   507     079F  2F9C               	goto	u317
   508     07A0                     l898:
   509                           
   510                           ;class.c: 43:     Address = 0x0020;
   511     07A0  3020               	movlw	32
   512     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   513     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   514     07A3  00AF               	movwf	main@Address
   515     07A4  3000               	movlw	0
   516     07A5  00B0               	movwf	main@Address+1
   517     07A6                     l900:
   518                           
   519                           ;class.c: 44:     TRISD = 0x00;
   520     07A6  1683               	bsf	3,5	;RP0=1, select bank1
   521     07A7  1303               	bcf	3,6	;RP1=0, select bank1
   522     07A8  0188               	clrf	8	;volatile
   523     07A9                     l902:
   524                           
   525                           ;class.c: 45:     ret1 = EEPROM_Read(Address++);
   526     07A9  3020               	movlw	32
   527     07AA  120A  118A  2691  120A  118A  	fcall	_EEPROM_Read
   528     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   529     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   530     07B1  00AB               	movwf	main@ret1
   531     07B2                     l904:
   532     07B2  3001               	movlw	1
   533     07B3  07AF               	addwf	main@Address,f
   534     07B4  1803               	skipnc
   535     07B5  0AB0               	incf	main@Address+1,f
   536     07B6  3000               	movlw	0
   537     07B7  07B0               	addwf	main@Address+1,f
   538     07B8                     l906:
   539                           
   540                           ;class.c: 46:     PORTD = ret1;
   541     07B8  082B               	movf	main@ret1,w
   542     07B9  0088               	movwf	8	;volatile
   543     07BA                     l908:
   544                           
   545                           ;class.c: 47:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   546     07BA  3015               	movlw	21
   547     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   548     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   549     07BD  00AA               	movwf	??_main+2
   550     07BE  304B               	movlw	75
   551     07BF  00A9               	movwf	??_main+1
   552     07C0  30BD               	movlw	189
   553     07C1  00A8               	movwf	??_main
   554     07C2                     u327:
   555     07C2  0BA8               	decfsz	??_main,f
   556     07C3  2FC2               	goto	u327
   557     07C4  0BA9               	decfsz	??_main+1,f
   558     07C5  2FC2               	goto	u327
   559     07C6  0BAA               	decfsz	??_main+2,f
   560     07C7  2FC2               	goto	u327
   561     07C8  2FC9               	nop2
   562     07C9                     l910:
   563                           
   564                           ;class.c: 48:     ret2 = EEPROM_Read(Address++);
   565     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   566     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   567     07CB  082F               	movf	main@Address,w
   568     07CC  120A  118A  2691  120A  118A  	fcall	_EEPROM_Read
   569     07D1  1283               	bcf	3,5	;RP0=0, select bank0
   570     07D2  1303               	bcf	3,6	;RP1=0, select bank0
   571     07D3  00AC               	movwf	main@ret2
   572     07D4                     l912:
   573     07D4  3001               	movlw	1
   574     07D5  07AF               	addwf	main@Address,f
   575     07D6  1803               	skipnc
   576     07D7  0AB0               	incf	main@Address+1,f
   577     07D8  3000               	movlw	0
   578     07D9  07B0               	addwf	main@Address+1,f
   579     07DA                     l914:
   580                           
   581                           ;class.c: 49:     PORTD = ret2;
   582     07DA  082C               	movf	main@ret2,w
   583     07DB  0088               	movwf	8	;volatile
   584     07DC                     l916:
   585                           
   586                           ;class.c: 50:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   587     07DC  3015               	movlw	21
   588     07DD  1283               	bcf	3,5	;RP0=0, select bank0
   589     07DE  1303               	bcf	3,6	;RP1=0, select bank0
   590     07DF  00AA               	movwf	??_main+2
   591     07E0  304B               	movlw	75
   592     07E1  00A9               	movwf	??_main+1
   593     07E2  30BD               	movlw	189
   594     07E3  00A8               	movwf	??_main
   595     07E4                     u337:
   596     07E4  0BA8               	decfsz	??_main,f
   597     07E5  2FE4               	goto	u337
   598     07E6  0BA9               	decfsz	??_main+1,f
   599     07E7  2FE4               	goto	u337
   600     07E8  0BAA               	decfsz	??_main+2,f
   601     07E9  2FE4               	goto	u337
   602     07EA  2FEB               	nop2
   603     07EB                     l918:
   604                           
   605                           ;class.c: 51:     ret3 = EEPROM_Read(Address);
   606     07EB  1283               	bcf	3,5	;RP0=0, select bank0
   607     07EC  1303               	bcf	3,6	;RP1=0, select bank0
   608     07ED  082F               	movf	main@Address,w
   609     07EE  120A  118A  2691  120A  118A  	fcall	_EEPROM_Read
   610     07F3  1283               	bcf	3,5	;RP0=0, select bank0
   611     07F4  1303               	bcf	3,6	;RP1=0, select bank0
   612     07F5  00AD               	movwf	main@ret3
   613     07F6                     l920:
   614                           
   615                           ;class.c: 52:     PORTD = ret3;
   616     07F6  082D               	movf	main@ret3,w
   617     07F7  0088               	movwf	8	;volatile
   618     07F8                     l37:	
   619                           ;class.c: 54:     while (1) {
   620                           
   621     07F8                     l38:	
   622                           ;class.c: 56:     }
   623                           
   624     07F8  2FF8               	goto	l37
   625     07F9  120A  118A  2800   	ljmp	start
   626     07FC                     __end_of_main:
   627                           
   628                           	psect	text1
   629     0659                     __ptext1:	
   630 ;; *************** function _I2C_Master_init *****************
   631 ;; Defined at:
   632 ;;		line 62 in file "class.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  baud            4    0[BANK0 ] const unsigned long 
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       4       0       0       0
   647 ;;      Locals:         0       0       0       0       0
   648 ;;      Temps:          0       4       0       0       0
   649 ;;      Totals:         0       8       0       0       0
   650 ;;Total ram usage:        8 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 1
   653 ;; This function calls:
   654 ;;		___lldiv
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660     0659                     _I2C_Master_init:	
   661                           ;psect for function _I2C_Master_init
   662                           
   663     0659                     l846:	
   664                           ;incstack = 0
   665                           ; Regs used in _I2C_Master_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   666                           
   667                           
   668                           ;class.c: 63:     SSPCON = 0x28;
   669     0659  3028               	movlw	40
   670     065A  1283               	bcf	3,5	;RP0=0, select bank0
   671     065B  1303               	bcf	3,6	;RP1=0, select bank0
   672     065C  0094               	movwf	20	;volatile
   673     065D                     l848:
   674                           
   675                           ;class.c: 64:     SSPCON2 = 0;
   676     065D  1683               	bsf	3,5	;RP0=1, select bank1
   677     065E  1303               	bcf	3,6	;RP1=0, select bank1
   678     065F  0191               	clrf	17	;volatile
   679     0660                     l850:
   680                           
   681                           ;class.c: 65:     SSPADD = (16000000 / (4 * baud)) - 1;
   682     0660  1283               	bcf	3,5	;RP0=0, select bank0
   683     0661  1303               	bcf	3,6	;RP1=0, select bank0
   684     0662  0820               	movf	I2C_Master_init@baud,w
   685     0663  00A4               	movwf	??_I2C_Master_init
   686     0664  0821               	movf	I2C_Master_init@baud+1,w
   687     0665  00A5               	movwf	??_I2C_Master_init+1
   688     0666  0822               	movf	I2C_Master_init@baud+2,w
   689     0667  00A6               	movwf	??_I2C_Master_init+2
   690     0668  0823               	movf	I2C_Master_init@baud+3,w
   691     0669  00A7               	movwf	??_I2C_Master_init+3
   692     066A  3002               	movlw	2
   693     066B                     u265:
   694     066B  1003               	clrc
   695     066C  0DA4               	rlf	??_I2C_Master_init,f
   696     066D  0DA5               	rlf	??_I2C_Master_init+1,f
   697     066E  0DA6               	rlf	??_I2C_Master_init+2,f
   698     066F  0DA7               	rlf	??_I2C_Master_init+3,f
   699     0670                     u260:
   700     0670  3EFF               	addlw	-1
   701     0671  1D03               	skipz
   702     0672  2E6B               	goto	u265
   703     0673  0827               	movf	??_I2C_Master_init+3,w
   704     0674  00F3               	movwf	___lldiv@divisor+3
   705     0675  0826               	movf	??_I2C_Master_init+2,w
   706     0676  00F2               	movwf	___lldiv@divisor+2
   707     0677  0825               	movf	??_I2C_Master_init+1,w
   708     0678  00F1               	movwf	___lldiv@divisor+1
   709     0679  0824               	movf	??_I2C_Master_init,w
   710     067A  00F0               	movwf	___lldiv@divisor
   711     067B  3000               	movlw	0
   712     067C  00F7               	movwf	___lldiv@dividend+3
   713     067D  30F4               	movlw	244
   714     067E  00F6               	movwf	___lldiv@dividend+2
   715     067F  3024               	movlw	36
   716     0680  00F5               	movwf	___lldiv@dividend+1
   717     0681  3000               	movlw	0
   718     0682  00F4               	movwf	___lldiv@dividend
   719     0683  120A  118A  26D1  120A  118A  	fcall	___lldiv
   720     0688  0870               	movf	?___lldiv,w
   721     0689  3EFF               	addlw	255
   722     068A  1683               	bsf	3,5	;RP0=1, select bank1
   723     068B  1303               	bcf	3,6	;RP1=0, select bank1
   724     068C  0093               	movwf	19	;volatile
   725     068D                     l852:
   726                           
   727                           ;class.c: 66:     SSPSTAT = 0;
   728     068D  0194               	clrf	20	;volatile
   729     068E                     l854:
   730                           
   731                           ;class.c: 67:     TRISC = 0x18;
   732     068E  3018               	movlw	24
   733     068F  0087               	movwf	7	;volatile
   734     0690                     l43:
   735     0690  0008               	return
   736     0691                     __end_of_I2C_Master_init:
   737                           
   738                           	psect	text2
   739     06D1                     __ptext2:	
   740 ;; *************** function ___lldiv *****************
   741 ;; Defined at:
   742 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  divisor         4    0[COMMON] unsigned long 
   745 ;;  dividend        4    4[COMMON] unsigned long 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  quotient        4    9[COMMON] unsigned long 
   748 ;;  counter         1   13[COMMON] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  4    0[COMMON] unsigned long 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, btemp+1
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         8       0       0       0       0
   759 ;;      Locals:         5       0       0       0       0
   760 ;;      Temps:          1       0       0       0       0
   761 ;;      Totals:        14       0       0       0       0
   762 ;;Total ram usage:       14 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_I2C_Master_init
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     06D1                     ___lldiv:	
   772                           ;psect for function ___lldiv
   773                           
   774     06D1                     l820:	
   775                           ;incstack = 0
   776                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
   777                           
   778     06D1  3000               	movlw	0
   779     06D2  00FC               	movwf	___lldiv@quotient+3
   780     06D3  3000               	movlw	0
   781     06D4  00FB               	movwf	___lldiv@quotient+2
   782     06D5  3000               	movlw	0
   783     06D6  00FA               	movwf	___lldiv@quotient+1
   784     06D7  3000               	movlw	0
   785     06D8  00F9               	movwf	___lldiv@quotient
   786     06D9  0873               	movf	___lldiv@divisor+3,w
   787     06DA  0472               	iorwf	___lldiv@divisor+2,w
   788     06DB  0471               	iorwf	___lldiv@divisor+1,w
   789     06DC  0470               	iorwf	___lldiv@divisor,w
   790     06DD  1903               	skipnz
   791     06DE  2EE0               	goto	u191
   792     06DF  2EE1               	goto	u190
   793     06E0                     u191:
   794     06E0  2F2E               	goto	l842
   795     06E1                     u190:
   796     06E1                     l822:
   797     06E1  01FD               	clrf	___lldiv@counter
   798     06E2  0AFD               	incf	___lldiv@counter,f
   799     06E3  2EF1               	goto	l828
   800     06E4                     l824:
   801     06E4  3001               	movlw	1
   802     06E5  00F8               	movwf	??___lldiv
   803     06E6                     u205:
   804     06E6  1003               	clrc
   805     06E7  0DF0               	rlf	___lldiv@divisor,f
   806     06E8  0DF1               	rlf	___lldiv@divisor+1,f
   807     06E9  0DF2               	rlf	___lldiv@divisor+2,f
   808     06EA  0DF3               	rlf	___lldiv@divisor+3,f
   809     06EB  0BF8               	decfsz	??___lldiv,f
   810     06EC  2EE6               	goto	u205
   811     06ED                     l826:
   812     06ED  3001               	movlw	1
   813     06EE  00FF               	movwf	btemp+1
   814     06EF  087F               	movf	btemp+1,w
   815     06F0  07FD               	addwf	___lldiv@counter,f
   816     06F1                     l828:
   817     06F1  1FF3               	btfss	___lldiv@divisor+3,7
   818     06F2  2EF4               	goto	u211
   819     06F3  2EF5               	goto	u210
   820     06F4                     u211:
   821     06F4  2EE4               	goto	l824
   822     06F5                     u210:
   823     06F5                     l830:
   824     06F5  3001               	movlw	1
   825     06F6  00F8               	movwf	??___lldiv
   826     06F7                     u225:
   827     06F7  1003               	clrc
   828     06F8  0DF9               	rlf	___lldiv@quotient,f
   829     06F9  0DFA               	rlf	___lldiv@quotient+1,f
   830     06FA  0DFB               	rlf	___lldiv@quotient+2,f
   831     06FB  0DFC               	rlf	___lldiv@quotient+3,f
   832     06FC  0BF8               	decfsz	??___lldiv,f
   833     06FD  2EF7               	goto	u225
   834     06FE                     l832:
   835     06FE  0873               	movf	___lldiv@divisor+3,w
   836     06FF  0277               	subwf	___lldiv@dividend+3,w
   837     0700  1D03               	skipz
   838     0701  2F0C               	goto	u235
   839     0702  0872               	movf	___lldiv@divisor+2,w
   840     0703  0276               	subwf	___lldiv@dividend+2,w
   841     0704  1D03               	skipz
   842     0705  2F0C               	goto	u235
   843     0706  0871               	movf	___lldiv@divisor+1,w
   844     0707  0275               	subwf	___lldiv@dividend+1,w
   845     0708  1D03               	skipz
   846     0709  2F0C               	goto	u235
   847     070A  0870               	movf	___lldiv@divisor,w
   848     070B  0274               	subwf	___lldiv@dividend,w
   849     070C                     u235:
   850     070C  1C03               	skipc
   851     070D  2F0F               	goto	u231
   852     070E  2F10               	goto	u230
   853     070F                     u231:
   854     070F  2F1F               	goto	l838
   855     0710                     u230:
   856     0710                     l834:
   857     0710  0870               	movf	___lldiv@divisor,w
   858     0711  02F4               	subwf	___lldiv@dividend,f
   859     0712  0871               	movf	___lldiv@divisor+1,w
   860     0713  1C03               	skipc
   861     0714  0F71               	incfsz	___lldiv@divisor+1,w
   862     0715  02F5               	subwf	___lldiv@dividend+1,f
   863     0716  0872               	movf	___lldiv@divisor+2,w
   864     0717  1C03               	skipc
   865     0718  0F72               	incfsz	___lldiv@divisor+2,w
   866     0719  02F6               	subwf	___lldiv@dividend+2,f
   867     071A  0873               	movf	___lldiv@divisor+3,w
   868     071B  1C03               	skipc
   869     071C  0F73               	incfsz	___lldiv@divisor+3,w
   870     071D  02F7               	subwf	___lldiv@dividend+3,f
   871     071E                     l836:
   872     071E  1479               	bsf	___lldiv@quotient,0
   873     071F                     l838:
   874     071F  3001               	movlw	1
   875     0720                     u245:
   876     0720  1003               	clrc
   877     0721  0CF3               	rrf	___lldiv@divisor+3,f
   878     0722  0CF2               	rrf	___lldiv@divisor+2,f
   879     0723  0CF1               	rrf	___lldiv@divisor+1,f
   880     0724  0CF0               	rrf	___lldiv@divisor,f
   881     0725  3EFF               	addlw	-1
   882     0726  1D03               	skipz
   883     0727  2F20               	goto	u245
   884     0728                     l840:
   885     0728  3001               	movlw	1
   886     0729  02FD               	subwf	___lldiv@counter,f
   887     072A  1D03               	btfss	3,2
   888     072B  2F2D               	goto	u251
   889     072C  2F2E               	goto	u250
   890     072D                     u251:
   891     072D  2EF5               	goto	l830
   892     072E                     u250:
   893     072E                     l842:
   894     072E  087C               	movf	___lldiv@quotient+3,w
   895     072F  00F3               	movwf	?___lldiv+3
   896     0730  087B               	movf	___lldiv@quotient+2,w
   897     0731  00F2               	movwf	?___lldiv+2
   898     0732  087A               	movf	___lldiv@quotient+1,w
   899     0733  00F1               	movwf	?___lldiv+1
   900     0734  0879               	movf	___lldiv@quotient,w
   901     0735  00F0               	movwf	?___lldiv
   902     0736                     l210:
   903     0736  0008               	return
   904     0737                     __end_of___lldiv:
   905                           
   906                           	psect	text3
   907     062A                     __ptext3:	
   908 ;; *************** function _EEPROM_Write *****************
   909 ;; Defined at:
   910 ;;		line 136 in file "class.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;  add             1    wreg     unsigned char 
   913 ;;  data            1    1[COMMON] unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  add             1    2[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg, status,2, status,0, pclath, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         1       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         2       0       0       0       0
   929 ;;Total ram usage:        2 bytes
   930 ;; Hardware stack levels used: 1
   931 ;; Hardware stack levels required when called: 2
   932 ;; This function calls:
   933 ;;		_I2C_Master_RepeatedStart
   934 ;;		_I2C_Master_Start
   935 ;;		_I2C_Master_Stop
   936 ;;		_I2C_Master_Write
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942     062A                     _EEPROM_Write:	
   943                           ;psect for function _EEPROM_Write
   944                           
   945                           
   946                           ;incstack = 0
   947                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
   948                           ;EEPROM_Write@add stored from wreg
   949     062A  00F2               	movwf	EEPROM_Write@add
   950     062B                     l856:
   951                           
   952                           ;class.c: 137:     I2C_Master_Start();
   953     062B  120A  118A  25D0  120A  118A  	fcall	_I2C_Master_Start
   954                           
   955                           ;class.c: 138:     while (I2C_Master_Write(0xA0))
   956     0630  2E36               	goto	l79
   957     0631                     l858:
   958                           
   959                           ;class.c: 139:         I2C_Master_RepeatedStart();
   960     0631  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_RepeatedStart
   961     0636                     l79:
   962                           
   963                           ;class.c: 138:     while (I2C_Master_Write(0xA0))
   964     0636  30A0               	movlw	160
   965     0637  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
   966     063C  3A00               	xorlw	0
   967     063D  1D03               	skipz
   968     063E  2E40               	goto	u271
   969     063F  2E41               	goto	u270
   970     0640                     u271:
   971     0640  2E31               	goto	l858
   972     0641                     u270:
   973     0641                     l860:
   974                           
   975                           ;class.c: 140:     I2C_Master_Write(add >> 8);
   976     0641  3000               	movlw	0
   977     0642  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
   978                           
   979                           ;class.c: 141:     I2C_Master_Write((unsigned char) add);
   980     0647  0872               	movf	EEPROM_Write@add,w
   981     0648  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
   982                           
   983                           ;class.c: 142:     I2C_Master_Write(data);
   984     064D  0871               	movf	EEPROM_Write@data,w
   985     064E  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
   986                           
   987                           ;class.c: 143:     I2C_Master_Stop();
   988     0653  120A  118A  25DA  120A  118A  	fcall	_I2C_Master_Stop
   989     0658                     l82:
   990     0658  0008               	return
   991     0659                     __end_of_EEPROM_Write:
   992                           
   993                           	psect	text4
   994     0691                     __ptext4:	
   995 ;; *************** function _EEPROM_Read *****************
   996 ;; Defined at:
   997 ;;		line 148 in file "class.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  add             1    wreg     unsigned char 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  add             1    1[COMMON] unsigned char 
  1002 ;;  Data            1    2[COMMON] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      unsigned char 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         2       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0
  1015 ;;      Totals:         2       0       0       0       0
  1016 ;;Total ram usage:        2 bytes
  1017 ;; Hardware stack levels used: 1
  1018 ;; Hardware stack levels required when called: 2
  1019 ;; This function calls:
  1020 ;;		_I2C_Master_RepeatedStart
  1021 ;;		_I2C_Master_Start
  1022 ;;		_I2C_Master_Stop
  1023 ;;		_I2C_Master_Write
  1024 ;;		_I2C_NACK
  1025 ;;		_I2C_Read_Byte
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031     0691                     _EEPROM_Read:	
  1032                           ;psect for function _EEPROM_Read
  1033                           
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _EEPROM_Read: [wreg+status,2+status,0+pclath+cstack]
  1037                           ;EEPROM_Read@add stored from wreg
  1038     0691  00F1               	movwf	EEPROM_Read@add
  1039     0692                     l862:
  1040                           
  1041                           ;class.c: 149:     unsigned char Data;;class.c: 150:     I2C_Master_Start();
  1042     0692  120A  118A  25D0  120A  118A  	fcall	_I2C_Master_Start
  1043                           
  1044                           ;class.c: 151:     while (I2C_Master_Write(0xA0))
  1045     0697  2E9D               	goto	l85
  1046     0698                     l864:
  1047                           
  1048                           ;class.c: 152:         I2C_Master_RepeatedStart();
  1049     0698  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1050     069D                     l85:
  1051                           
  1052                           ;class.c: 151:     while (I2C_Master_Write(0xA0))
  1053     069D  30A0               	movlw	160
  1054     069E  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
  1055     06A3  3A00               	xorlw	0
  1056     06A4  1D03               	skipz
  1057     06A5  2EA7               	goto	u281
  1058     06A6  2EA8               	goto	u280
  1059     06A7                     u281:
  1060     06A7  2E98               	goto	l864
  1061     06A8                     u280:
  1062     06A8                     l866:
  1063                           
  1064                           ;class.c: 153:     I2C_Master_Write(add >> 8);
  1065     06A8  3000               	movlw	0
  1066     06A9  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
  1067                           
  1068                           ;class.c: 154:     I2C_Master_Write((unsigned char) add);
  1069     06AE  0871               	movf	EEPROM_Read@add,w
  1070     06AF  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
  1071                           
  1072                           ;class.c: 155:     I2C_Master_RepeatedStart();
  1073     06B4  120A  118A  25C6  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1074                           
  1075                           ;class.c: 156:     I2C_Master_Write(0xA1);
  1076     06B9  30A1               	movlw	161
  1077     06BA  120A  118A  25FD  120A  118A  	fcall	_I2C_Master_Write
  1078                           
  1079                           ;class.c: 157:     Data = I2C_Read_Byte();
  1080     06BF  120A  118A  2612  120A  118A  	fcall	_I2C_Read_Byte
  1081     06C4  00F2               	movwf	EEPROM_Read@Data
  1082                           
  1083                           ;class.c: 158:     I2C_NACK();
  1084     06C5  120A  118A  25E4  120A  118A  	fcall	_I2C_NACK
  1085                           
  1086                           ;class.c: 159:     I2C_Master_Stop();
  1087     06CA  120A  118A  25DA  120A  118A  	fcall	_I2C_Master_Stop
  1088     06CF                     l868:
  1089                           
  1090                           ;class.c: 160:     return Data;
  1091     06CF  0872               	movf	EEPROM_Read@Data,w
  1092     06D0                     l88:
  1093     06D0  0008               	return
  1094     06D1                     __end_of_EEPROM_Read:
  1095                           
  1096                           	psect	text5
  1097     0612                     __ptext5:	
  1098 ;; *************** function _I2C_Read_Byte *****************
  1099 ;; Defined at:
  1100 ;;		line 109 in file "class.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      unsigned char 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, pclath, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0
  1117 ;;      Totals:         0       0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 1
  1121 ;; This function calls:
  1122 ;;		_I2C_Master_Wait
  1123 ;; This function is called by:
  1124 ;;		_EEPROM_Read
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128     0612                     _I2C_Read_Byte:	
  1129                           ;psect for function _I2C_Read_Byte
  1130                           
  1131     0612                     l804:	
  1132                           ;incstack = 0
  1133                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  1134                           
  1135                           
  1136                           ;class.c: 110:     I2C_Master_Wait();
  1137     0612  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Wait
  1138     0617                     l806:
  1139                           
  1140                           ;class.c: 111:     SSPCON2 = 0x08;
  1141     0617  3008               	movlw	8
  1142     0618  1683               	bsf	3,5	;RP0=1, select bank1
  1143     0619  1303               	bcf	3,6	;RP1=0, select bank1
  1144     061A  0091               	movwf	17	;volatile
  1145     061B                     l67:	
  1146                           ;class.c: 112:     while (!SSPIF);
  1147                           
  1148     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1149     061C  1D8C               	btfss	12,3	;volatile
  1150     061D  2E1F               	goto	u181
  1151     061E  2E20               	goto	u180
  1152     061F                     u181:
  1153     061F  2E1B               	goto	l67
  1154     0620                     u180:
  1155     0620                     l69:
  1156                           
  1157                           ;class.c: 113:     SSPIF = 0;
  1158     0620  118C               	bcf	12,3	;volatile
  1159     0621                     l808:
  1160                           
  1161                           ;class.c: 114:     I2C_Master_Wait();
  1162     0621  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Wait
  1163     0626                     l810:
  1164                           
  1165                           ;class.c: 115:     return SSPBUF;
  1166     0626  1283               	bcf	3,5	;RP0=0, select bank0
  1167     0627  1303               	bcf	3,6	;RP1=0, select bank0
  1168     0628  0813               	movf	19,w	;volatile
  1169     0629                     l70:
  1170     0629  0008               	return
  1171     062A                     __end_of_I2C_Read_Byte:
  1172                           
  1173                           	psect	text6
  1174     05E4                     __ptext6:	
  1175 ;; *************** function _I2C_NACK *****************
  1176 ;; Defined at:
  1177 ;;		line 128 in file "class.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 1
  1198 ;; This function calls:
  1199 ;;		_I2C_Master_Wait
  1200 ;; This function is called by:
  1201 ;;		_EEPROM_Read
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205     05E4                     _I2C_NACK:	
  1206                           ;psect for function _I2C_NACK
  1207                           
  1208     05E4                     l814:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  1211                           
  1212                           
  1213                           ;class.c: 129:     ACKDT = 1;
  1214     05E4  1683               	bsf	3,5	;RP0=1, select bank1
  1215     05E5  1303               	bcf	3,6	;RP1=0, select bank1
  1216     05E6  1691               	bsf	17,5	;volatile
  1217     05E7                     l816:
  1218                           
  1219                           ;class.c: 130:     I2C_Master_Wait();
  1220     05E7  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Wait
  1221     05EC                     l818:
  1222                           
  1223                           ;class.c: 131:     ACKEN = 1;
  1224     05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1225     05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1226     05EE  1611               	bsf	17,4	;volatile
  1227     05EF                     l76:
  1228     05EF  0008               	return
  1229     05F0                     __end_of_I2C_NACK:
  1230                           
  1231                           	psect	text7
  1232     05FD                     __ptext7:	
  1233 ;; *************** function _I2C_Master_Write *****************
  1234 ;; Defined at:
  1235 ;;		line 99 in file "class.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  data            1    wreg     unsigned char 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  data            1    0[COMMON] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      unsigned char 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         1       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         1       0       0       0       0
  1253 ;;Total ram usage:        1 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 1
  1256 ;; This function calls:
  1257 ;;		_I2C_Master_Wait
  1258 ;; This function is called by:
  1259 ;;		_EEPROM_Write
  1260 ;;		_EEPROM_Read
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264     05FD                     _I2C_Master_Write:	
  1265                           ;psect for function _I2C_Master_Write
  1266                           
  1267                           
  1268                           ;incstack = 0
  1269                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1270                           ;I2C_Master_Write@data stored from wreg
  1271     05FD  00F0               	movwf	I2C_Master_Write@data
  1272     05FE                     l796:
  1273                           
  1274                           ;class.c: 100:     I2C_Master_Wait();
  1275     05FE  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Wait
  1276     0603                     l798:
  1277                           
  1278                           ;class.c: 101:     SSPBUF = data;
  1279     0603  0870               	movf	I2C_Master_Write@data,w
  1280     0604  1283               	bcf	3,5	;RP0=0, select bank0
  1281     0605  1303               	bcf	3,6	;RP1=0, select bank0
  1282     0606  0093               	movwf	19	;volatile
  1283     0607                     l61:	
  1284                           ;class.c: 102:     while (!SSPIF);
  1285                           
  1286     0607  1D8C               	btfss	12,3	;volatile
  1287     0608  2E0A               	goto	u171
  1288     0609  2E0B               	goto	u170
  1289     060A                     u171:
  1290     060A  2E07               	goto	l61
  1291     060B                     u170:
  1292     060B                     l63:
  1293                           
  1294                           ;class.c: 103:     SSPIF = 0;
  1295     060B  118C               	bcf	12,3	;volatile
  1296     060C                     l800:
  1297                           
  1298                           ;class.c: 104:     return ACKSTAT;
  1299     060C  3000               	movlw	0
  1300     060D  1683               	bsf	3,5	;RP0=1, select bank1
  1301     060E  1303               	bcf	3,6	;RP1=0, select bank1
  1302     060F  1B11               	btfsc	17,6	;volatile
  1303     0610  3001               	movlw	1
  1304     0611                     l64:
  1305     0611  0008               	return
  1306     0612                     __end_of_I2C_Master_Write:
  1307                           
  1308                           	psect	text8
  1309     05DA                     __ptext8:	
  1310 ;; *************** function _I2C_Master_Stop *****************
  1311 ;; Defined at:
  1312 ;;		line 92 in file "class.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0
  1329 ;;      Totals:         0       0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used: 1
  1332 ;; Hardware stack levels required when called: 1
  1333 ;; This function calls:
  1334 ;;		_I2C_Master_Wait
  1335 ;; This function is called by:
  1336 ;;		_EEPROM_Write
  1337 ;;		_EEPROM_Read
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341     05DA                     _I2C_Master_Stop:	
  1342                           ;psect for function _I2C_Master_Stop
  1343                           
  1344     05DA                     l792:	
  1345                           ;incstack = 0
  1346                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1347                           
  1348                           
  1349                           ;class.c: 93:     I2C_Master_Wait();
  1350     05DA  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Wait
  1351     05DF                     l794:
  1352                           
  1353                           ;class.c: 94:     SSPCON2 = 0x04;
  1354     05DF  3004               	movlw	4
  1355     05E0  1683               	bsf	3,5	;RP0=1, select bank1
  1356     05E1  1303               	bcf	3,6	;RP1=0, select bank1
  1357     05E2  0091               	movwf	17	;volatile
  1358     05E3                     l58:
  1359     05E3  0008               	return
  1360     05E4                     __end_of_I2C_Master_Stop:
  1361                           
  1362                           	psect	text9
  1363     05D0                     __ptext9:	
  1364 ;; *************** function _I2C_Master_Start *****************
  1365 ;; Defined at:
  1366 ;;		line 78 in file "class.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0
  1383 ;;      Totals:         0       0       0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; Hardware stack levels required when called: 1
  1387 ;; This function calls:
  1388 ;;		_I2C_Master_Wait
  1389 ;; This function is called by:
  1390 ;;		_EEPROM_Write
  1391 ;;		_EEPROM_Read
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395     05D0                     _I2C_Master_Start:	
  1396                           ;psect for function _I2C_Master_Start
  1397                           
  1398     05D0                     l784:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1401                           
  1402                           
  1403                           ;class.c: 79:     I2C_Master_Wait();
  1404     05D0  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Wait
  1405     05D5                     l786:
  1406                           
  1407                           ;class.c: 80:     SSPCON2 = 0x01;
  1408     05D5  3001               	movlw	1
  1409     05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1410     05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1411     05D8  0091               	movwf	17	;volatile
  1412     05D9                     l52:
  1413     05D9  0008               	return
  1414     05DA                     __end_of_I2C_Master_Start:
  1415                           
  1416                           	psect	text10
  1417     05C6                     __ptext10:	
  1418 ;; *************** function _I2C_Master_RepeatedStart *****************
  1419 ;; Defined at:
  1420 ;;		line 85 in file "class.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 1
  1441 ;; This function calls:
  1442 ;;		_I2C_Master_Wait
  1443 ;; This function is called by:
  1444 ;;		_EEPROM_Write
  1445 ;;		_EEPROM_Read
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     05C6                     _I2C_Master_RepeatedStart:	
  1450                           ;psect for function _I2C_Master_RepeatedStart
  1451                           
  1452     05C6                     l788:	
  1453                           ;incstack = 0
  1454                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  1455                           
  1456                           
  1457                           ;class.c: 86:     I2C_Master_Wait();
  1458     05C6  120A  118A  25F0  120A  118A  	fcall	_I2C_Master_Wait
  1459     05CB                     l790:
  1460                           
  1461                           ;class.c: 87:     SSPCON2 = 0x02;
  1462     05CB  3002               	movlw	2
  1463     05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1464     05CD  1303               	bcf	3,6	;RP1=0, select bank1
  1465     05CE  0091               	movwf	17	;volatile
  1466     05CF                     l55:
  1467     05CF  0008               	return
  1468     05D0                     __end_of_I2C_Master_RepeatedStart:
  1469                           
  1470                           	psect	text11
  1471     05F0                     __ptext11:	
  1472 ;; *************** function _I2C_Master_Wait *****************
  1473 ;; Defined at:
  1474 ;;		line 72 in file "class.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; This function calls:
  1495 ;;		Nothing
  1496 ;; This function is called by:
  1497 ;;		_I2C_Master_Start
  1498 ;;		_I2C_Master_RepeatedStart
  1499 ;;		_I2C_Master_Stop
  1500 ;;		_I2C_Master_Write
  1501 ;;		_I2C_Read_Byte
  1502 ;;		_I2C_NACK
  1503 ;;		_I2C_ACK
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507     05F0                     _I2C_Master_Wait:	
  1508                           ;psect for function _I2C_Master_Wait
  1509                           
  1510     05F0                     l780:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1513                           
  1514     05F0                     l46:	
  1515                           ;class.c: 73:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1516                           
  1517     05F0  1683               	bsf	3,5	;RP0=1, select bank1
  1518     05F1  1303               	bcf	3,6	;RP1=0, select bank1
  1519     05F2  1914               	btfsc	20,2	;volatile
  1520     05F3  2DF5               	goto	u151
  1521     05F4  2DF6               	goto	u150
  1522     05F5                     u151:
  1523     05F5  2DF0               	goto	l46
  1524     05F6                     u150:
  1525     05F6                     l782:
  1526     05F6  0811               	movf	17,w	;volatile
  1527     05F7  391F               	andlw	31
  1528     05F8  1D03               	btfss	3,2
  1529     05F9  2DFB               	goto	u161
  1530     05FA  2DFC               	goto	u160
  1531     05FB                     u161:
  1532     05FB  2DF0               	goto	l46
  1533     05FC                     u160:
  1534     05FC                     l49:
  1535     05FC  0008               	return
  1536     05FD                     __end_of_I2C_Master_Wait:
  1537     007E                     btemp	set	126	;btemp
  1538     007E                     wtemp0	set	126
  1539                           
  1540                           	psect	config
  1541                           
  1542                           ;Config register CONFIG @ 0x2007
  1543                           ;	Oscillator Selection bits
  1544                           ;	FOSC = EXTRC, RC oscillator
  1545                           ;	Watchdog Timer Enable bit
  1546                           ;	WDTE = OFF, WDT disabled
  1547                           ;	Power-up Timer Enable bit
  1548                           ;	PWRTE = OFF, PWRT disabled
  1549                           ;	Brown-out Reset Enable bit
  1550                           ;	BOREN = OFF, BOR disabled
  1551                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1552                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1553                           ;	Data EEPROM Memory Code Protection bit
  1554                           ;	CPD = OFF, Data EEPROM code protection off
  1555                           ;	Flash Program Memory Write Enable bits
  1556                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1557                           ;	In-Circuit Debugger Mode bit
  1558                           ;	DEBUG = 0x1, unprogrammed default
  1559                           ;	Flash Program Memory Code Protection bit
  1560                           ;	CP = OFF, Code protection off
  1561     2007                     	org	8199
  1562     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_Master_init->___lldiv
    _EEPROM_Write->_I2C_Master_Write
    _EEPROM_Read->_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_I2C_Master_init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1049
                                              8 BANK0      9     9      0
                        _EEPROM_Read
                       _EEPROM_Write
                    _I2C_Master_init
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1     294
                                              1 COMMON     2     1      1
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          2     2      0      67
                                              1 COMMON     2     2      0
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _I2C_NACK
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_NACK                                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_NACK
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _EEPROM_Write
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _I2C_Master_init
     ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Nov 08 20:39:05 2024

                              l43 0690                                l52 05D9                                l61 0607  
                              l37 07F8                                l46 05F0                                l70 0629  
                              l38 07F8                                l55 05CF                                l63 060B  
                              l64 0611                                l49 05FC                                l58 05E3  
                              l82 0658                                l67 061B                                l76 05EF  
                              l69 0620                                l85 069D                                l79 0636  
                              l88 06D0                               l210 0736                               l800 060C  
                             l810 0626                               l804 0612                               l820 06D1  
                             l900 07A6                               l814 05E4                               l806 0617  
                             l830 06F5                               l822 06E1                               l910 07C9  
                             l902 07A9                               l816 05E7                               l808 0621  
                             l840 0728                               l832 06FE                               l824 06E4  
                             l920 07F6                               l912 07D4                               l904 07B2  
                             l818 05EC                               l834 0710                               l826 06ED  
                             l842 072E                               l850 0660                               l914 07DA  
                             l906 07B8                               l780 05F0                               l860 0641  
                             l836 071E                               l828 06F1                               l852 068D  
                             l916 07DC                               l908 07BA                               l782 05F6  
                             l790 05CB                               l862 0692                               l838 071F  
                             l854 068E                               l846 0659                               l918 07EB  
                             l784 05D0                               l792 05DA                               l864 0698  
                             l856 062B                               l848 065D                               l880 0756  
                             l872 0737                               l786 05D5                               l794 05DF  
                             l866 06A8                               l858 0631                               l890 077C  
                             l882 075C                               l874 0746                               l788 05C6  
                             l796 05FE                               l868 06CF                               l892 0782  
                             l884 0762                               l876 074C                               l798 0603  
                             l894 078C                               l886 076C                               l878 074E  
                             l896 0796                               l888 0776                               l898 07A0  
                             u210 06F5                               u211 06F4                               u205 06E6  
                             u150 05F6                               u230 0710                               u151 05F5  
                             u231 070F                               u160 05FC                               u161 05FB  
                             u225 06F7                               u170 060B                               u250 072E  
                             u171 060A                               u251 072D                               u235 070C  
                             u307 0788                               u180 0620                               u260 0670  
                             u181 061F                               u245 0720                               u317 079C  
                             u270 0641                               u190 06E1                               u271 0640  
                             u191 06E0                               u327 07C2                               u280 06A8  
                             u281 06A7                               u265 066B                               u337 07E4  
                             u297 0768                  __end_of_I2C_NACK 05F0  __end_of_I2C_Master_RepeatedStart 05D0  
                            _main 0737                              btemp 007E                              start 0000  
                 EEPROM_Write@add 0072              __end_of_EEPROM_Write 0659                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                  ?_I2C_Master_init 0020                             ?_main 0070  
                           _ACKEN 048C                             _ACKDT 048D                   __end_of___lldiv 0737  
                           _PORTD 0008                             _TRISC 0087                             _TRISD 0088  
                           _SSPIF 0063                             status 0003                             wtemp0 007E  
                EEPROM_Write@data 0071                   __initialization 07FC                      __end_of_main 07FC  
                          ??_main 0028                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070  
              ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0070                            _SSPADD 0093  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 05C6  
                   _I2C_Read_Byte 0612                         ??___lldiv 0078                         ?_I2C_NACK 0070  
         __end_of__initialization 07FC                    ?_I2C_Read_Byte 0070                    __pcstackCOMMON 0070  
                      ??_I2C_NACK 0070                      _EEPROM_Write 062A                        __pmaintext 0737  
                         _ACKSTAT 048E                           _SSPCON2 0091                           _SSPSTAT 0094  
                 ??_I2C_Read_Byte 0070                           ___lldiv 06D1                           __ptext1 0659  
                         __ptext2 06D1                           __ptext3 062A                           __ptext4 0691  
                         __ptext5 0612                           __ptext6 05E4                           __ptext7 05FD  
                         __ptext8 05DA                           __ptext9 05D0              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                     ??_EEPROM_Read 0071                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D               __end_of_EEPROM_Read 06D1               start_initialization 07FC  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070                 ??_I2C_Master_init 0024  
                       ___latbits 0002                     __pcstackBANK0 0020                       _EEPROM_Read 0691  
                _I2C_Master_Start 05D0                  _I2C_Master_Write 05FD                          ?___lldiv 0070  
            I2C_Master_Write@data 0070                          _I2C_NACK 05E4             __end_of_I2C_Read_Byte 062A  
       ?_I2C_Master_RepeatedStart 0070                   _I2C_Master_Wait 05F0                   _I2C_Master_Stop 05DA  
                 _I2C_Master_init 0659                          __ptext10 05C6                          __ptext11 05F0  
                   ?_EEPROM_Write 0071                          main@Data 002E                          main@ret1 002B  
                        main@ret2 002C                          main@ret3 002D          __end_of_I2C_Master_Start 05DA  
        __end_of_I2C_Master_Write 0612               I2C_Master_init@baud 0020                    ??_EEPROM_Write 0072  
                    ?_EEPROM_Read 0070                  ___lldiv@dividend 0074           __end_of_I2C_Master_Wait 05FD  
         __end_of_I2C_Master_Stop 05E4           __end_of_I2C_Master_init 0691                  ___lldiv@quotient 0079  
                 EEPROM_Read@Data 0072                    EEPROM_Read@add 0071                       main@Address 002F  
