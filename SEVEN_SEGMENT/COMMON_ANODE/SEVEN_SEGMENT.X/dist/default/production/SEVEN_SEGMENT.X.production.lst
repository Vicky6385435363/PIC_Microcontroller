

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 24 17:32:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataCOMMON
   170     077C                     __pidataCOMMON:
   171                           
   172                           ;initializer for _arr
   173     077C  343F               	retlw	63
   174     077D  3406               	retlw	6
   175     077E  345B               	retlw	91
   176     077F  344F               	retlw	79
   177     0780  3466               	retlw	102
   178     0781  346D               	retlw	109
   179     0782  347D               	retlw	125
   180     0783  3407               	retlw	7
   181     0784  347F               	retlw	127
   182     0785  346F               	retlw	111
   183                           
   184                           	psect	nvCOMMON
   185     007D                     __pnvCOMMON:
   186     007D                     _i:
   187     007D                     	ds	1
   188     0006                     _PORTB	set	6
   189     0086                     _TRISB	set	134
   190                           
   191                           	psect	cinit
   192     07C0                     start_initialization:	
   193                           ; #config settings
   194                           
   195     07C0                     __initialization:
   196                           
   197                           ; Initialize objects allocated to COMMON
   198     07C0  120A  118A  277C  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   199     07C5  00F0               	movwf	__pdataCOMMON& (0+127)
   200     07C6  120A  118A  277D  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   201     07CB  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   202     07CC  120A  118A  277E  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   203     07D1  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   204     07D2  120A  118A  277F  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   205     07D7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   206     07D8  120A  118A  2780  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   207     07DD  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   208     07DE  120A  118A  2781  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   209     07E3  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   210     07E4  120A  118A  2782  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   211     07E9  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   212     07EA  120A  118A  2783  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   213     07EF  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   214     07F0  120A  118A  2784  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   215     07F5  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   216     07F6  120A  118A  2785  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   217     07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   218     07FC                     end_of_initialization:	
   219                           ;End of C runtime variable initialization code
   220                           
   221     07FC                     __end_of__initialization:
   222     07FC  0183               	clrf	3
   223     07FD  120A  118A  2F99   	ljmp	_main	;jump to C main() function
   224                           
   225                           	psect	dataCOMMON
   226     0070                     __pdataCOMMON:
   227     0070                     _arr:
   228     0070                     	ds	10
   229                           
   230                           	psect	inittext
   231     0786                     init_fetch0:	
   232                           ;	Called with low address in FSR and high address in W
   233                           
   234     0786  087E               	movf	btemp,w
   235     0787  008A               	movwf	10
   236     0788  087F               	movf	btemp+1,w
   237     0789  0082               	movwf	2
   238     078A                     init_ram0:	
   239                           ;Called with:
   240                           ;	high address of idata address in btemp 
   241                           ;	low address of idata address in btemp+1 
   242                           ;	low address of data in FSR
   243                           ;	high address + 1 of data in btemp-1
   244                           
   245     078A  120A  118A  2786  120A  118A  	fcall	init_fetch0
   246     078F  0080               	movwf	0
   247     0790  0A84               	incf	4,f
   248     0791  0804               	movf	4,w
   249     0792  067D               	xorwf	btemp+-1,w
   250     0793  1903               	btfsc	3,2
   251     0794  3400               	retlw	0
   252     0795  0AFF               	incf	btemp+1,f
   253     0796  1903               	btfsc	3,2
   254     0797  0AFE               	incf	btemp,f
   255     0798  2F8A               	goto	init_ram0
   256                           
   257                           	psect	cstackCOMMON
   258     007A                     __pcstackCOMMON:
   259     007A                     ?_main:
   260     007A                     ??_main:	
   261                           ; 1 bytes @ 0x0
   262                           
   263                           
   264                           ; 1 bytes @ 0x0
   265     007A                     	ds	3
   266                           
   267                           	psect	maintext
   268     0799                     __pmaintext:	
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 17 in file "SEVEN_SEGMENT.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          3       0       0       0       0
   291 ;;      Totals:         3       0       0       0       0
   292 ;;Total ram usage:        3 bytes
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300     0799                     _main:	
   301                           ;psect for function _main
   302                           
   303     0799                     l564:	
   304                           ;incstack = 0
   305                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1]
   306                           
   307                           
   308                           ;SEVEN_SEGMENT.c: 18:     TRISB = 0x80;
   309     0799  3080               	movlw	128
   310     079A  1683               	bsf	3,5	;RP0=1, select bank1
   311     079B  1303               	bcf	3,6	;RP1=0, select bank1
   312     079C  0086               	movwf	6	;volatile
   313     079D                     l566:
   314                           
   315                           ;SEVEN_SEGMENT.c: 20:         for (i = 0; i < 10; i++) {
   316     079D  01FD               	clrf	_i
   317     079E                     l572:
   318                           
   319                           ;SEVEN_SEGMENT.c: 21:             PORTB = ~arr[i];
   320     079E  087D               	movf	_i,w
   321     079F  3E70               	addlw	(low (_arr| 0))& (0+255)
   322     07A0  0084               	movwf	4
   323     07A1  0900               	comf	0,w
   324     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   325     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   326     07A4  0086               	movwf	6	;volatile
   327     07A5                     l574:
   328                           
   329                           ;SEVEN_SEGMENT.c: 22:             _delay((unsigned long)((500)*(6000000/4000.0)));
   330     07A5  3004               	movlw	4
   331     07A6  00FC               	movwf	??_main+2
   332     07A7  30CF               	movlw	207
   333     07A8  00FB               	movwf	??_main+1
   334     07A9  3001               	movlw	1
   335     07AA  00FA               	movwf	??_main
   336     07AB                     u27:
   337     07AB  0BFA               	decfsz	??_main,f
   338     07AC  2FAB               	goto	u27
   339     07AD  0BFB               	decfsz	??_main+1,f
   340     07AE  2FAB               	goto	u27
   341     07AF  0BFC               	decfsz	??_main+2,f
   342     07B0  2FAB               	goto	u27
   343     07B1  2FB2               	nop2
   344     07B2                     l576:
   345                           
   346                           ;SEVEN_SEGMENT.c: 23:         }
   347     07B2  3001               	movlw	1
   348     07B3  00FF               	movwf	btemp+1
   349     07B4  087F               	movf	btemp+1,w
   350     07B5  07FD               	addwf	_i,f
   351     07B6                     l578:
   352     07B6  300A               	movlw	10
   353     07B7  027D               	subwf	_i,w
   354     07B8  1C03               	skipc
   355     07B9  2FBB               	goto	u11
   356     07BA  2FBC               	goto	u10
   357     07BB                     u11:
   358     07BB  2F9E               	goto	l572
   359     07BC                     u10:
   360     07BC  2F9D               	goto	l566
   361     07BD  120A  118A  2800   	ljmp	start
   362     07C0                     __end_of_main:
   363     007E                     btemp	set	126	;btemp
   364     007E                     wtemp0	set	126
   365                           
   366                           	psect	config
   367                           
   368                           ;Config register CONFIG @ 0x2007
   369                           ;	Oscillator Selection bits
   370                           ;	FOSC = EXTRC, RC oscillator
   371                           ;	Watchdog Timer Enable bit
   372                           ;	WDTE = OFF, WDT disabled
   373                           ;	Power-up Timer Enable bit
   374                           ;	PWRTE = OFF, PWRT disabled
   375                           ;	Brown-out Reset Enable bit
   376                           ;	BOREN = OFF, BOR disabled
   377                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   378                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   379                           ;	Data EEPROM Memory Code Protection bit
   380                           ;	CPD = OFF, Data EEPROM code protection off
   381                           ;	Flash Program Memory Write Enable bits
   382                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   383                           ;	In-Circuit Debugger Mode bit
   384                           ;	DEBUG = 0x1, unprogrammed default
   385                           ;	Flash Program Memory Code Protection bit
   386                           ;	CP = OFF, Code protection off
   387     2007                     	org	8199
   388     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 24 17:32:49 2024

                      _i 007D                        pc 0002                       u10 07BC  
                     u11 07BB                       u27 07AB                       fsr 0004  
                    l572 079E                      l564 0799                      l574 07A5  
                    l566 079D                      l576 07B2                      l578 07B6  
                    _arr 0070                      fsr0 0004                      indf 0000  
                   _main 0799                     btemp 007E                     start 0000  
                  ?_main 007A                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07C0             __end_of_main 07C0                   ??_main 007A  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 007A  
             __pnvCOMMON 007D               __pmaintext 0799     end_of_initialization 07FC  
          __pidataCOMMON 077C      start_initialization 07C0               init_fetch0 0786  
              ___latbits 0002                 init_ram0 078A  
