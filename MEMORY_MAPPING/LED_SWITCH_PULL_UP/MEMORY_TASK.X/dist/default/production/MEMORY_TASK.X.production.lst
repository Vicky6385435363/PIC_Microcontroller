

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Oct 07 17:26:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	idataCOMMON
   170     0760                     __pidataCOMMON:
   171                           
   172                           ;initializer for _option_reg
   173     0760  3481               	retlw	129
   174     0761  3400               	retlw	0
   175                           
   176                           ;initializer for _switchled
   177     0762  3406               	retlw	6
   178     0763  3400               	retlw	0
   179                           
   180                           ;initializer for _switch_led
   181     0764  3486               	retlw	134
   182     0765  3400               	retlw	0
   183                           
   184                           ;initializer for _ipop_decide
   185     0766  3407               	retlw	7
   186     0767  3400               	retlw	0
   187                           
   188                           ;initializer for _ipop_select
   189     0768  3487               	retlw	135
   190     0769  3400               	retlw	0
   191                           
   192                           	psect	cinit
   193     07C0                     start_initialization:	
   194                           ; #config settings
   195                           
   196     07C0                     __initialization:
   197                           
   198                           ; Initialize objects allocated to COMMON
   199     07C0  120A  118A  2760  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   200     07C5  00F0               	movwf	__pdataCOMMON& (0+127)
   201     07C6  120A  118A  2761  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   202     07CB  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   203     07CC  120A  118A  2762  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   204     07D1  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   205     07D2  120A  118A  2763  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   206     07D7  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   207     07D8  120A  118A  2764  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   208     07DD  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   209     07DE  120A  118A  2765  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   210     07E3  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   211     07E4  120A  118A  2766  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   212     07E9  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   213     07EA  120A  118A  2767  120A  118A  	fcall	__pidataCOMMON+7	;fetch initializer
   214     07EF  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   215     07F0  120A  118A  2768  120A  118A  	fcall	__pidataCOMMON+8	;fetch initializer
   216     07F5  00F8               	movwf	(__pdataCOMMON+8)& (0+127)
   217     07F6  120A  118A  2769  120A  118A  	fcall	__pidataCOMMON+9	;fetch initializer
   218     07FB  00F9               	movwf	(__pdataCOMMON+9)& (0+127)
   219     07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222     07FC                     __end_of__initialization:
   223     07FC  0183               	clrf	3
   224     07FD  120A  118A  2F6A   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	dataCOMMON
   227     0070                     __pdataCOMMON:
   228     0070                     _option_reg:
   229     0070                     	ds	2
   230     0072                     _switchled:
   231     0072                     	ds	2
   232     0074                     _switch_led:
   233     0074                     	ds	2
   234     0076                     _ipop_decide:
   235     0076                     	ds	2
   236     0078                     _ipop_select:
   237     0078                     	ds	2
   238                           
   239                           	psect	inittext
   240     0778                     init_fetch0:	
   241                           ;	Called with low address in FSR and high address in W
   242                           
   243     0778  087E               	movf	btemp,w
   244     0779  008A               	movwf	10
   245     077A  087F               	movf	btemp+1,w
   246     077B  0082               	movwf	2
   247     077C                     init_ram0:	
   248                           ;Called with:
   249                           ;	high address of idata address in btemp 
   250                           ;	low address of idata address in btemp+1 
   251                           ;	low address of data in FSR
   252                           ;	high address + 1 of data in btemp-1
   253                           
   254     077C  120A  118A  2778  120A  118A  	fcall	init_fetch0
   255     0781  0080               	movwf	0
   256     0782  0A84               	incf	4,f
   257     0783  0804               	movf	4,w
   258     0784  067D               	xorwf	btemp+-1,w
   259     0785  1903               	btfsc	3,2
   260     0786  3400               	retlw	0
   261     0787  0AFF               	incf	btemp+1,f
   262     0788  1903               	btfsc	3,2
   263     0789  0AFE               	incf	btemp,f
   264     078A  2F7C               	goto	init_ram0
   265                           
   266                           	psect	cstackCOMMON
   267     007A                     __pcstackCOMMON:
   268     007A                     ?_led:
   269     007A                     ??_led:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     007A                     ?_l_switch:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     007A                     ??_l_switch:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     007A                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     007A                     l_switch@value:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 1 bytes @ 0x0
   286     007A                     	ds	1
   287     007B                     ??_main:
   288                           
   289                           	psect	maintext
   290     076A                     __pmaintext:	
   291                           ; 1 bytes @ 0x1
   292 ;;
   293 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   294 ;;
   295 ;; *************** function _main *****************
   296 ;; Defined at:
   297 ;;		line 3 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : B00/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   311 ;;      Params:         0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0
   314 ;;      Totals:         0       0       0       0       0
   315 ;;Total ram usage:        0 bytes
   316 ;; Hardware stack levels required when called: 1
   317 ;; This function calls:
   318 ;;		_l_switch
   319 ;;		_led
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325     076A                     _main:	
   326                           ;psect for function _main
   327                           
   328     076A                     l603:	
   329                           ;incstack = 0
   330                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   331                           
   332                           
   333                           ;main.c: 4:     led();
   334     076A  120A  118A  278B  120A  118A  	fcall	_led
   335     076F                     l605:
   336                           
   337                           ;main.c: 6:         l_switch();
   338     076F  120A  118A  27A1  120A  118A  	fcall	_l_switch
   339     0774  2F6F               	goto	l605
   340     0775  120A  118A  2800   	ljmp	start
   341     0778                     __end_of_main:
   342                           
   343                           	psect	text1
   344     078B                     __ptext1:	
   345 ;; *************** function _led *****************
   346 ;; Defined at:
   347 ;;		line 6 in file "led_switch.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, btemp+1
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0
   364 ;;      Totals:         0       0       0       0       0
   365 ;;Total ram usage:        0 bytes
   366 ;; Hardware stack levels used: 1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374     078B                     _led:	
   375                           ;psect for function _led
   376                           
   377     078B                     l579:	
   378                           ;incstack = 0
   379                           ; Regs used in _led: [wreg+status,2+status,0+btemp+1]
   380                           
   381                           
   382                           ;led_switch.c: 7:     *ipop_select = 0x00;
   383     078B  1683               	bsf	3,5	;RP0=1, select bank1
   384     078C  1303               	bcf	3,6	;RP1=0, select bank1
   385     078D  0187               	clrf	7
   386     078E                     l581:
   387                           
   388                           ;led_switch.c: 8:     *ipop_decide = 0xFC;
   389     078E  30FC               	movlw	252
   390     078F  1283               	bcf	3,5	;RP0=0, select bank0
   391     0790  1303               	bcf	3,6	;RP1=0, select bank0
   392     0791  0087               	movwf	7
   393     0792                     l583:
   394                           
   395                           ;led_switch.c: 9:     *switch_led = 0xF0;
   396     0792  30F0               	movlw	240
   397     0793  1683               	bsf	3,5	;RP0=1, select bank1
   398     0794  1303               	bcf	3,6	;RP1=0, select bank1
   399     0795  0086               	movwf	6
   400     0796                     l585:
   401                           
   402                           ;led_switch.c: 10:     *switchled = 0xF0;
   403     0796  30F0               	movlw	240
   404     0797  1283               	bcf	3,5	;RP0=0, select bank0
   405     0798  1303               	bcf	3,6	;RP1=0, select bank0
   406     0799  0086               	movwf	6
   407     079A                     l587:
   408                           
   409                           ;led_switch.c: 11:     *option_reg &= 0x7F;
   410     079A  307F               	movlw	127
   411     079B  00FF               	movwf	btemp+1
   412     079C  087F               	movf	btemp+1,w
   413     079D  1683               	bsf	3,5	;RP0=1, select bank1
   414     079E  1303               	bcf	3,6	;RP1=0, select bank1
   415     079F  0581               	andwf	1,f
   416     07A0                     l25:
   417     07A0  0008               	return
   418     07A1                     __end_of_led:
   419                           
   420                           	psect	text2
   421     07A1                     __ptext2:	
   422 ;; *************** function _l_switch *****************
   423 ;; Defined at:
   424 ;;		line 13 in file "led_switch.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  value           1    0[COMMON] unsigned char 
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         1       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0
   441 ;;      Totals:         1       0       0       0       0
   442 ;;Total ram usage:        1 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451     07A1                     _l_switch:	
   452                           ;psect for function _l_switch
   453                           
   454     07A1                     l589:	
   455                           ;incstack = 0
   456                           ; Regs used in _l_switch: [wreg-fsr0h+status,2+status,0]
   457                           
   458                           
   459                           ;led_switch.c: 14:     unsigned char value;;led_switch.c: 15:     value = *switchled;
   460     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   461     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   462     07A3  0806               	movf	6,w
   463     07A4  00FA               	movwf	l_switch@value
   464                           
   465                           ;led_switch.c: 16:     switch (value) {
   466     07A5  2FB1               	goto	l601
   467     07A6                     l29:	
   468                           ;led_switch.c: 17:         case 0xE0:
   469                           
   470                           
   471                           ;led_switch.c: 18:             *ipop_decide = 0x01;
   472     07A6  0187               	clrf	7
   473     07A7  0A87               	incf	7,f
   474                           
   475                           ;led_switch.c: 19:             break;
   476     07A8  2FBF               	goto	l35
   477     07A9                     l591:
   478                           
   479                           ;led_switch.c: 21:             *ipop_decide = 0x02;
   480     07A9  3002               	movlw	2
   481     07AA  0087               	movwf	7
   482                           
   483                           ;led_switch.c: 22:             break;
   484     07AB  2FBF               	goto	l35
   485     07AC                     l593:
   486                           
   487                           ;led_switch.c: 24:             *ipop_decide = 0x03;
   488     07AC  3003               	movlw	3
   489     07AD  0087               	movwf	7
   490                           
   491                           ;led_switch.c: 25:             break;
   492     07AE  2FBF               	goto	l35
   493     07AF                     l595:
   494                           
   495                           ;led_switch.c: 27:             *ipop_decide = 0x00;
   496     07AF  0187               	clrf	7
   497                           
   498                           ;led_switch.c: 28:             break;
   499     07B0  2FBF               	goto	l35
   500     07B1                     l601:
   501     07B1  087A               	movf	l_switch@value,w
   502                           
   503                           ; Switch size 1, requested type "simple"
   504                           ; Number of cases is 4, Range of values is 112 to 224
   505                           ; switch strategies available:
   506                           ; Name         Instructions Cycles
   507                           ; simple_byte           13     7 (average)
   508                           ; jumptable            263     9 (fixed)
   509                           ;	Chosen strategy is simple_byte
   510     07B2  3A70               	xorlw	112	; case 112
   511     07B3  1903               	skipnz
   512     07B4  2FAF               	goto	l595
   513     07B5  3AC0               	xorlw	192	; case 176
   514     07B6  1903               	skipnz
   515     07B7  2FAC               	goto	l593
   516     07B8  3A60               	xorlw	96	; case 208
   517     07B9  1903               	skipnz
   518     07BA  2FA9               	goto	l591
   519     07BB  3A30               	xorlw	48	; case 224
   520     07BC  1903               	skipnz
   521     07BD  2FA6               	goto	l29
   522     07BE  2FAF               	goto	l595
   523     07BF                     l35:
   524     07BF  0008               	return
   525     07C0                     __end_of_l_switch:
   526     007E                     btemp	set	126	;btemp
   527     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ipop_decide	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    ipop_select	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    option_reg	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    switch_led	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    switchled	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_l_switch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                           _l_switch
                                _led
 ---------------------------------------------------------------------------------
 (1) _led                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _l_switch                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _l_switch
   _led

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      1       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Oct 07 17:26:33 2024

                      pc 0002                       l25 07A0                       l35 07BF  
                     l29 07A6                       fsr 0004                      l601 07B1  
                    l603 076A                      l605 076F                      l581 078E  
                    l591 07A9                      l583 0792                      l593 07AC  
                    l585 0796                      l595 07AF                      l587 079A  
                    l579 078B                      l589 07A1                      _led 078B  
                    indf 0000                     ?_led 007A                     _main 076A  
                   btemp 007E                     start 0000                    ??_led 007A  
                  ?_main 007A                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07C0             __end_of_main 0778  
                 ??_main 007B         __end_of_l_switch 07C0             __pdataCOMMON 0070  
__end_of__initialization 07FC           __pcstackCOMMON 007A               __pmaintext 076A  
              ?_l_switch 007A                  __ptext1 078B                  __ptext2 07A1  
   end_of_initialization 07FC               ??_l_switch 007A               _option_reg 0070  
             _switch_led 0074            __pidataCOMMON 0760      start_initialization 07C0  
            __end_of_led 07A1               init_fetch0 0778                ___latbits 0002  
          l_switch@value 007A                _switchled 0072                 _l_switch 07A1  
            _ipop_decide 0076              _ipop_select 0078                 init_ram0 077C  
