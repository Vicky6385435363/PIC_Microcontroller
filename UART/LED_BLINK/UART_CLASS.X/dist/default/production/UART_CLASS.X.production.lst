

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 24 21:14:28 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167                           
   168                           	psect	nvCOMMON
   169     0072                     __pnvCOMMON:
   170     0072                     _value:
   171     0072                     	ds	1
   172     0018                     _RCSTA	set	24
   173     0019                     _TXREG	set	25
   174     0006                     _PORTB	set	6
   175     0099                     _SPBRG	set	153
   176     0098                     _TXSTA	set	152
   177     0086                     _TRISB	set	134
   178     0087                     _TRISC	set	135
   179     0081                     _OPTION_REG	set	129
   180                           
   181                           	psect	strings
   182     0003                     __pstrings:
   183     0003                     stringtab:
   184     0003                     __stringtab:
   185     0003                     stringcode:	
   186                           ;	String table - string pointers are 1 byte each
   187                           
   188     0003                     stringdir:
   189     0003  3000               	movlw	high stringdir
   190     0004  008A               	movwf	10
   191     0005  0804               	movf	4,w
   192     0006  0A84               	incf	4,f
   193     0007  0782               	addwf	2,f
   194     0008                     __stringbase:
   195     0008  3400               	retlw	0
   196     0009                     __end_of__stringtab:
   197     0009                     STR_1:
   198     0009  3441               	retlw	65	;'A'
   199     000A  3400               	retlw	0
   200     000B                     STR_2:
   201     000B  3442               	retlw	66	;'B'
   202     000C  3400               	retlw	0
   203     000D                     STR_3:
   204     000D  3443               	retlw	67	;'C'
   205     000E  3400               	retlw	0
   206     000F                     STR_4:
   207     000F  3444               	retlw	68	;'D'
   208     0010  3400               	retlw	0
   209                           
   210                           	psect	cinit
   211     07FC                     start_initialization:	
   212                           ; #config settings
   213                           
   214     07FC                     __initialization:
   215     07FC                     end_of_initialization:	
   216                           ;End of C runtime variable initialization code
   217                           
   218     07FC                     __end_of__initialization:
   219     07FC  0183               	clrf	3
   220     07FD  120A  118A  2FCF   	ljmp	_main	;jump to C main() function
   221                           
   222                           	psect	cstackCOMMON
   223     0070                     __pcstackCOMMON:
   224     0070                     ?_transmit_init:
   225     0070                     ??_transmit_init:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231     0070                     ??_main:	
   232                           ; 1 bytes @ 0x0
   233                           
   234                           
   235                           ; 1 bytes @ 0x0
   236     0070                     	ds	2
   237                           
   238                           	psect	maintext
   239     07CF                     __pmaintext:	
   240 ;;
   241 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   242 ;;
   243 ;; *************** function _main *****************
   244 ;; Defined at:
   245 ;;		line 16 in file "UART_CLASS.c"
   246 ;; Parameters:    Size  Location     Type
   247 ;;		None
   248 ;; Auto vars:     Size  Location     Type
   249 ;;		None
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : B00/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   259 ;;      Params:         0       0       0       0       0
   260 ;;      Locals:         0       0       0       0       0
   261 ;;      Temps:          2       0       0       0       0
   262 ;;      Totals:         2       0       0       0       0
   263 ;;Total ram usage:        2 bytes
   264 ;; Hardware stack levels required when called: 1
   265 ;; This function calls:
   266 ;;		_transmit_init
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272     07CF                     _main:	
   273                           ;psect for function _main
   274                           
   275     07CF                     l597:	
   276                           ;incstack = 0
   277                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   278                           
   279                           
   280                           ;UART_CLASS.c: 17:     transmit_init();
   281     07CF  120A  118A  27B5  120A  118A  	fcall	_transmit_init
   282     07D4                     l599:
   283                           
   284                           ;UART_CLASS.c: 19:         value = PORTB;
   285     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   286     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   287     07D6  0806               	movf	6,w	;volatile
   288     07D7  00F2               	movwf	_value
   289                           
   290                           ;UART_CLASS.c: 20:         switch (value) {
   291     07D8  2FE2               	goto	l603
   292     07D9                     l601:
   293                           
   294                           ;UART_CLASS.c: 22:                 TXREG = "A";
   295     07D9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   296     07DA  0099               	movwf	25	;volatile
   297     07DB                     l30:	
   298                           ;UART_CLASS.c: 23:             case 0xD0:
   299                           
   300                           
   301                           ;UART_CLASS.c: 24:                 TXREG = "B";
   302     07DB  3003               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   303     07DC  0099               	movwf	25	;volatile
   304     07DD                     l31:	
   305                           ;UART_CLASS.c: 25:             case 0xB0:
   306                           
   307                           
   308                           ;UART_CLASS.c: 26:                 TXREG = "C";
   309     07DD  3005               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   310     07DE  0099               	movwf	25	;volatile
   311     07DF                     l32:	
   312                           ;UART_CLASS.c: 27:             case 0x70:
   313                           
   314                           
   315                           ;UART_CLASS.c: 28:                 TXREG = "D";
   316     07DF  3007               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   317     07E0  0099               	movwf	25	;volatile
   318                           
   319                           ;UART_CLASS.c: 29:         }
   320     07E1  2FF0               	goto	l605
   321     07E2                     l603:
   322     07E2  0872               	movf	_value,w
   323                           
   324                           ; Switch size 1, requested type "simple"
   325                           ; Number of cases is 4, Range of values is 112 to 224
   326                           ; switch strategies available:
   327                           ; Name         Instructions Cycles
   328                           ; simple_byte           13     7 (average)
   329                           ; jumptable            263     9 (fixed)
   330                           ;	Chosen strategy is simple_byte
   331     07E3  3A70               	xorlw	112	; case 112
   332     07E4  1903               	skipnz
   333     07E5  2FDF               	goto	l32
   334     07E6  3AC0               	xorlw	192	; case 176
   335     07E7  1903               	skipnz
   336     07E8  2FDD               	goto	l31
   337     07E9  3A60               	xorlw	96	; case 208
   338     07EA  1903               	skipnz
   339     07EB  2FDB               	goto	l30
   340     07EC  3A30               	xorlw	48	; case 224
   341     07ED  1903               	skipnz
   342     07EE  2FD9               	goto	l601
   343     07EF  2FF0               	goto	l605
   344     07F0                     l605:
   345                           
   346                           ;UART_CLASS.c: 30:         _delay((unsigned long)((100)*(6000000/4000.0)));
   347     07F0  30C3               	movlw	195
   348     07F1  00F1               	movwf	??_main+1
   349     07F2  30CD               	movlw	205
   350     07F3  00F0               	movwf	??_main
   351     07F4                     u17:
   352     07F4  0BF0               	decfsz	??_main,f
   353     07F5  2FF4               	goto	u17
   354     07F6  0BF1               	decfsz	??_main+1,f
   355     07F7  2FF4               	goto	u17
   356     07F8  2FD4               	goto	l599
   357     07F9  120A  118A  2800   	ljmp	start
   358     07FC                     __end_of_main:
   359                           
   360                           	psect	text1
   361     07B5                     __ptext1:	
   362 ;; *************** function _transmit_init *****************
   363 ;; Defined at:
   364 ;;		line 35 in file "UART_CLASS.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, status,2, status,0, btemp+1
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0
   381 ;;      Totals:         0       0       0       0       0
   382 ;;Total ram usage:        0 bytes
   383 ;; Hardware stack levels used: 1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391     07B5                     _transmit_init:	
   392                           ;psect for function _transmit_init
   393                           
   394     07B5                     l583:	
   395                           ;incstack = 0
   396                           ; Regs used in _transmit_init: [wreg+status,2+status,0+btemp+1]
   397                           
   398                           
   399                           ;UART_CLASS.c: 36:     OPTION_REG &= 0x7F;
   400     07B5  307F               	movlw	127
   401     07B6  00FF               	movwf	btemp+1
   402     07B7  087F               	movf	btemp+1,w
   403     07B8  1683               	bsf	3,5	;RP0=1, select bank1
   404     07B9  1303               	bcf	3,6	;RP1=0, select bank1
   405     07BA  0581               	andwf	1,f	;volatile
   406     07BB                     l585:
   407                           
   408                           ;UART_CLASS.c: 37:     TRISC = 0xC0;
   409     07BB  30C0               	movlw	192
   410     07BC  0087               	movwf	7	;volatile
   411     07BD                     l587:
   412                           
   413                           ;UART_CLASS.c: 38:     TRISB = 0xF0;
   414     07BD  30F0               	movlw	240
   415     07BE  0086               	movwf	6	;volatile
   416     07BF                     l589:
   417                           
   418                           ;UART_CLASS.c: 39:     PORTB = 0x00;
   419     07BF  1283               	bcf	3,5	;RP0=0, select bank0
   420     07C0  1303               	bcf	3,6	;RP1=0, select bank0
   421     07C1  0186               	clrf	6	;volatile
   422     07C2                     l591:
   423                           
   424                           ;UART_CLASS.c: 40:     TXSTA = 0x20;
   425     07C2  3020               	movlw	32
   426     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   427     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   428     07C5  0098               	movwf	24	;volatile
   429     07C6                     l593:
   430                           
   431                           ;UART_CLASS.c: 41:     RCSTA = 0x90;
   432     07C6  3090               	movlw	144
   433     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   434     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   435     07C9  0098               	movwf	24	;volatile
   436     07CA                     l595:
   437                           
   438                           ;UART_CLASS.c: 42:     SPBRG = 0x09;
   439     07CA  3009               	movlw	9
   440     07CB  1683               	bsf	3,5	;RP0=1, select bank1
   441     07CC  1303               	bcf	3,6	;RP1=0, select bank1
   442     07CD  0099               	movwf	25	;volatile
   443     07CE                     l39:
   444     07CE  0008               	return
   445     07CF                     __end_of_transmit_init:
   446     007E                     btemp	set	126	;btemp
   447     007E                     wtemp0	set	126
   448                           
   449                           	psect	config
   450                           
   451                           ;Config register CONFIG @ 0x2007
   452                           ;	Oscillator Selection bits
   453                           ;	FOSC = EXTRC, RC oscillator
   454                           ;	Watchdog Timer Enable bit
   455                           ;	WDTE = OFF, WDT disabled
   456                           ;	Power-up Timer Enable bit
   457                           ;	PWRTE = OFF, PWRT disabled
   458                           ;	Brown-out Reset Enable bit
   459                           ;	BOREN = OFF, BOR disabled
   460                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   461                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   462                           ;	Data EEPROM Memory Code Protection bit
   463                           ;	CPD = OFF, Data EEPROM code protection off
   464                           ;	Flash Program Memory Write Enable bits
   465                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   466                           ;	In-Circuit Debugger Mode bit
   467                           ;	DEBUG = 0x1, unprogrammed default
   468                           ;	Flash Program Memory Code Protection bit
   469                           ;	CP = OFF, Code protection off
   470     2007                     	org	8199
   471     2007  3F3B               	dw	16187

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                      _transmit_init
 ---------------------------------------------------------------------------------
 (1) _transmit_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _transmit_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 24 21:14:28 2024

                      pc 0002                       l30 07DB                       l31 07DD  
                     l32 07DF                       l39 07CE                       u17 07F4  
                     fsr 0004                      l601 07D9                      l603 07E2  
                    l605 07F0                      l591 07C2                      l583 07B5  
                    l593 07C6                      l585 07BB                      l595 07CA  
                    l587 07BD                      l589 07BF                      l597 07CF  
                    l599 07D4                     STR_1 0009                     STR_2 000B  
                   STR_3 000D                     STR_4 000F                     _main 07CF  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
          _transmit_init 07B5                    _TXSTA 0098                    _value 0072  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
         ?_transmit_init 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
        ??_transmit_init 0070               __pnvCOMMON 0072               __pmaintext 07CF  
             __stringtab 0003                  __ptext1 07B5     end_of_initialization 07FC  
    start_initialization 07FC    __end_of_transmit_init 07CF                ___latbits 0002  
              __pstrings 0003              __stringbase 0008       __end_of__stringtab 0009  
              stringcode 0003               _OPTION_REG 0081                 stringdir 0003  
               stringtab 0003  
