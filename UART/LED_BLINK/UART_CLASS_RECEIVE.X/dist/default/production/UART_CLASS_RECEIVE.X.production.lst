

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 25 19:54:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0018                     _RCSTA	set	24
   167     0008                     _PORTD	set	8
   168     001A                     _RCREG	set	26
   169     000C                     _PIR1	set	12
   170     0099                     _SPBRG	set	153
   171     0098                     _TXSTA	set	152
   172     0088                     _TRISD	set	136
   173     0087                     _TRISC	set	135
   174                           
   175                           	psect	cinit
   176     07FB                     start_initialization:	
   177                           ; #config settings
   178                           
   179     07FB                     __initialization:
   180                           
   181                           ; Clear objects allocated to COMMON
   182     07FB  01F0               	clrf	__pbssCOMMON& (0+127)
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2FD1   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMMON
   191     0070                     __pbssCOMMON:
   192     0070                     _receive_value:
   193     0070                     	ds	1
   194                           
   195                           	psect	cstackCOMMON
   196     0000                     __pcstackCOMMON:
   197     0000                     ?_receive_init:
   198     0000                     ??_receive_init:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0000                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0000                     ??_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           	psect	maintext
   209     07D1                     __pmaintext:	
   210                           ; 1 bytes @ 0x0
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 16 in file "UART_RECEIVE.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : B00/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   230 ;;      Params:         0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called: 1
   236 ;; This function calls:
   237 ;;		_receive_init
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243     07D1                     _main:	
   244                           ;psect for function _main
   245                           
   246     07D1                     l589:	
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   249                           
   250                           
   251                           ;UART_RECEIVE.c: 17:     receive_init();
   252     07D1  120A  118A  27BC  120A  118A  	fcall	_receive_init
   253     07D6                     l591:
   254                           
   255                           ;UART_RECEIVE.c: 19:         if (PIR1 & 0x20) {
   256     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   257     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   258     07D8  1E8C               	btfss	12,5	;volatile
   259     07D9  2FDB               	goto	u11
   260     07DA  2FDC               	goto	u10
   261     07DB                     u11:
   262     07DB  2FD6               	goto	l591
   263     07DC                     u10:
   264     07DC                     l593:
   265                           
   266                           ;UART_RECEIVE.c: 20:             receive_value = RCREG;
   267     07DC  081A               	movf	26,w	;volatile
   268     07DD  00F0               	movwf	_receive_value
   269                           
   270                           ;UART_RECEIVE.c: 21:             switch (receive_value) {
   271     07DE  2FEA               	goto	l605
   272     07DF                     l595:
   273                           
   274                           ;UART_RECEIVE.c: 23:                     PORTD = 0x10;
   275     07DF  3010               	movlw	16
   276     07E0  0088               	movwf	8	;volatile
   277                           
   278                           ;UART_RECEIVE.c: 24:                     break;
   279     07E1  2FD6               	goto	l591
   280     07E2                     l597:
   281                           
   282                           ;UART_RECEIVE.c: 26:                     PORTD = 0x02;
   283     07E2  3002               	movlw	2
   284     07E3  0088               	movwf	8	;volatile
   285                           
   286                           ;UART_RECEIVE.c: 27:                     break;
   287     07E4  2FD6               	goto	l591
   288     07E5                     l599:
   289                           
   290                           ;UART_RECEIVE.c: 29:                     PORTD = 0x12;
   291     07E5  3012               	movlw	18
   292     07E6  0088               	movwf	8	;volatile
   293                           
   294                           ;UART_RECEIVE.c: 30:                     break;
   295     07E7  2FD6               	goto	l591
   296     07E8                     l601:
   297                           
   298                           ;UART_RECEIVE.c: 32:                     PORTD = 0x00;
   299     07E8  0188               	clrf	8	;volatile
   300                           
   301                           ;UART_RECEIVE.c: 33:                     break;
   302     07E9  2FD6               	goto	l591
   303     07EA                     l605:
   304     07EA  0870               	movf	_receive_value,w
   305                           
   306                           ; Switch size 1, requested type "simple"
   307                           ; Number of cases is 4, Range of values is 97 to 100
   308                           ; switch strategies available:
   309                           ; Name         Instructions Cycles
   310                           ; simple_byte           13     7 (average)
   311                           ; direct_byte           23    11 (fixed)
   312                           ; jumptable            263     9 (fixed)
   313                           ;	Chosen strategy is simple_byte
   314     07EB  3A61               	xorlw	97	; case 97
   315     07EC  1903               	skipnz
   316     07ED  2FDF               	goto	l595
   317     07EE  3A03               	xorlw	3	; case 98
   318     07EF  1903               	skipnz
   319     07F0  2FE2               	goto	l597
   320     07F1  3A01               	xorlw	1	; case 99
   321     07F2  1903               	skipnz
   322     07F3  2FE5               	goto	l599
   323     07F4  3A07               	xorlw	7	; case 100
   324     07F5  1903               	skipnz
   325     07F6  2FE8               	goto	l601
   326     07F7  2FE8               	goto	l601
   327     07F8  120A  118A  2800   	ljmp	start
   328     07FB                     __end_of_main:
   329                           
   330                           	psect	text1
   331     07BC                     __ptext1:	
   332 ;; *************** function _receive_init *****************
   333 ;; Defined at:
   334 ;;		line 41 in file "UART_RECEIVE.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   348 ;;      Params:         0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels used: 1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361     07BC                     _receive_init:	
   362                           ;psect for function _receive_init
   363                           
   364     07BC                     l583:	
   365                           ;incstack = 0
   366                           ; Regs used in _receive_init: [wreg+status,2]
   367                           
   368                           
   369                           ;UART_RECEIVE.c: 42:     TRISC = 0xC0;
   370     07BC  30C0               	movlw	192
   371     07BD  1683               	bsf	3,5	;RP0=1, select bank1
   372     07BE  1303               	bcf	3,6	;RP1=0, select bank1
   373     07BF  0087               	movwf	7	;volatile
   374     07C0                     l585:
   375                           
   376                           ;UART_RECEIVE.c: 43:     TRISD = 0x00;
   377     07C0  0188               	clrf	8	;volatile
   378     07C1                     l587:
   379                           
   380                           ;UART_RECEIVE.c: 44:     PORTD = 0x00;
   381     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   382     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   383     07C3  0188               	clrf	8	;volatile
   384                           
   385                           ;UART_RECEIVE.c: 45:     TXSTA = 0x20;
   386     07C4  3020               	movlw	32
   387     07C5  1683               	bsf	3,5	;RP0=1, select bank1
   388     07C6  1303               	bcf	3,6	;RP1=0, select bank1
   389     07C7  0098               	movwf	24	;volatile
   390                           
   391                           ;UART_RECEIVE.c: 46:     RCSTA = 0x90;
   392     07C8  3090               	movlw	144
   393     07C9  1283               	bcf	3,5	;RP0=0, select bank0
   394     07CA  1303               	bcf	3,6	;RP1=0, select bank0
   395     07CB  0098               	movwf	24	;volatile
   396                           
   397                           ;UART_RECEIVE.c: 47:     SPBRG = 0x09;
   398     07CC  3009               	movlw	9
   399     07CD  1683               	bsf	3,5	;RP0=1, select bank1
   400     07CE  1303               	bcf	3,6	;RP1=0, select bank1
   401     07CF  0099               	movwf	25	;volatile
   402     07D0                     l39:
   403     07D0  0008               	return
   404     07D1                     __end_of_receive_init:
   405     007E                     btemp	set	126	;btemp
   406     007E                     wtemp0	set	126
   407                           
   408                           	psect	config
   409                           
   410                           ;Config register CONFIG @ 0x2007
   411                           ;	Oscillator Selection bits
   412                           ;	FOSC = EXTRC, RC oscillator
   413                           ;	Watchdog Timer Enable bit
   414                           ;	WDTE = OFF, WDT disabled
   415                           ;	Power-up Timer Enable bit
   416                           ;	PWRTE = OFF, PWRT disabled
   417                           ;	Brown-out Reset Enable bit
   418                           ;	BOREN = OFF, BOR disabled
   419                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   420                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   421                           ;	Data EEPROM Memory Code Protection bit
   422                           ;	CPD = OFF, Data EEPROM code protection off
   423                           ;	Flash Program Memory Write Enable bits
   424                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   425                           ;	In-Circuit Debugger Mode bit
   426                           ;	DEBUG = 0x1, unprogrammed default
   427                           ;	Flash Program Memory Code Protection bit
   428                           ;	CP = OFF, Code protection off
   429     2007                     	org	8199
   430     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       1
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                       _receive_init
 ---------------------------------------------------------------------------------
 (1) _receive_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _receive_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       1       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       1      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 25 19:54:12 2024

                     l39 07D0                       u10 07DC                       u11 07DB  
                    l601 07E8                      l605 07EA                      l583 07BC  
                    l591 07D6                      l585 07C0                      l593 07DC  
                    l587 07C1                      l595 07DF                      l597 07E2  
                    l589 07D1                      l599 07E5                     _PIR1 000C  
                   _main 07D1                     btemp 007E                     start 0000  
                  ?_main 0000                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _TXSTA 0098                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 07FB  
                 ??_main 0000  __end_of__initialization 07FC            ?_receive_init 0000  
         __pcstackCOMMON 0000           ??_receive_init 0000               __pmaintext 07D1  
                __ptext1 07BC            _receive_value 0070     end_of_initialization 07FC  
   __end_of_receive_init 07D1      start_initialization 07FB              __pbssCOMMON 0070  
              ___latbits 0002             _receive_init 07BC  
