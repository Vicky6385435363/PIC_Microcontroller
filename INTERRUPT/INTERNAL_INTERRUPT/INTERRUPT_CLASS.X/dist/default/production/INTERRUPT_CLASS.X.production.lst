

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Oct 12 20:43:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000B                     _INTCON	set	11
   169     0007                     _PORTC	set	7
   170     0008                     _PORTD	set	8
   171     0006                     _PORTB	set	6
   172     0081                     _OPTION_REG	set	129
   173     0087                     _TRISC	set	135
   174     0088                     _TRISD	set	136
   175     0086                     _TRISB	set	134
   176                           
   177                           	psect	cinit
   178     0011                     start_initialization:	
   179                           ; #config settings
   180                           
   181     0011                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   185     0012                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     0012                     __end_of__initialization:
   189     0012  0183               	clrf	3
   190     0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193     0076                     __pbssCOMMON:
   194     0076                     _s:
   195     0076                     	ds	1
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_main:
   200     0070                     ?_ISR:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ??_ISR:	
   204                           ; 1 bytes @ 0x0
   205                           
   206                           
   207                           ; 1 bytes @ 0x0
   208     0070                     	ds	6
   209                           
   210                           	psect	cstackBANK0
   211     0020                     __pcstackBANK0:
   212     0020                     ??_main:
   213                           
   214                           ; 1 bytes @ 0x0
   215     0020                     	ds	3
   216                           
   217                           	psect	maintext
   218     0016                     __pmaintext:	
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 15 in file "CLASS.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, btemp+1
   233 ;; Tracked objects:
   234 ;;		On entry : B00/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   238 ;;      Params:         0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0
   240 ;;      Temps:          0       3       0       0       0
   241 ;;      Totals:         0       3       0       0       0
   242 ;;Total ram usage:        3 bytes
   243 ;; Hardware stack levels required when called: 1
   244 ;; This function calls:
   245 ;;		Nothing
   246 ;; This function is called by:
   247 ;;		Startup code after reset
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251     0016                     _main:	
   252                           ;psect for function _main
   253                           
   254     0016                     l609:	
   255                           ;incstack = 0
   256                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   257                           
   258                           
   259                           ;CLASS.c: 16:     TRISB = 0xF0;
   260     0016  30F0               	movlw	240
   261     0017  1683               	bsf	3,5	;RP0=1, select bank1
   262     0018  1303               	bcf	3,6	;RP1=0, select bank1
   263     0019  0086               	movwf	6	;volatile
   264                           
   265                           ;CLASS.c: 17:     PORTB = 0xF0;
   266     001A  30F0               	movlw	240
   267     001B  1283               	bcf	3,5	;RP0=0, select bank0
   268     001C  1303               	bcf	3,6	;RP1=0, select bank0
   269     001D  0086               	movwf	6	;volatile
   270     001E                     l611:
   271                           
   272                           ;CLASS.c: 18:     TRISD = 0x00;
   273     001E  1683               	bsf	3,5	;RP0=1, select bank1
   274     001F  1303               	bcf	3,6	;RP1=0, select bank1
   275     0020  0188               	clrf	8	;volatile
   276     0021                     l613:
   277                           
   278                           ;CLASS.c: 19:     PORTD = 0x00;
   279     0021  1283               	bcf	3,5	;RP0=0, select bank0
   280     0022  1303               	bcf	3,6	;RP1=0, select bank0
   281     0023  0188               	clrf	8	;volatile
   282     0024                     l615:
   283                           
   284                           ;CLASS.c: 20:     TRISC = 0x00;
   285     0024  1683               	bsf	3,5	;RP0=1, select bank1
   286     0025  1303               	bcf	3,6	;RP1=0, select bank1
   287     0026  0187               	clrf	7	;volatile
   288     0027                     l617:
   289                           
   290                           ;CLASS.c: 21:     PORTC = 0x00;
   291     0027  1283               	bcf	3,5	;RP0=0, select bank0
   292     0028  1303               	bcf	3,6	;RP1=0, select bank0
   293     0029  0187               	clrf	7	;volatile
   294     002A                     l619:
   295                           
   296                           ;CLASS.c: 22:     OPTION_REG &= 0x7F;
   297     002A  307F               	movlw	127
   298     002B  00FF               	movwf	btemp+1
   299     002C  087F               	movf	btemp+1,w
   300     002D  1683               	bsf	3,5	;RP0=1, select bank1
   301     002E  1303               	bcf	3,6	;RP1=0, select bank1
   302     002F  0581               	andwf	1,f	;volatile
   303     0030                     l621:
   304                           
   305                           ;CLASS.c: 23:     INTCON = 0x88;
   306     0030  3088               	movlw	136
   307     0031  008B               	movwf	11	;volatile
   308     0032                     l623:
   309                           
   310                           ;CLASS.c: 25:         PORTC = ~PORTC;
   311     0032  1283               	bcf	3,5	;RP0=0, select bank0
   312     0033  1303               	bcf	3,6	;RP1=0, select bank0
   313     0034  0987               	comf	7,f	;volatile
   314     0035                     l625:
   315                           
   316                           ;CLASS.c: 26:         _delay((unsigned long)((500)*(6000000/4000.0)));
   317     0035  3004               	movlw	4
   318     0036  1283               	bcf	3,5	;RP0=0, select bank0
   319     0037  1303               	bcf	3,6	;RP1=0, select bank0
   320     0038  00A2               	movwf	??_main+2
   321     0039  30CF               	movlw	207
   322     003A  00A1               	movwf	??_main+1
   323     003B  3001               	movlw	1
   324     003C  00A0               	movwf	??_main
   325     003D                     u37:
   326     003D  0BA0               	decfsz	??_main,f
   327     003E  283D               	goto	u37
   328     003F  0BA1               	decfsz	??_main+1,f
   329     0040  283D               	goto	u37
   330     0041  0BA2               	decfsz	??_main+2,f
   331     0042  283D               	goto	u37
   332     0043  2832               	goto	l623
   333     0044  120A  118A  280E   	ljmp	start
   334     0047                     __end_of_main:
   335                           
   336                           	psect	text1
   337     0047                     __ptext1:	
   338 ;; *************** function _ISR *****************
   339 ;; Defined at:
   340 ;;		line 30 in file "CLASS.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0, btemp+1
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   354 ;;      Params:         0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0
   356 ;;      Temps:          6       0       0       0       0
   357 ;;      Totals:         6       0       0       0       0
   358 ;;Total ram usage:        6 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; This function calls:
   361 ;;		Nothing
   362 ;; This function is called by:
   363 ;;		Interrupt level 1
   364 ;; This function uses a non-reentrant model
   365 ;;
   366                           
   367     0047                     _ISR:	
   368                           ;psect for function _ISR
   369                           
   370     0047                     i1l597:
   371                           
   372                           ;CLASS.c: 31:     if (INTCON & 0x01) {
   373     0047  1C0B               	btfss	11,0	;volatile
   374     0048  284A               	goto	u1_21
   375     0049  284B               	goto	u1_20
   376     004A                     u1_21:
   377     004A  2856               	goto	i1l605
   378     004B                     u1_20:
   379     004B                     i1l599:
   380                           
   381                           ;CLASS.c: 32:         s = PORTB;
   382     004B  1283               	bcf	3,5	;RP0=0, select bank0
   383     004C  1303               	bcf	3,6	;RP1=0, select bank0
   384     004D  0806               	movf	6,w	;volatile
   385     004E  00F6               	movwf	_s
   386     004F                     i1l601:
   387                           
   388                           ;CLASS.c: 33:         if (s == 0x70) {
   389     004F  3070               	movlw	112
   390     0050  0676               	xorwf	_s,w
   391     0051  1D03               	btfss	3,2
   392     0052  2854               	goto	u2_21
   393     0053  2855               	goto	u2_20
   394     0054                     u2_21:
   395     0054  2856               	goto	i1l605
   396     0055                     u2_20:
   397     0055                     i1l603:
   398                           
   399                           ;CLASS.c: 34:             PORTD = ~PORTD;
   400     0055  0988               	comf	8,f	;volatile
   401     0056                     i1l605:
   402                           
   403                           ;CLASS.c: 37:     INTCON &= (~(0x01));
   404     0056  30FE               	movlw	254
   405     0057  00FF               	movwf	btemp+1
   406     0058  087F               	movf	btemp+1,w
   407     0059  058B               	andwf	11,f	;volatile
   408     005A                     i1l607:
   409                           
   410                           ;CLASS.c: 38:     _delay((unsigned long)((1500)*(6000000/4000.0)));
   411     005A  300C               	movlw	12
   412     005B  00F2               	movwf	??_ISR+2
   413     005C  306B               	movlw	107
   414     005D  00F1               	movwf	??_ISR+1
   415     005E  3009               	movlw	9
   416     005F  00F0               	movwf	??_ISR
   417     0060                     u4_27:
   418     0060  0BF0               	decfsz	??_ISR,f
   419     0061  2860               	goto	u4_27
   420     0062  0BF1               	decfsz	??_ISR+1,f
   421     0063  2860               	goto	u4_27
   422     0064  0BF2               	decfsz	??_ISR+2,f
   423     0065  2860               	goto	u4_27
   424     0066  2867               	nop2
   425     0067                     i1l35:
   426     0067  0875               	movf	??_ISR+5,w
   427     0068  00FF               	movwf	btemp+1
   428     0069  0874               	movf	??_ISR+4,w
   429     006A  008A               	movwf	10
   430     006B  0E73               	swapf	??_ISR+3,w
   431     006C  0083               	movwf	3
   432     006D  0EFE               	swapf	btemp,f
   433     006E  0E7E               	swapf	btemp,w
   434     006F  0009               	retfie
   435     0070                     __end_of_ISR:
   436     007E                     btemp	set	126	;btemp
   437     007E                     wtemp0	set	126
   438                           
   439                           	psect	intentry
   440     0004                     __pintentry:	
   441                           ;incstack = 0
   442                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   443                           
   444     0004                     interrupt_function:
   445     007E                     saved_w	set	btemp
   446     0004  00FE               	movwf	btemp
   447     0005  0E03               	swapf	3,w
   448     0006  00F3               	movwf	??_ISR+3
   449     0007  080A               	movf	10,w
   450     0008  00F4               	movwf	??_ISR+4
   451     0009  087F               	movf	btemp+1,w
   452     000A  00F5               	movwf	??_ISR+5
   453     000B  120A  118A  2847   	ljmp	_ISR
   454                           
   455                           	psect	config
   456                           
   457                           ;Config register CONFIG @ 0x2007
   458                           ;	Oscillator Selection bits
   459                           ;	FOSC = EXTRC, RC oscillator
   460                           ;	Watchdog Timer Enable bit
   461                           ;	WDTE = OFF, WDT disabled
   462                           ;	Power-up Timer Enable bit
   463                           ;	PWRTE = OFF, PWRT disabled
   464                           ;	Brown-out Reset Enable bit
   465                           ;	BOREN = OFF, BOR disabled
   466                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   467                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   468                           ;	Data EEPROM Memory Code Protection bit
   469                           ;	CPD = OFF, Data EEPROM code protection off
   470                           ;	Flash Program Memory Write Enable bits
   471                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   472                           ;	In-Circuit Debugger Mode bit
   473                           ;	DEBUG = 0x1, unprogrammed default
   474                           ;	Flash Program Memory Code Protection bit
   475                           ;	CP = OFF, Code protection off
   476     2007                     	org	8199
   477     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Oct 12 20:43:54 2024

                      _s 0076                       u37 003D                      l611 001E  
                    l621 0030                      l613 0021                      l623 0032  
                    l615 0024                      l625 0035                      l617 0027  
                    l609 0016                      l619 002A                      _ISR 0047  
                   ?_ISR 0070                     i1l35 0067                     u1_20 004B  
                   u1_21 004A                     u2_20 0055                     u2_21 0054  
                   u4_27 0060                     _main 0016                     btemp 007E  
                   start 000E                    ??_ISR 0070                    ?_main 0070  
                  i1l601 004F                    i1l603 0055                    i1l605 0056  
                  i1l607 005A                    i1l597 0047                    i1l599 004B  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0047                   ??_main 0020  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 0016               __pintentry 0004  
                __ptext1 0047     end_of_initialization 0012      start_initialization 0011  
            __end_of_ISR 0070              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020        interrupt_function 0004                 intlevel1 0000  
             _OPTION_REG 0081  
