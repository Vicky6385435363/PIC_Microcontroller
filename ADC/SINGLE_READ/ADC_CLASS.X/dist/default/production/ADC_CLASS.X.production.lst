

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 28 19:14:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     04BE                     __pidataBANK0:
   180                           
   181                           ;initializer for _msg_2
   182     04BE  3441               	retlw	65
   183     04BF  3444               	retlw	68
   184     04C0  3443               	retlw	67
   185     04C1  3420               	retlw	32
   186     04C2  3443               	retlw	67
   187     04C3  3441               	retlw	65
   188     04C4  344C               	retlw	76
   189     04C5  343A               	retlw	58
   190     04C6  3420               	retlw	32
   191                           
   192                           ;initializer for _msg_1
   193     04C7  3441               	retlw	65
   194     04C8  3444               	retlw	68
   195     04C9  3443               	retlw	67
   196     04CA  3420               	retlw	32
   197     04CB  3452               	retlw	82
   198     04CC  3441               	retlw	65
   199     04CD  3457               	retlw	87
   200     04CE  343A               	retlw	58
   201     04CF  3420               	retlw	32
   202     0008                     _PORTD	set	8
   203     0007                     _PORTC	set	7
   204     001E                     _ADRESH	set	30
   205     001F                     _ADCON0	set	31
   206     009F                     _ADCON1	set	159
   207     0088                     _TRISD	set	136
   208     0087                     _TRISC	set	135
   209     0085                     _TRISA	set	133
   210     009E                     _ADRESL	set	158
   211                           
   212                           	psect	cinit
   213     07E6                     start_initialization:	
   214                           ; #config settings
   215                           
   216     07E6                     __initialization:
   217                           
   218                           ; Initialize objects allocated to BANK0
   219     07E6  1383               	bcf	3,7	;select IRP bank0
   220     07E7  3044               	movlw	low (__pdataBANK0+18)
   221     07E8  00FD               	movwf	btemp+-1
   222     07E9  3004               	movlw	high __pidataBANK0
   223     07EA  00FE               	movwf	btemp
   224     07EB  30BE               	movlw	low __pidataBANK0
   225     07EC  00FF               	movwf	btemp+1
   226     07ED  3032               	movlw	low __pdataBANK0
   227     07EE  0084               	movwf	4
   228     07EF  120A  118A  24D4  120A  118A  	fcall	init_ram0
   229                           
   230                           ; Clear objects allocated to BANK0
   231     07F4  3020               	movlw	low __pbssBANK0
   232     07F5  0084               	movwf	4
   233     07F6  3032               	movlw	low (__pbssBANK0+18)
   234     07F7  120A  118A  24B6  120A  118A  	fcall	clear_ram0
   235     07FC                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238     07FC                     __end_of__initialization:
   239     07FC  0183               	clrf	3
   240     07FD  120A  118A  2DFD   	ljmp	_main	;jump to C main() function
   241                           
   242                           	psect	bssBANK0
   243     0020                     __pbssBANK0:
   244     0020                     _d2:
   245     0020                     	ds	2
   246     0022                     _d1:
   247     0022                     	ds	2
   248     0024                     _d4:
   249     0024                     	ds	2
   250     0026                     _d3:
   251     0026                     	ds	2
   252     0028                     _volt:
   253     0028                     	ds	2
   254     002A                     _result:
   255     002A                     	ds	2
   256     002C                     _adc_high:
   257     002C                     	ds	2
   258     002E                     _adc_low:
   259     002E                     	ds	2
   260     0030                     _m:
   261     0030                     	ds	2
   262                           
   263                           	psect	dataBANK0
   264     0032                     __pdataBANK0:
   265     0032                     _msg_2:
   266     0032                     	ds	9
   267     003B                     _msg_1:
   268     003B                     	ds	9
   269                           
   270                           	psect	inittext
   271     04D0                     init_fetch0:	
   272                           ;	Called with low address in FSR and high address in W
   273                           
   274     04D0  087E               	movf	btemp,w
   275     04D1  008A               	movwf	10
   276     04D2  087F               	movf	btemp+1,w
   277     04D3  0082               	movwf	2
   278     04D4                     init_ram0:	
   279                           ;Called with:
   280                           ;	high address of idata address in btemp 
   281                           ;	low address of idata address in btemp+1 
   282                           ;	low address of data in FSR
   283                           ;	high address + 1 of data in btemp-1
   284                           
   285     04D4  120A  118A  24D0  120A  118A  	fcall	init_fetch0
   286     04D9  0080               	movwf	0
   287     04DA  0A84               	incf	4,f
   288     04DB  0804               	movf	4,w
   289     04DC  067D               	xorwf	btemp+-1,w
   290     04DD  1903               	btfsc	3,2
   291     04DE  3400               	retlw	0
   292     04DF  0AFF               	incf	btemp+1,f
   293     04E0  1903               	btfsc	3,2
   294     04E1  0AFE               	incf	btemp,f
   295     04E2  2CD4               	goto	init_ram0
   296                           
   297                           	psect	clrtext
   298     04B6                     clear_ram0:	
   299                           ;	Called with FSR containing the base address, and
   300                           ;	W with the last address+1
   301                           
   302     04B6  0064               	clrwdt	;clear the watchdog before getting into this loop
   303     04B7                     clrloop0:
   304     04B7  0180               	clrf	0	;clear RAM location pointed to by FSR
   305     04B8  0A84               	incf	4,f	;increment pointer
   306     04B9  0604               	xorwf	4,w	;XOR with final address
   307     04BA  1903               	btfsc	3,2	;have we reached the end yet?
   308     04BB  3400               	retlw	0	;all done for this memory range, return
   309     04BC  0604               	xorwf	4,w	;XOR again to restore value
   310     04BD  2CB7               	goto	clrloop0	;do the next byte
   311                           
   312                           	psect	cstackCOMMON
   313     0070                     __pcstackCOMMON:
   314     0070                     ?_lcd_init:
   315     0070                     ?_lcd_command:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_lcd_command:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_lcd_data:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_lcd_data:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?___bmul:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?___wmul:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ___bmul@multiplicand:	
   337                           ; 2 bytes @ 0x0
   338                           
   339     0070                     ___wmul@multiplier:	
   340                           ; 1 bytes @ 0x0
   341                           
   342                           
   343                           ; 2 bytes @ 0x0
   344     0070                     	ds	1
   345     0071                     ??___bmul:
   346     0071                     ___bmul@product:	
   347                           ; 1 bytes @ 0x1
   348                           
   349                           
   350                           ; 1 bytes @ 0x1
   351     0071                     	ds	1
   352     0072                     lcd_command@i:
   353     0072                     lcd_data@i:	
   354                           ; 1 bytes @ 0x2
   355                           
   356     0072                     ___bmul@multiplier:	
   357                           ; 1 bytes @ 0x2
   358                           
   359     0072                     ___wmul@multiplicand:	
   360                           ; 1 bytes @ 0x2
   361                           
   362                           
   363                           ; 2 bytes @ 0x2
   364     0072                     	ds	1
   365     0073                     ??_lcd_init:
   366                           
   367                           ; 1 bytes @ 0x3
   368     0073                     	ds	1
   369     0074                     ??___wmul:
   370     0074                     ___wmul@product:	
   371                           ; 1 bytes @ 0x4
   372                           
   373                           
   374                           ; 2 bytes @ 0x4
   375     0074                     	ds	2
   376     0076                     ?___lwdiv:
   377     0076                     ___lwdiv@divisor:	
   378                           ; 2 bytes @ 0x6
   379                           
   380                           
   381                           ; 2 bytes @ 0x6
   382     0076                     	ds	2
   383     0078                     ___lwdiv@dividend:
   384                           
   385                           ; 2 bytes @ 0x8
   386     0078                     	ds	2
   387     007A                     ??___lwdiv:
   388     007A                     ___lwdiv@quotient:	
   389                           ; 1 bytes @ 0xA
   390                           
   391                           
   392                           ; 2 bytes @ 0xA
   393     007A                     	ds	2
   394     007C                     ___lwdiv@counter:
   395                           
   396                           ; 1 bytes @ 0xC
   397     007C                     	ds	1
   398     007D                     main@i:
   399                           
   400                           ; 1 bytes @ 0xD
   401     007D                     	ds	1
   402                           
   403                           	psect	cstackBANK0
   404     0044                     __pcstackBANK0:
   405     0044                     ?_lcd_output:
   406     0044                     lcd_output@i:	
   407                           ; 1 bytes @ 0x0
   408                           
   409                           
   410                           ; 2 bytes @ 0x0
   411     0044                     	ds	2
   412     0046                     ??_lcd_output:
   413                           
   414                           ; 1 bytes @ 0x2
   415     0046                     	ds	6
   416     004C                     lcd_output@m:
   417                           
   418                           ; 2 bytes @ 0x8
   419     004C                     	ds	2
   420     004E                     ??_main:
   421                           
   422                           ; 1 bytes @ 0xA
   423     004E                     	ds	2
   424                           
   425                           	psect	maintext
   426     05FD                     __pmaintext:	
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 27 in file "ADC_CLASS.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  i               1   13[COMMON] unsigned char 
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : B00/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         0       0       0       0       0
   447 ;;      Locals:         1       0       0       0       0
   448 ;;      Temps:          0       2       0       0       0
   449 ;;      Totals:         1       2       0       0       0
   450 ;;Total ram usage:        3 bytes
   451 ;; Hardware stack levels required when called: 2
   452 ;; This function calls:
   453 ;;		___lwdiv
   454 ;;		___wmul
   455 ;;		_lcd_command
   456 ;;		_lcd_data
   457 ;;		_lcd_init
   458 ;;		_lcd_output
   459 ;; This function is called by:
   460 ;;		Startup code after reset
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464     05FD                     _main:	
   465                           ;psect for function _main
   466                           
   467     05FD                     l975:	
   468                           ;incstack = 0
   469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   470                           
   471                           
   472                           ;ADC_CLASS.c: 28:     unsigned char i;;ADC_CLASS.c: 29:     lcd_init();
   473     05FD  120A  118A  258C  120A  118A  	fcall	_lcd_init
   474                           
   475                           ;ADC_CLASS.c: 30:     lcd_command(0x80);
   476     0602  3080               	movlw	128
   477     0603  120A  118A  250C  120A  118A  	fcall	_lcd_command
   478     0608                     l977:
   479                           
   480                           ;ADC_CLASS.c: 31:     for (i = 0; i < 9; i++) {
   481     0608  01FD               	clrf	main@i
   482     0609                     l983:
   483                           
   484                           ;ADC_CLASS.c: 32:         lcd_data(msg_1[i]);
   485     0609  087D               	movf	main@i,w
   486     060A  3E3B               	addlw	(low (_msg_1| 0))& (0+255)
   487     060B  0084               	movwf	4
   488     060C  1383               	bcf	3,7	;select IRP bank0
   489     060D  0800               	movf	0,w
   490     060E  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   491     0613                     l985:
   492                           
   493                           ;ADC_CLASS.c: 33:     }
   494     0613  3001               	movlw	1
   495     0614  00FF               	movwf	btemp+1
   496     0615  087F               	movf	btemp+1,w
   497     0616  07FD               	addwf	main@i,f
   498     0617                     l987:
   499     0617  3009               	movlw	9
   500     0618  027D               	subwf	main@i,w
   501     0619  1C03               	skipc
   502     061A  2E1C               	goto	u501
   503     061B  2E1D               	goto	u500
   504     061C                     u501:
   505     061C  2E09               	goto	l983
   506     061D                     u500:
   507     061D                     l989:
   508                           
   509                           ;ADC_CLASS.c: 34:     lcd_command(0xC0);
   510     061D  30C0               	movlw	192
   511     061E  120A  118A  250C  120A  118A  	fcall	_lcd_command
   512     0623                     l991:
   513                           
   514                           ;ADC_CLASS.c: 35:     for (i = 0; i < 9; i++) {
   515     0623  01FD               	clrf	main@i
   516     0624                     l997:
   517                           
   518                           ;ADC_CLASS.c: 36:         lcd_data(msg_2[i]);
   519     0624  087D               	movf	main@i,w
   520     0625  3E32               	addlw	(low (_msg_2| 0))& (0+255)
   521     0626  0084               	movwf	4
   522     0627  1383               	bcf	3,7	;select IRP bank0
   523     0628  0800               	movf	0,w
   524     0629  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   525     062E                     l999:
   526                           
   527                           ;ADC_CLASS.c: 37:     }
   528     062E  3001               	movlw	1
   529     062F  00FF               	movwf	btemp+1
   530     0630  087F               	movf	btemp+1,w
   531     0631  07FD               	addwf	main@i,f
   532     0632                     l1001:
   533     0632  3009               	movlw	9
   534     0633  027D               	subwf	main@i,w
   535     0634  1C03               	skipc
   536     0635  2E37               	goto	u511
   537     0636  2E38               	goto	u510
   538     0637                     u511:
   539     0637  2E24               	goto	l997
   540     0638                     u510:
   541     0638                     l1003:
   542                           
   543                           ;ADC_CLASS.c: 38:     lcd_command(0xCD);
   544     0638  30CD               	movlw	205
   545     0639  120A  118A  250C  120A  118A  	fcall	_lcd_command
   546                           
   547                           ;ADC_CLASS.c: 39:     lcd_data(0x56);
   548     063E  3056               	movlw	86
   549     063F  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   550     0644                     l1005:
   551                           
   552                           ;ADC_CLASS.c: 41:         ADCON0 = 0x81;
   553     0644  3081               	movlw	129
   554     0645  1283               	bcf	3,5	;RP0=0, select bank0
   555     0646  1303               	bcf	3,6	;RP1=0, select bank0
   556     0647  009F               	movwf	31	;volatile
   557     0648                     l1007:
   558                           
   559                           ;ADC_CLASS.c: 42:         ADCON0 |= 0x04;
   560     0648  151F               	bsf	31,2	;volatile
   561     0649                     l60:	
   562                           ;ADC_CLASS.c: 43:         while (ADCON0 & 0x04);
   563                           
   564     0649  191F               	btfsc	31,2	;volatile
   565     064A  2E4C               	goto	u521
   566     064B  2E4D               	goto	u520
   567     064C                     u521:
   568     064C  2E49               	goto	l60
   569     064D                     u520:
   570     064D                     l1009:
   571                           
   572                           ;ADC_CLASS.c: 44:         adc_high = ADRESH;
   573     064D  081E               	movf	30,w	;volatile
   574     064E  00CE               	movwf	??_main
   575     064F  01CF               	clrf	??_main+1
   576     0650  084E               	movf	??_main,w
   577     0651  00AC               	movwf	_adc_high
   578     0652  084F               	movf	??_main+1,w
   579     0653  00AD               	movwf	_adc_high+1
   580                           
   581                           ;ADC_CLASS.c: 45:         adc_low = ADRESL;
   582     0654  1683               	bsf	3,5	;RP0=1, select bank1
   583     0655  1303               	bcf	3,6	;RP1=0, select bank1
   584     0656  081E               	movf	30,w	;volatile
   585     0657  1283               	bcf	3,5	;RP0=0, select bank0
   586     0658  1303               	bcf	3,6	;RP1=0, select bank0
   587     0659  00CE               	movwf	??_main
   588     065A  01CF               	clrf	??_main+1
   589     065B  084E               	movf	??_main,w
   590     065C  00AE               	movwf	_adc_low
   591     065D  084F               	movf	??_main+1,w
   592     065E  00AF               	movwf	_adc_low+1
   593                           
   594                           ;ADC_CLASS.c: 46:         result = ((unsigned int) adc_high << 8) | ((unsigned int) adc_
      +                          low);
   595     065F  082C               	movf	_adc_high,w
   596     0660  00CF               	movwf	??_main+1
   597     0661  01CE               	clrf	??_main
   598     0662  082E               	movf	_adc_low,w
   599     0663  044E               	iorwf	??_main,w
   600     0664  00AA               	movwf	_result
   601     0665  082F               	movf	_adc_low+1,w
   602     0666  044F               	iorwf	??_main+1,w
   603     0667  00AB               	movwf	_result+1
   604     0668                     l1011:
   605                           
   606                           ;ADC_CLASS.c: 47:         volt = ((result * 48) / 1023);
   607     0668  30FF               	movlw	255
   608     0669  00F6               	movwf	___lwdiv@divisor
   609     066A  3003               	movlw	3
   610     066B  00F7               	movwf	___lwdiv@divisor+1
   611     066C  082B               	movf	_result+1,w
   612     066D  00F1               	movwf	___wmul@multiplier+1
   613     066E  082A               	movf	_result,w
   614     066F  00F0               	movwf	___wmul@multiplier
   615     0670  3030               	movlw	48
   616     0671  00F2               	movwf	___wmul@multiplicand
   617     0672  3000               	movlw	0
   618     0673  00F3               	movwf	___wmul@multiplicand+1
   619     0674  120A  118A  2523  120A  118A  	fcall	___wmul
   620     0679  0871               	movf	?___wmul+1,w
   621     067A  00F9               	movwf	___lwdiv@dividend+1
   622     067B  0870               	movf	?___wmul,w
   623     067C  00F8               	movwf	___lwdiv@dividend
   624     067D  120A  118A  2548  120A  118A  	fcall	___lwdiv
   625     0682  0877               	movf	?___lwdiv+1,w
   626     0683  1283               	bcf	3,5	;RP0=0, select bank0
   627     0684  1303               	bcf	3,6	;RP1=0, select bank0
   628     0685  00A9               	movwf	_volt+1
   629     0686  0876               	movf	?___lwdiv,w
   630     0687  00A8               	movwf	_volt
   631     0688                     l1013:
   632                           
   633                           ;ADC_CLASS.c: 48:         lcd_command(0x89);
   634     0688  3089               	movlw	137
   635     0689  120A  118A  250C  120A  118A  	fcall	_lcd_command
   636     068E                     l1015:
   637                           
   638                           ;ADC_CLASS.c: 49:         lcd_output(result);
   639     068E  1283               	bcf	3,5	;RP0=0, select bank0
   640     068F  1303               	bcf	3,6	;RP1=0, select bank0
   641     0690  082B               	movf	_result+1,w
   642     0691  00C5               	movwf	lcd_output@i+1
   643     0692  082A               	movf	_result,w
   644     0693  00C4               	movwf	lcd_output@i
   645     0694  120A  118A  26B9  120A  118A  	fcall	_lcd_output
   646     0699                     l1017:
   647                           
   648                           ;ADC_CLASS.c: 50:         lcd_command(0xC9);
   649     0699  30C9               	movlw	201
   650     069A  120A  118A  250C  120A  118A  	fcall	_lcd_command
   651     069F                     l1019:
   652                           
   653                           ;ADC_CLASS.c: 51:         lcd_output(volt);
   654     069F  1283               	bcf	3,5	;RP0=0, select bank0
   655     06A0  1303               	bcf	3,6	;RP1=0, select bank0
   656     06A1  0829               	movf	_volt+1,w
   657     06A2  00C5               	movwf	lcd_output@i+1
   658     06A3  0828               	movf	_volt,w
   659     06A4  00C4               	movwf	lcd_output@i
   660     06A5  120A  118A  26B9  120A  118A  	fcall	_lcd_output
   661     06AA                     l1021:
   662                           
   663                           ;ADC_CLASS.c: 52:         _delay((unsigned long)((100)*(6000000/4000.0)));
   664     06AA  30C3               	movlw	195
   665     06AB  1283               	bcf	3,5	;RP0=0, select bank0
   666     06AC  1303               	bcf	3,6	;RP1=0, select bank0
   667     06AD  00CF               	movwf	??_main+1
   668     06AE  30CC               	movlw	204
   669     06AF  00CE               	movwf	??_main
   670     06B0                     u537:
   671     06B0  0BCE               	decfsz	??_main,f
   672     06B1  2EB0               	goto	u537
   673     06B2  0BCF               	decfsz	??_main+1,f
   674     06B3  2EB0               	goto	u537
   675     06B4  0000               	nop
   676     06B5  2E44               	goto	l1005
   677     06B6  120A  118A  2800   	ljmp	start
   678     06B9                     __end_of_main:
   679                           
   680                           	psect	text1
   681     06B9                     __ptext1:	
   682 ;; *************** function _lcd_output *****************
   683 ;; Defined at:
   684 ;;		line 95 in file "ADC_CLASS.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  i               2    0[BANK0 ] unsigned int 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  m               2    8[BANK0 ] unsigned int 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         0       2       0       0       0
   699 ;;      Locals:         0       2       0       0       0
   700 ;;      Temps:          0       6       0       0       0
   701 ;;      Totals:         0      10       0       0       0
   702 ;;Total ram usage:       10 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 1
   705 ;; This function calls:
   706 ;;		___bmul
   707 ;;		___lwdiv
   708 ;;		___wmul
   709 ;;		_lcd_data
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715     06B9                     _lcd_output:	
   716                           ;psect for function _lcd_output
   717                           
   718     06B9                     l929:	
   719                           ;incstack = 0
   720                           ; Regs used in _lcd_output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   721                           
   722                           
   723                           ;ADC_CLASS.c: 96:     unsigned int m;;ADC_CLASS.c: 97:     m = i;
   724     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   725     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   726     06BB  0845               	movf	lcd_output@i+1,w
   727     06BC  00CD               	movwf	lcd_output@m+1
   728     06BD  0844               	movf	lcd_output@i,w
   729     06BE  00CC               	movwf	lcd_output@m
   730     06BF                     l931:
   731                           
   732                           ;ADC_CLASS.c: 98:     d4 = (unsigned char) (m / 1000);
   733     06BF  30E8               	movlw	232
   734     06C0  00F6               	movwf	___lwdiv@divisor
   735     06C1  3003               	movlw	3
   736     06C2  00F7               	movwf	___lwdiv@divisor+1
   737     06C3  084D               	movf	lcd_output@m+1,w
   738     06C4  00F9               	movwf	___lwdiv@dividend+1
   739     06C5  084C               	movf	lcd_output@m,w
   740     06C6  00F8               	movwf	___lwdiv@dividend
   741     06C7  120A  118A  2548  120A  118A  	fcall	___lwdiv
   742     06CC  0876               	movf	?___lwdiv,w
   743     06CD  1283               	bcf	3,5	;RP0=0, select bank0
   744     06CE  1303               	bcf	3,6	;RP1=0, select bank0
   745     06CF  00C6               	movwf	??_lcd_output
   746     06D0  01C7               	clrf	??_lcd_output+1
   747     06D1  0846               	movf	??_lcd_output,w
   748     06D2  00A4               	movwf	_d4
   749     06D3  0847               	movf	??_lcd_output+1,w
   750     06D4  00A5               	movwf	_d4+1
   751     06D5                     l933:
   752                           
   753                           ;ADC_CLASS.c: 99:     d3 = (unsigned char) ((m - (d4 * 1000)) / 100);
   754     06D5  3064               	movlw	100
   755     06D6  00F6               	movwf	___lwdiv@divisor
   756     06D7  3000               	movlw	0
   757     06D8  00F7               	movwf	___lwdiv@divisor+1
   758     06D9  0825               	movf	_d4+1,w
   759     06DA  00F1               	movwf	___wmul@multiplier+1
   760     06DB  0824               	movf	_d4,w
   761     06DC  00F0               	movwf	___wmul@multiplier
   762     06DD  3018               	movlw	24
   763     06DE  00F2               	movwf	___wmul@multiplicand
   764     06DF  30FC               	movlw	252
   765     06E0  00F3               	movwf	___wmul@multiplicand+1
   766     06E1  120A  118A  2523  120A  118A  	fcall	___wmul
   767     06E6  1283               	bcf	3,5	;RP0=0, select bank0
   768     06E7  1303               	bcf	3,6	;RP1=0, select bank0
   769     06E8  084C               	movf	lcd_output@m,w
   770     06E9  0770               	addwf	?___wmul,w
   771     06EA  00F8               	movwf	___lwdiv@dividend
   772     06EB  084D               	movf	lcd_output@m+1,w
   773     06EC  1803               	skipnc
   774     06ED  0A4D               	incf	lcd_output@m+1,w
   775     06EE  0771               	addwf	?___wmul+1,w
   776     06EF  00F9               	movwf	___lwdiv@dividend+1
   777     06F0  120A  118A  2548  120A  118A  	fcall	___lwdiv
   778     06F5  0876               	movf	?___lwdiv,w
   779     06F6  1283               	bcf	3,5	;RP0=0, select bank0
   780     06F7  1303               	bcf	3,6	;RP1=0, select bank0
   781     06F8  00C6               	movwf	??_lcd_output
   782     06F9  01C7               	clrf	??_lcd_output+1
   783     06FA  0846               	movf	??_lcd_output,w
   784     06FB  00A6               	movwf	_d3
   785     06FC  0847               	movf	??_lcd_output+1,w
   786     06FD  00A7               	movwf	_d3+1
   787     06FE                     l935:
   788                           
   789                           ;ADC_CLASS.c: 100:     d2 = (unsigned char) ((m - (d4 * 1000)-(d3 * 100)) / 10);
   790     06FE  300A               	movlw	10
   791     06FF  00F6               	movwf	___lwdiv@divisor
   792     0700  3000               	movlw	0
   793     0701  00F7               	movwf	___lwdiv@divisor+1
   794     0702  0825               	movf	_d4+1,w
   795     0703  00F1               	movwf	___wmul@multiplier+1
   796     0704  0824               	movf	_d4,w
   797     0705  00F0               	movwf	___wmul@multiplier
   798     0706  3018               	movlw	24
   799     0707  00F2               	movwf	___wmul@multiplicand
   800     0708  30FC               	movlw	252
   801     0709  00F3               	movwf	___wmul@multiplicand+1
   802     070A  120A  118A  2523  120A  118A  	fcall	___wmul
   803     070F  0870               	movf	?___wmul,w
   804     0710  1283               	bcf	3,5	;RP0=0, select bank0
   805     0711  1303               	bcf	3,6	;RP1=0, select bank0
   806     0712  00C6               	movwf	??_lcd_output
   807     0713  0871               	movf	?___wmul+1,w
   808     0714  00C7               	movwf	??_lcd_output+1
   809     0715  0827               	movf	_d3+1,w
   810     0716  00F1               	movwf	___wmul@multiplier+1
   811     0717  0826               	movf	_d3,w
   812     0718  00F0               	movwf	___wmul@multiplier
   813     0719  309C               	movlw	156
   814     071A  00F2               	movwf	___wmul@multiplicand
   815     071B  30FF               	movlw	255
   816     071C  00F3               	movwf	___wmul@multiplicand+1
   817     071D  120A  118A  2523  120A  118A  	fcall	___wmul
   818     0722  0870               	movf	?___wmul,w
   819     0723  1283               	bcf	3,5	;RP0=0, select bank0
   820     0724  1303               	bcf	3,6	;RP1=0, select bank0
   821     0725  0746               	addwf	??_lcd_output,w
   822     0726  00C8               	movwf	??_lcd_output+2
   823     0727  0871               	movf	?___wmul+1,w
   824     0728  1803               	skipnc
   825     0729  0A71               	incf	?___wmul+1,w
   826     072A  0747               	addwf	??_lcd_output+1,w
   827     072B  00C9               	movwf	??_lcd_output+3
   828     072C  084C               	movf	lcd_output@m,w
   829     072D  0748               	addwf	??_lcd_output+2,w
   830     072E  00F8               	movwf	___lwdiv@dividend
   831     072F  084D               	movf	lcd_output@m+1,w
   832     0730  1803               	skipnc
   833     0731  0A4D               	incf	lcd_output@m+1,w
   834     0732  0749               	addwf	??_lcd_output+3,w
   835     0733  00F9               	movwf	___lwdiv@dividend+1
   836     0734  120A  118A  2548  120A  118A  	fcall	___lwdiv
   837     0739  0876               	movf	?___lwdiv,w
   838     073A  1283               	bcf	3,5	;RP0=0, select bank0
   839     073B  1303               	bcf	3,6	;RP1=0, select bank0
   840     073C  00CA               	movwf	??_lcd_output+4
   841     073D  01CB               	clrf	??_lcd_output+5
   842     073E  084A               	movf	??_lcd_output+4,w
   843     073F  00A0               	movwf	_d2
   844     0740  084B               	movf	??_lcd_output+5,w
   845     0741  00A1               	movwf	_d2+1
   846     0742                     l937:
   847                           
   848                           ;ADC_CLASS.c: 101:     d1 = (unsigned char) (m - (d4 * 1000)-(d3 * 100)-(d2 * 10));
   849     0742  3018               	movlw	24
   850     0743  00F0               	movwf	___bmul@multiplicand
   851     0744  0824               	movf	_d4,w
   852     0745  120A  118A  24F7  120A  118A  	fcall	___bmul
   853     074A  1283               	bcf	3,5	;RP0=0, select bank0
   854     074B  1303               	bcf	3,6	;RP1=0, select bank0
   855     074C  00C6               	movwf	??_lcd_output
   856     074D  309C               	movlw	156
   857     074E  00F0               	movwf	___bmul@multiplicand
   858     074F  0826               	movf	_d3,w
   859     0750  120A  118A  24F7  120A  118A  	fcall	___bmul
   860     0755  1283               	bcf	3,5	;RP0=0, select bank0
   861     0756  1303               	bcf	3,6	;RP1=0, select bank0
   862     0757  00C7               	movwf	??_lcd_output+1
   863     0758  30F6               	movlw	246
   864     0759  00F0               	movwf	___bmul@multiplicand
   865     075A  0820               	movf	_d2,w
   866     075B  120A  118A  24F7  120A  118A  	fcall	___bmul
   867     0760  1283               	bcf	3,5	;RP0=0, select bank0
   868     0761  1303               	bcf	3,6	;RP1=0, select bank0
   869     0762  0747               	addwf	??_lcd_output+1,w
   870     0763  0746               	addwf	??_lcd_output,w
   871     0764  074C               	addwf	lcd_output@m,w
   872     0765  00C8               	movwf	??_lcd_output+2
   873     0766  01C9               	clrf	??_lcd_output+3
   874     0767  0848               	movf	??_lcd_output+2,w
   875     0768  00A2               	movwf	_d1
   876     0769  0849               	movf	??_lcd_output+3,w
   877     076A  00A3               	movwf	_d1+1
   878     076B                     l939:
   879                           
   880                           ;ADC_CLASS.c: 104:     if (d4 > 0) {
   881     076B  0824               	movf	_d4,w
   882     076C  0425               	iorwf	_d4+1,w
   883     076D  1903               	btfsc	3,2
   884     076E  2F70               	goto	u401
   885     076F  2F71               	goto	u400
   886     0770                     u401:
   887     0770  2F79               	goto	l943
   888     0771                     u400:
   889     0771                     l941:
   890                           
   891                           ;ADC_CLASS.c: 105:         lcd_data(0x30 + d4);
   892     0771  0824               	movf	_d4,w
   893     0772  3E30               	addlw	48
   894     0773  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   895                           
   896                           ;ADC_CLASS.c: 106:     } else {
   897     0778  2F7F               	goto	l945
   898     0779                     l943:
   899                           
   900                           ;ADC_CLASS.c: 107:         lcd_data(0x20);
   901     0779  3020               	movlw	32
   902     077A  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   903     077F                     l945:
   904                           
   905                           ;ADC_CLASS.c: 111:     if (d3 > 0 || d4 > 0) {
   906     077F  1283               	bcf	3,5	;RP0=0, select bank0
   907     0780  1303               	bcf	3,6	;RP1=0, select bank0
   908     0781  0826               	movf	_d3,w
   909     0782  0427               	iorwf	_d3+1,w
   910     0783  1D03               	btfss	3,2
   911     0784  2F86               	goto	u411
   912     0785  2F87               	goto	u410
   913     0786                     u411:
   914     0786  2F8D               	goto	l949
   915     0787                     u410:
   916     0787                     l947:
   917     0787  0824               	movf	_d4,w
   918     0788  0425               	iorwf	_d4+1,w
   919     0789  1903               	btfsc	3,2
   920     078A  2F8C               	goto	u421
   921     078B  2F8D               	goto	u420
   922     078C                     u421:
   923     078C  2F95               	goto	l951
   924     078D                     u420:
   925     078D                     l949:
   926                           
   927                           ;ADC_CLASS.c: 112:         lcd_data(0x30 + d3);
   928     078D  0826               	movf	_d3,w
   929     078E  3E30               	addlw	48
   930     078F  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   931                           
   932                           ;ADC_CLASS.c: 113:     } else {
   933     0794  2F9B               	goto	l953
   934     0795                     l951:
   935                           
   936                           ;ADC_CLASS.c: 114:         lcd_data(0x20);
   937     0795  3020               	movlw	32
   938     0796  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   939     079B                     l953:
   940                           
   941                           ;ADC_CLASS.c: 118:     if (d2 > 0 || d3 > 0 || d4 > 0) {
   942     079B  1283               	bcf	3,5	;RP0=0, select bank0
   943     079C  1303               	bcf	3,6	;RP1=0, select bank0
   944     079D  0820               	movf	_d2,w
   945     079E  0421               	iorwf	_d2+1,w
   946     079F  1D03               	btfss	3,2
   947     07A0  2FA2               	goto	u431
   948     07A1  2FA3               	goto	u430
   949     07A2                     u431:
   950     07A2  2FAF               	goto	l959
   951     07A3                     u430:
   952     07A3                     l955:
   953     07A3  0826               	movf	_d3,w
   954     07A4  0427               	iorwf	_d3+1,w
   955     07A5  1D03               	btfss	3,2
   956     07A6  2FA8               	goto	u441
   957     07A7  2FA9               	goto	u440
   958     07A8                     u441:
   959     07A8  2FAF               	goto	l959
   960     07A9                     u440:
   961     07A9                     l957:
   962     07A9  0824               	movf	_d4,w
   963     07AA  0425               	iorwf	_d4+1,w
   964     07AB  1903               	btfsc	3,2
   965     07AC  2FAE               	goto	u451
   966     07AD  2FAF               	goto	u450
   967     07AE                     u451:
   968     07AE  2FB7               	goto	l961
   969     07AF                     u450:
   970     07AF                     l959:
   971                           
   972                           ;ADC_CLASS.c: 119:         lcd_data(0x30 + d2);
   973     07AF  0820               	movf	_d2,w
   974     07B0  3E30               	addlw	48
   975     07B1  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   976                           
   977                           ;ADC_CLASS.c: 120:     } else {
   978     07B6  2FBD               	goto	l963
   979     07B7                     l961:
   980                           
   981                           ;ADC_CLASS.c: 121:         lcd_data(0x20);
   982     07B7  3020               	movlw	32
   983     07B8  120A  118A  24E3  120A  118A  	fcall	_lcd_data
   984     07BD                     l963:
   985                           
   986                           ;ADC_CLASS.c: 123:     if (d4 > 0 || d3 > 0 || d2 > 0 || d1 > 0) {
   987     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   988     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   989     07BF  0824               	movf	_d4,w
   990     07C0  0425               	iorwf	_d4+1,w
   991     07C1  1D03               	btfss	3,2
   992     07C2  2FC4               	goto	u461
   993     07C3  2FC5               	goto	u460
   994     07C4                     u461:
   995     07C4  2FD7               	goto	l971
   996     07C5                     u460:
   997     07C5                     l965:
   998     07C5  0826               	movf	_d3,w
   999     07C6  0427               	iorwf	_d3+1,w
  1000     07C7  1D03               	btfss	3,2
  1001     07C8  2FCA               	goto	u471
  1002     07C9  2FCB               	goto	u470
  1003     07CA                     u471:
  1004     07CA  2FD7               	goto	l971
  1005     07CB                     u470:
  1006     07CB                     l967:
  1007     07CB  0820               	movf	_d2,w
  1008     07CC  0421               	iorwf	_d2+1,w
  1009     07CD  1D03               	btfss	3,2
  1010     07CE  2FD0               	goto	u481
  1011     07CF  2FD1               	goto	u480
  1012     07D0                     u481:
  1013     07D0  2FD7               	goto	l971
  1014     07D1                     u480:
  1015     07D1                     l969:
  1016     07D1  0822               	movf	_d1,w
  1017     07D2  0423               	iorwf	_d1+1,w
  1018     07D3  1903               	btfsc	3,2
  1019     07D4  2FD6               	goto	u491
  1020     07D5  2FD7               	goto	u490
  1021     07D6                     u491:
  1022     07D6  2FDF               	goto	l973
  1023     07D7                     u490:
  1024     07D7                     l971:
  1025                           
  1026                           ;ADC_CLASS.c: 124:         lcd_data(0x30 + d1);
  1027     07D7  0822               	movf	_d1,w
  1028     07D8  3E30               	addlw	48
  1029     07D9  120A  118A  24E3  120A  118A  	fcall	_lcd_data
  1030                           
  1031                           ;ADC_CLASS.c: 125:     } else {
  1032     07DE  2FE5               	goto	l91
  1033     07DF                     l973:
  1034                           
  1035                           ;ADC_CLASS.c: 126:         lcd_data(0x20);
  1036     07DF  3020               	movlw	32
  1037     07E0  120A  118A  24E3  120A  118A  	fcall	_lcd_data
  1038     07E5                     l91:
  1039     07E5  0008               	return
  1040     07E6                     __end_of_lcd_output:
  1041                           
  1042                           	psect	text2
  1043     04E3                     __ptext2:	
  1044 ;; *************** function _lcd_data *****************
  1045 ;; Defined at:
  1046 ;;		line 87 in file "ADC_CLASS.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  i               1    wreg     unsigned char 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  i               1    2[COMMON] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, btemp+1
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         1       0       0       0       0
  1062 ;;      Temps:          2       0       0       0       0
  1063 ;;      Totals:         3       0       0       0       0
  1064 ;;Total ram usage:        3 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;;		_lcd_output
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074     04E3                     _lcd_data:	
  1075                           ;psect for function _lcd_data
  1076                           
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
  1080                           ;lcd_data@i stored from wreg
  1081     04E3  00F2               	movwf	lcd_data@i
  1082     04E4                     l837:
  1083                           
  1084                           ;ADC_CLASS.c: 88:     PORTC |= (0x04);
  1085     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1086     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1087     04E6  1507               	bsf	7,2	;volatile
  1088     04E7                     l839:
  1089                           
  1090                           ;ADC_CLASS.c: 89:     PORTD = i;
  1091     04E7  0872               	movf	lcd_data@i,w
  1092     04E8  0088               	movwf	8	;volatile
  1093     04E9                     l841:
  1094                           
  1095                           ;ADC_CLASS.c: 90:     PORTC |= 0x01;
  1096     04E9  1407               	bsf	7,0	;volatile
  1097     04EA                     l843:
  1098                           
  1099                           ;ADC_CLASS.c: 91:     PORTC &= ~0x01;
  1100     04EA  30FE               	movlw	254
  1101     04EB  00FF               	movwf	btemp+1
  1102     04EC  087F               	movf	btemp+1,w
  1103     04ED  0587               	andwf	7,f	;volatile
  1104     04EE                     l845:
  1105                           
  1106                           ;ADC_CLASS.c: 92:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1107     04EE  30C3               	movlw	195
  1108     04EF  00F1               	movwf	??_lcd_data+1
  1109     04F0  30CD               	movlw	205
  1110     04F1  00F0               	movwf	??_lcd_data
  1111     04F2                     u547:
  1112     04F2  0BF0               	decfsz	??_lcd_data,f
  1113     04F3  2CF2               	goto	u547
  1114     04F4  0BF1               	decfsz	??_lcd_data+1,f
  1115     04F5  2CF2               	goto	u547
  1116     04F6                     l74:
  1117     04F6  0008               	return
  1118     04F7                     __end_of_lcd_data:
  1119                           
  1120                           	psect	text3
  1121     0523                     __ptext3:	
  1122 ;; *************** function ___wmul *****************
  1123 ;; Defined at:
  1124 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;  multiplier      2    0[COMMON] unsigned int 
  1127 ;;  multiplicand    2    2[COMMON] unsigned int 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  product         2    4[COMMON] unsigned int 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2    0[COMMON] unsigned int 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         4       0       0       0       0
  1140 ;;      Locals:         2       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         6       0       0       0       0
  1143 ;;Total ram usage:        6 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;;		_lcd_output
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153     0523                     ___wmul:	
  1154                           ;psect for function ___wmul
  1155                           
  1156     0523                     l847:	
  1157                           ;incstack = 0
  1158                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1159                           
  1160     0523  01F4               	clrf	___wmul@product
  1161     0524  01F5               	clrf	___wmul@product+1
  1162     0525                     l849:
  1163     0525  1C70               	btfss	___wmul@multiplier,0
  1164     0526  2D28               	goto	u271
  1165     0527  2D29               	goto	u270
  1166     0528                     u271:
  1167     0528  2D2F               	goto	l177
  1168     0529                     u270:
  1169     0529                     l851:
  1170     0529  0872               	movf	___wmul@multiplicand,w
  1171     052A  07F4               	addwf	___wmul@product,f
  1172     052B  1803               	skipnc
  1173     052C  0AF5               	incf	___wmul@product+1,f
  1174     052D  0873               	movf	___wmul@multiplicand+1,w
  1175     052E  07F5               	addwf	___wmul@product+1,f
  1176     052F                     l177:
  1177     052F  3001               	movlw	1
  1178     0530                     u285:
  1179     0530  1003               	clrc
  1180     0531  0DF2               	rlf	___wmul@multiplicand,f
  1181     0532  0DF3               	rlf	___wmul@multiplicand+1,f
  1182     0533  3EFF               	addlw	-1
  1183     0534  1D03               	skipz
  1184     0535  2D30               	goto	u285
  1185     0536                     l853:
  1186     0536  3001               	movlw	1
  1187     0537                     u295:
  1188     0537  1003               	clrc
  1189     0538  0CF1               	rrf	___wmul@multiplier+1,f
  1190     0539  0CF0               	rrf	___wmul@multiplier,f
  1191     053A  3EFF               	addlw	-1
  1192     053B  1D03               	skipz
  1193     053C  2D37               	goto	u295
  1194     053D                     l855:
  1195     053D  0870               	movf	___wmul@multiplier,w
  1196     053E  0471               	iorwf	___wmul@multiplier+1,w
  1197     053F  1D03               	btfss	3,2
  1198     0540  2D42               	goto	u301
  1199     0541  2D43               	goto	u300
  1200     0542                     u301:
  1201     0542  2D25               	goto	l849
  1202     0543                     u300:
  1203     0543                     l857:
  1204     0543  0875               	movf	___wmul@product+1,w
  1205     0544  00F1               	movwf	?___wmul+1
  1206     0545  0874               	movf	___wmul@product,w
  1207     0546  00F0               	movwf	?___wmul
  1208     0547                     l179:
  1209     0547  0008               	return
  1210     0548                     __end_of___wmul:
  1211                           
  1212                           	psect	text4
  1213     0548                     __ptext4:	
  1214 ;; *************** function ___lwdiv *****************
  1215 ;; Defined at:
  1216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  divisor         2    6[COMMON] unsigned int 
  1219 ;;  dividend        2    8[COMMON] unsigned int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  quotient        2   10[COMMON] unsigned int 
  1222 ;;  counter         1   12[COMMON] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  2    6[COMMON] unsigned int 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, btemp+1
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         4       0       0       0       0
  1233 ;;      Locals:         3       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0
  1235 ;;      Totals:         7       0       0       0       0
  1236 ;;Total ram usage:        7 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;;		_lcd_output
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246     0548                     ___lwdiv:	
  1247                           ;psect for function ___lwdiv
  1248                           
  1249     0548                     l877:	
  1250                           ;incstack = 0
  1251                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1252                           
  1253     0548  01FA               	clrf	___lwdiv@quotient
  1254     0549  01FB               	clrf	___lwdiv@quotient+1
  1255     054A                     l879:
  1256     054A  0876               	movf	___lwdiv@divisor,w
  1257     054B  0477               	iorwf	___lwdiv@divisor+1,w
  1258     054C  1903               	btfsc	3,2
  1259     054D  2D4F               	goto	u331
  1260     054E  2D50               	goto	u330
  1261     054F                     u331:
  1262     054F  2D87               	goto	l899
  1263     0550                     u330:
  1264     0550                     l881:
  1265     0550  01FC               	clrf	___lwdiv@counter
  1266     0551  0AFC               	incf	___lwdiv@counter,f
  1267     0552  2D5E               	goto	l887
  1268     0553                     l883:
  1269     0553  3001               	movlw	1
  1270     0554                     u345:
  1271     0554  1003               	clrc
  1272     0555  0DF6               	rlf	___lwdiv@divisor,f
  1273     0556  0DF7               	rlf	___lwdiv@divisor+1,f
  1274     0557  3EFF               	addlw	-1
  1275     0558  1D03               	skipz
  1276     0559  2D54               	goto	u345
  1277     055A                     l885:
  1278     055A  3001               	movlw	1
  1279     055B  00FF               	movwf	btemp+1
  1280     055C  087F               	movf	btemp+1,w
  1281     055D  07FC               	addwf	___lwdiv@counter,f
  1282     055E                     l887:
  1283     055E  1FF7               	btfss	___lwdiv@divisor+1,7
  1284     055F  2D61               	goto	u351
  1285     0560  2D62               	goto	u350
  1286     0561                     u351:
  1287     0561  2D53               	goto	l883
  1288     0562                     u350:
  1289     0562                     l889:
  1290     0562  3001               	movlw	1
  1291     0563                     u365:
  1292     0563  1003               	clrc
  1293     0564  0DFA               	rlf	___lwdiv@quotient,f
  1294     0565  0DFB               	rlf	___lwdiv@quotient+1,f
  1295     0566  3EFF               	addlw	-1
  1296     0567  1D03               	skipz
  1297     0568  2D63               	goto	u365
  1298     0569  0877               	movf	___lwdiv@divisor+1,w
  1299     056A  0279               	subwf	___lwdiv@dividend+1,w
  1300     056B  1D03               	skipz
  1301     056C  2D6F               	goto	u375
  1302     056D  0876               	movf	___lwdiv@divisor,w
  1303     056E  0278               	subwf	___lwdiv@dividend,w
  1304     056F                     u375:
  1305     056F  1C03               	skipc
  1306     0570  2D72               	goto	u371
  1307     0571  2D73               	goto	u370
  1308     0572                     u371:
  1309     0572  2D7A               	goto	l895
  1310     0573                     u370:
  1311     0573                     l891:
  1312     0573  0876               	movf	___lwdiv@divisor,w
  1313     0574  02F8               	subwf	___lwdiv@dividend,f
  1314     0575  0877               	movf	___lwdiv@divisor+1,w
  1315     0576  1C03               	skipc
  1316     0577  03F9               	decf	___lwdiv@dividend+1,f
  1317     0578  02F9               	subwf	___lwdiv@dividend+1,f
  1318     0579                     l893:
  1319     0579  147A               	bsf	___lwdiv@quotient,0
  1320     057A                     l895:
  1321     057A  3001               	movlw	1
  1322     057B                     u385:
  1323     057B  1003               	clrc
  1324     057C  0CF7               	rrf	___lwdiv@divisor+1,f
  1325     057D  0CF6               	rrf	___lwdiv@divisor,f
  1326     057E  3EFF               	addlw	-1
  1327     057F  1D03               	skipz
  1328     0580  2D7B               	goto	u385
  1329     0581                     l897:
  1330     0581  3001               	movlw	1
  1331     0582  02FC               	subwf	___lwdiv@counter,f
  1332     0583  1D03               	btfss	3,2
  1333     0584  2D86               	goto	u391
  1334     0585  2D87               	goto	u390
  1335     0586                     u391:
  1336     0586  2D62               	goto	l889
  1337     0587                     u390:
  1338     0587                     l899:
  1339     0587  087B               	movf	___lwdiv@quotient+1,w
  1340     0588  00F7               	movwf	?___lwdiv+1
  1341     0589  087A               	movf	___lwdiv@quotient,w
  1342     058A  00F6               	movwf	?___lwdiv
  1343     058B                     l457:
  1344     058B  0008               	return
  1345     058C                     __end_of___lwdiv:
  1346                           
  1347                           	psect	text5
  1348     04F7                     __ptext5:	
  1349 ;; *************** function ___bmul *****************
  1350 ;; Defined at:
  1351 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  multiplier      1    wreg     unsigned char 
  1354 ;;  multiplicand    1    0[COMMON] unsigned char 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  multiplier      1    2[COMMON] unsigned char 
  1357 ;;  product         1    1[COMMON] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      unsigned char 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, btemp+1
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         1       0       0       0       0
  1368 ;;      Locals:         2       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0
  1370 ;;      Totals:         3       0       0       0       0
  1371 ;;Total ram usage:        3 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_lcd_output
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380     04F7                     ___bmul:	
  1381                           ;psect for function ___bmul
  1382                           
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1386                           ;___bmul@multiplier stored from wreg
  1387     04F7  00F2               	movwf	___bmul@multiplier
  1388     04F8                     l861:
  1389     04F8  01F1               	clrf	___bmul@product
  1390     04F9                     l863:
  1391     04F9  1C72               	btfss	___bmul@multiplier,0
  1392     04FA  2CFC               	goto	u311
  1393     04FB  2CFD               	goto	u310
  1394     04FC                     u311:
  1395     04FC  2D01               	goto	l867
  1396     04FD                     u310:
  1397     04FD                     l865:
  1398     04FD  0870               	movf	___bmul@multiplicand,w
  1399     04FE  00FF               	movwf	btemp+1
  1400     04FF  087F               	movf	btemp+1,w
  1401     0500  07F1               	addwf	___bmul@product,f
  1402     0501                     l867:
  1403     0501  1003               	clrc
  1404     0502  0DF0               	rlf	___bmul@multiplicand,f
  1405     0503                     l869:
  1406     0503  1003               	clrc
  1407     0504  0CF2               	rrf	___bmul@multiplier,f
  1408     0505                     l871:
  1409     0505  0872               	movf	___bmul@multiplier,w
  1410     0506  1D03               	btfss	3,2
  1411     0507  2D09               	goto	u321
  1412     0508  2D0A               	goto	u320
  1413     0509                     u321:
  1414     0509  2CF9               	goto	l863
  1415     050A                     u320:
  1416     050A                     l873:
  1417     050A  0871               	movf	___bmul@product,w
  1418     050B                     l203:
  1419     050B  0008               	return
  1420     050C                     __end_of___bmul:
  1421                           
  1422                           	psect	text6
  1423     058C                     __ptext6:	
  1424 ;; *************** function _lcd_init *****************
  1425 ;; Defined at:
  1426 ;;		line 57 in file "ADC_CLASS.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          2       0       0       0       0
  1443 ;;      Totals:         2       0       0       0       0
  1444 ;;Total ram usage:        2 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 1
  1447 ;; This function calls:
  1448 ;;		_lcd_command
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454     058C                     _lcd_init:	
  1455                           ;psect for function _lcd_init
  1456                           
  1457     058C                     l903:	
  1458                           ;incstack = 0
  1459                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1460                           
  1461                           
  1462                           ;ADC_CLASS.c: 58:     TRISA = 0x01;
  1463     058C  3001               	movlw	1
  1464     058D  1683               	bsf	3,5	;RP0=1, select bank1
  1465     058E  1303               	bcf	3,6	;RP1=0, select bank1
  1466     058F  0085               	movwf	5	;volatile
  1467     0590                     l905:
  1468                           
  1469                           ;ADC_CLASS.c: 59:     TRISC = 0x00;
  1470     0590  0187               	clrf	7	;volatile
  1471     0591                     l907:
  1472                           
  1473                           ;ADC_CLASS.c: 60:     TRISD = 0x00;
  1474     0591  0188               	clrf	8	;volatile
  1475                           
  1476                           ;ADC_CLASS.c: 61:     ADCON0 = 0x81;
  1477     0592  3081               	movlw	129
  1478     0593  1283               	bcf	3,5	;RP0=0, select bank0
  1479     0594  1303               	bcf	3,6	;RP1=0, select bank0
  1480     0595  009F               	movwf	31	;volatile
  1481                           
  1482                           ;ADC_CLASS.c: 62:     ADCON1 = 0x8E;
  1483     0596  308E               	movlw	142
  1484     0597  1683               	bsf	3,5	;RP0=1, select bank1
  1485     0598  1303               	bcf	3,6	;RP1=0, select bank1
  1486     0599  009F               	movwf	31	;volatile
  1487     059A                     l909:
  1488                           
  1489                           ;ADC_CLASS.c: 63:     lcd_command(0x38);
  1490     059A  3038               	movlw	56
  1491     059B  120A  118A  250C  120A  118A  	fcall	_lcd_command
  1492     05A0                     l911:
  1493                           
  1494                           ;ADC_CLASS.c: 64:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1495     05A0  30C3               	movlw	195
  1496     05A1  00F4               	movwf	??_lcd_init+1
  1497     05A2  30CD               	movlw	205
  1498     05A3  00F3               	movwf	??_lcd_init
  1499     05A4                     u557:
  1500     05A4  0BF3               	decfsz	??_lcd_init,f
  1501     05A5  2DA4               	goto	u557
  1502     05A6  0BF4               	decfsz	??_lcd_init+1,f
  1503     05A7  2DA4               	goto	u557
  1504                           
  1505                           ;ADC_CLASS.c: 65:     lcd_command(0x38);
  1506     05A8  3038               	movlw	56
  1507     05A9  120A  118A  250C  120A  118A  	fcall	_lcd_command
  1508     05AE                     l913:
  1509                           
  1510                           ;ADC_CLASS.c: 66:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1511     05AE  30C3               	movlw	195
  1512     05AF  00F4               	movwf	??_lcd_init+1
  1513     05B0  30CD               	movlw	205
  1514     05B1  00F3               	movwf	??_lcd_init
  1515     05B2                     u567:
  1516     05B2  0BF3               	decfsz	??_lcd_init,f
  1517     05B3  2DB2               	goto	u567
  1518     05B4  0BF4               	decfsz	??_lcd_init+1,f
  1519     05B5  2DB2               	goto	u567
  1520     05B6                     l915:
  1521                           
  1522                           ;ADC_CLASS.c: 67:     lcd_command(0x38);
  1523     05B6  3038               	movlw	56
  1524     05B7  120A  118A  250C  120A  118A  	fcall	_lcd_command
  1525                           
  1526                           ;ADC_CLASS.c: 68:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1527     05BC  30C3               	movlw	195
  1528     05BD  00F4               	movwf	??_lcd_init+1
  1529     05BE  30CD               	movlw	205
  1530     05BF  00F3               	movwf	??_lcd_init
  1531     05C0                     u577:
  1532     05C0  0BF3               	decfsz	??_lcd_init,f
  1533     05C1  2DC0               	goto	u577
  1534     05C2  0BF4               	decfsz	??_lcd_init+1,f
  1535     05C3  2DC0               	goto	u577
  1536     05C4                     l917:
  1537                           
  1538                           ;ADC_CLASS.c: 69:     lcd_command(0x38);
  1539     05C4  3038               	movlw	56
  1540     05C5  120A  118A  250C  120A  118A  	fcall	_lcd_command
  1541     05CA                     l919:
  1542                           
  1543                           ;ADC_CLASS.c: 70:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1544     05CA  30C3               	movlw	195
  1545     05CB  00F4               	movwf	??_lcd_init+1
  1546     05CC  30CD               	movlw	205
  1547     05CD  00F3               	movwf	??_lcd_init
  1548     05CE                     u587:
  1549     05CE  0BF3               	decfsz	??_lcd_init,f
  1550     05CF  2DCE               	goto	u587
  1551     05D0  0BF4               	decfsz	??_lcd_init+1,f
  1552     05D1  2DCE               	goto	u587
  1553                           
  1554                           ;ADC_CLASS.c: 71:     lcd_command(0x06);
  1555     05D2  3006               	movlw	6
  1556     05D3  120A  118A  250C  120A  118A  	fcall	_lcd_command
  1557     05D8                     l921:
  1558                           
  1559                           ;ADC_CLASS.c: 72:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1560     05D8  30C3               	movlw	195
  1561     05D9  00F4               	movwf	??_lcd_init+1
  1562     05DA  30CD               	movlw	205
  1563     05DB  00F3               	movwf	??_lcd_init
  1564     05DC                     u597:
  1565     05DC  0BF3               	decfsz	??_lcd_init,f
  1566     05DD  2DDC               	goto	u597
  1567     05DE  0BF4               	decfsz	??_lcd_init+1,f
  1568     05DF  2DDC               	goto	u597
  1569     05E0                     l923:
  1570                           
  1571                           ;ADC_CLASS.c: 73:     lcd_command(0x0C);
  1572     05E0  300C               	movlw	12
  1573     05E1  120A  118A  250C  120A  118A  	fcall	_lcd_command
  1574                           
  1575                           ;ADC_CLASS.c: 74:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1576     05E6  30C3               	movlw	195
  1577     05E7  00F4               	movwf	??_lcd_init+1
  1578     05E8  30CD               	movlw	205
  1579     05E9  00F3               	movwf	??_lcd_init
  1580     05EA                     u607:
  1581     05EA  0BF3               	decfsz	??_lcd_init,f
  1582     05EB  2DEA               	goto	u607
  1583     05EC  0BF4               	decfsz	??_lcd_init+1,f
  1584     05ED  2DEA               	goto	u607
  1585     05EE                     l925:
  1586                           
  1587                           ;ADC_CLASS.c: 75:     lcd_command(0x01);
  1588     05EE  3001               	movlw	1
  1589     05EF  120A  118A  250C  120A  118A  	fcall	_lcd_command
  1590     05F4                     l927:
  1591                           
  1592                           ;ADC_CLASS.c: 76:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1593     05F4  30C3               	movlw	195
  1594     05F5  00F4               	movwf	??_lcd_init+1
  1595     05F6  30CD               	movlw	205
  1596     05F7  00F3               	movwf	??_lcd_init
  1597     05F8                     u617:
  1598     05F8  0BF3               	decfsz	??_lcd_init,f
  1599     05F9  2DF8               	goto	u617
  1600     05FA  0BF4               	decfsz	??_lcd_init+1,f
  1601     05FB  2DF8               	goto	u617
  1602     05FC                     l68:
  1603     05FC  0008               	return
  1604     05FD                     __end_of_lcd_init:
  1605                           
  1606                           	psect	text7
  1607     050C                     __ptext7:	
  1608 ;; *************** function _lcd_command *****************
  1609 ;; Defined at:
  1610 ;;		line 79 in file "ADC_CLASS.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  i               1    wreg     unsigned char 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  i               1    2[COMMON] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0, btemp+1
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         0       0       0       0       0
  1625 ;;      Locals:         1       0       0       0       0
  1626 ;;      Temps:          2       0       0       0       0
  1627 ;;      Totals:         3       0       0       0       0
  1628 ;;Total ram usage:        3 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;;		_lcd_init
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638     050C                     _lcd_command:	
  1639                           ;psect for function _lcd_command
  1640                           
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _lcd_command: [wreg+status,2+status,0+btemp+1]
  1644                           ;lcd_command@i stored from wreg
  1645     050C  00F2               	movwf	lcd_command@i
  1646     050D                     l829:
  1647                           
  1648                           ;ADC_CLASS.c: 80:     PORTC &= ~(0x04);
  1649     050D  30FB               	movlw	251
  1650     050E  00FF               	movwf	btemp+1
  1651     050F  087F               	movf	btemp+1,w
  1652     0510  1283               	bcf	3,5	;RP0=0, select bank0
  1653     0511  1303               	bcf	3,6	;RP1=0, select bank0
  1654     0512  0587               	andwf	7,f	;volatile
  1655     0513                     l831:
  1656                           
  1657                           ;ADC_CLASS.c: 81:     PORTD = i;
  1658     0513  0872               	movf	lcd_command@i,w
  1659     0514  0088               	movwf	8	;volatile
  1660     0515                     l833:
  1661                           
  1662                           ;ADC_CLASS.c: 82:     PORTC |= 0x01;
  1663     0515  1407               	bsf	7,0	;volatile
  1664     0516                     l835:
  1665                           
  1666                           ;ADC_CLASS.c: 83:     PORTC &= ~0x01;
  1667     0516  30FE               	movlw	254
  1668     0517  00FF               	movwf	btemp+1
  1669     0518  087F               	movf	btemp+1,w
  1670     0519  0587               	andwf	7,f	;volatile
  1671                           
  1672                           ;ADC_CLASS.c: 84:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1673     051A  30C3               	movlw	195
  1674     051B  00F1               	movwf	??_lcd_command+1
  1675     051C  30CD               	movlw	205
  1676     051D  00F0               	movwf	??_lcd_command
  1677     051E                     u627:
  1678     051E  0BF0               	decfsz	??_lcd_command,f
  1679     051F  2D1E               	goto	u627
  1680     0520  0BF1               	decfsz	??_lcd_command+1,f
  1681     0521  2D1E               	goto	u627
  1682     0522                     l71:
  1683     0522  0008               	return
  1684     0523                     __end_of_lcd_command:
  1685     007E                     btemp	set	126	;btemp
  1686     007E                     wtemp0	set	126
  1687                           
  1688                           	psect	config
  1689                           
  1690                           ;Config register CONFIG @ 0x2007
  1691                           ;	Oscillator Selection bits
  1692                           ;	FOSC = EXTRC, RC oscillator
  1693                           ;	Watchdog Timer Enable bit
  1694                           ;	WDTE = OFF, WDT disabled
  1695                           ;	Power-up Timer Enable bit
  1696                           ;	PWRTE = OFF, PWRT disabled
  1697                           ;	Brown-out Reset Enable bit
  1698                           ;	BOREN = OFF, BOR disabled
  1699                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1700                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1701                           ;	Data EEPROM Memory Code Protection bit
  1702                           ;	CPD = OFF, Data EEPROM code protection off
  1703                           ;	Flash Program Memory Write Enable bits
  1704                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1705                           ;	In-Circuit Debugger Mode bit
  1706                           ;	DEBUG = 0x1, unprogrammed default
  1707                           ;	Flash Program Memory Code Protection bit
  1708                           ;	CP = OFF, Code protection off
  1709     2007                     	org	8199
  1710     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      48
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    _lcd_output->___lwdiv
    ___lwdiv->___wmul
    _lcd_init->_lcd_command

Critical Paths under _main in BANK0

    _main->_lcd_output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3747
                                             13 COMMON     1     1      0
                                             10 BANK0      2     2      0
                            ___lwdiv
                             ___wmul
                        _lcd_command
                           _lcd_data
                           _lcd_init
                         _lcd_output
 ---------------------------------------------------------------------------------
 (1) _lcd_output                                          10     8      2    2075
                                              0 BANK0     10     8      2
                             ___bmul
                            ___lwdiv
                             ___wmul
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _lcd_command
   _lcd_data
   _lcd_init
     _lcd_command
   _lcd_output
     ___bmul
     ___lwdiv
     ___wmul
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      30       5       60.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 28 19:14:58 2024

                      _m 0030                        pc 0002           ___bmul@product 0071  
                     l60 0649                       l71 0522                       l74 04F6  
                     l91 07E5                       l68 05FC                       _d1 0022  
                     _d2 0020                       _d3 0026                       _d4 0024  
                     fsr 0004      ___wmul@multiplicand 0072                      l203 050B  
                    l177 052F                      l179 0547                      l457 058B  
                    l831 0513                      l911 05A0                      l903 058C  
                    l833 0515                      l921 05D8                      l913 05AE  
                    l905 0590                      l841 04E9                      l835 0516  
                    l923 05E0                      l915 05B6                      l907 0591  
                    l851 0529                      l843 04EA                      l931 06BF  
                    l829 050D                      l925 05EE                      l917 05C4  
                    l909 059A                      l861 04F8                      l853 0536  
                    l845 04EE                      l837 04E4                      l941 0771  
                    l933 06D5                      l927 05F4                      l919 05CA  
                    l871 0505                      l863 04F9                      l855 053D  
                    l847 0523                      l839 04E7                      l951 0795  
                    l943 0779                      l935 06FE                      l873 050A  
                    l865 04FD                      l881 0550                      l857 0543  
                    l849 0525                      l961 07B7                      l953 079B  
                    l945 077F                      l937 0742                      l929 06B9  
                    l867 0501                      l891 0573                      l883 0553  
                    l971 07D7                      l963 07BD                      l955 07A3  
                    l947 0787                      l939 076B                      l869 0503  
                    l893 0579                      l885 055A                      l877 0548  
                    l973 07DF                      l965 07C5                      l957 07A9  
                    l949 078D                      l895 057A                      l887 055E  
                    l879 054A                      l967 07CB                      l959 07AF  
                    l991 0623                      l983 0609                      l975 05FD  
                    l897 0581                      l889 0562                      l969 07D1  
                    l985 0613                      l977 0608                      l899 0587  
                    l987 0617                      l997 0624                      l989 061D  
                    l999 062E                      u300 0543                      u301 0542  
                    u310 04FD                      u311 04FC                      u320 050A  
                    u400 0771                      u321 0509                      u401 0770  
                    u330 0550                      u410 0787                      u331 054F  
                    u411 0786                      u420 078D                      u500 061D  
                    u421 078C                      u501 061C                      u350 0562  
                    u270 0529                      u430 07A3                      u510 0638  
                    u351 0561                      u271 0528                      u431 07A2  
                    u511 0637                      u440 07A9                      u520 064D  
                    u345 0554                      u441 07A8                      u521 064C  
                    u370 0573                      u450 07AF                      u371 0572  
                    u451 07AE                      u460 07C5                      u365 0563  
                    u285 0530                      u461 07C4                      u390 0587  
                    u470 07CB                      u607 05EA                      u391 0586  
                    u375 056F                      u295 0537                      u471 07CA  
                    u480 07D1                      u617 05F8                      u385 057B  
                    u481 07D0                      u537 06B0                      u490 07D7  
                    u627 051E                      u547 04F2                      u491 07D6  
                    u557 05A4                      u567 05B2                      u577 05C0  
                    u587 05CE                      u597 05DC                      fsr0 0004  
                    indf 0000             lcd_command@i 0072                     l1001 0632  
                   l1011 0668                     l1003 0638                     l1021 06AA  
                   l1013 0688                     l1005 0644                     l1015 068E  
                   l1007 0648                     l1017 0699                     l1009 064D  
                   l1019 069F                     _main 05FD                     btemp 007E  
                   _volt 0028              lcd_output@i 0044              lcd_output@m 004C  
                   start 0000        ___bmul@multiplier 0072                    ?_main 0070  
        __end_of___lwdiv 058C                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _msg_1 003B                    _msg_2 0032                    main@i 007D  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E6             __end_of_main 06B9                   ??_main 004E  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E         __end_of_lcd_data 04F7         __end_of_lcd_init 05FD  
                 ___bmul 04F7                   ___wmul 0523                ??___lwdiv 007A  
                 _result 002A  __end_of__initialization 07FC      ___bmul@multiplicand 0070  
         __pcstackCOMMON 0070             __pidataBANK0 04BE               __pbssBANK0 0020  
             __pmaintext 05FD                  ?___bmul 0070                  ?___wmul 0070  
             _lcd_output 06B9                ?_lcd_data 0070                ?_lcd_init 0070  
                _adc_low 002E                  ___lwdiv 0548                  __ptext1 06B9  
                __ptext2 04E3                  __ptext3 0523                  __ptext4 0548  
                __ptext5 04F7                  __ptext6 058C                  __ptext7 050C  
             ??_lcd_data 0070                  clrloop0 04B7               ??_lcd_init 0073  
   end_of_initialization 07FC              ?_lcd_output 0044            ??_lcd_command 0070  
         __end_of___bmul 050C           __end_of___wmul 0548      start_initialization 07E6  
               ??___bmul 0071                 ??___wmul 0074               init_fetch0 04D0  
    __end_of_lcd_command 0523              __pdataBANK0 0032                ___latbits 0002  
          __pcstackBANK0 0044         ___lwdiv@dividend 0078                 ?___lwdiv 0076  
       ___lwdiv@quotient 007A           ___wmul@product 0074                clear_ram0 04B6  
            _lcd_command 050C                lcd_data@i 0072        ___wmul@multiplier 0070  
           ??_lcd_output 0046       __end_of_lcd_output 07E6                 _adc_high 002C  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007C                 _lcd_data 04E3  
               _lcd_init 058C                 init_ram0 04D4             ?_lcd_command 0070  
